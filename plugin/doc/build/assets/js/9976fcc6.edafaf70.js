"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[3404],{8453:(e,r,s)=>{s.d(r,{R:()=>i,x:()=>a});var n=s(6540);const c={},o=n.createContext(c);function i(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),n.createElement(o.Provider,{value:r},e.children)}},8854:(e,r,s)=>{s.d(r,{A:()=>n});const n=s.p+"assets/images/docker-3158549aee80e7d78ffd53edf9c601b5.png"},9619:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>t,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"routing/providers/swarm","title":"Mesh Docker Swarm Routing Documentation","description":"This guide will teach you how to attach labels to your containers, to route traffic and load balance with Mesh and Docker.","source":"@site/docs/routing/providers/swarm.md","sourceDirName":"routing/providers","slug":"/routing/providers/swarm","permalink":"/doc/docs/routing/providers/swarm","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/routing/providers/swarm.md","tags":[],"version":"current","frontMatter":{"title":"Mesh Docker Swarm Routing Documentation","description":"This guide will teach you how to attach labels to your containers, to route traffic and load balance with Mesh and Docker."},"sidebar":"tutorialSidebar","previous":{"title":"service-by-label","permalink":"/doc/docs/routing/providers/service-by-label"},"next":{"title":"Mesh Routers Documentation","permalink":"/doc/docs/routing/routers/"}}');var c=s(4848),o=s(8453);const i={title:"Mesh Docker Swarm Routing Documentation",description:"This guide will teach you how to attach labels to your containers, to route traffic and load balance with Mesh and Docker."},a="Mesh & Docker Swarm",t={},l=[{value:"Configuration Examples",id:"configuration-examples",level:2},{value:"Routing Configuration",id:"routing-configuration",level:2},{value:"General",id:"general",level:3},{value:"Service definition",id:"service-definition",level:4},{value:"Routers",id:"routers",level:3},{value:"Services",id:"services",level:3},{value:"Middleware",id:"middleware",level:3},{value:"TCP",id:"tcp",level:3},{value:"TCP Routers",id:"tcp-routers",level:4},{value:"TCP Services",id:"tcp-services",level:4},{value:"UDP",id:"udp",level:3},{value:"UDP Routers",id:"udp-routers",level:4},{value:"UDP Services",id:"udp-services",level:4},{value:"Specific Provider Options",id:"specific-provider-options",level:3},{value:"<code>Mesh.enable</code>",id:"meshenable",level:4},{value:"<code>Mesh.swarm.network</code>",id:"meshswarmnetwork",level:4},{value:"<code>Mesh.swarm.lbswarm</code>",id:"meshswarmlbswarm",level:4}];function d(e){const r={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(r.header,{children:(0,c.jsx)(r.h1,{id:"mesh--docker-swarm",children:"Mesh & Docker Swarm"})}),"\n",(0,c.jsx)(r.p,{children:"A Story of Labels & Containers"}),"\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.img,{alt:"Swarm",src:s(8854).A+"",width:"719",height:"398"})}),"\n",(0,c.jsx)(r.p,{children:"Attach labels to your containers and let Mesh do the rest!"}),"\n",(0,c.jsx)(r.p,{children:"One of the best feature of Mesh is to delegate the routing configuration to the application level.\nWith Docker Swarm, Mesh can leverage labels attached to a service to generate routing rules."}),"\n",(0,c.jsx)(r.p,{children:'!!! warning "Labels & sensitive data"'}),"\n",(0,c.jsxs)(r.p,{children:["We recommend to ",(0,c.jsx)(r.em,{children:"not"})," use labels to store sensitive data (certificates, credentials, etc).\nInstead, we recommend to store sensitive data in a safer storage (secrets, file, etc)."]}),"\n",(0,c.jsx)(r.h2,{id:"configuration-examples",children:"Configuration Examples"}),"\n",(0,c.jsx)(r.p,{children:'??? example "Configuring Docker Swarm & Deploying / Exposing one Service"'}),"\n",(0,c.jsx)(r.p,{children:"Enabling the docker provider (Swarm Mode)"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'providers:\n  swarm:\n    # swarm classic (1.12-)\n    # endpoint: "tcp://127.0.0.1:2375"\n    # docker swarm mode (1.12+)\n    endpoint: "tcp://127.0.0.1:2377"\n'})}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.swarm]\n  # swarm classic (1.12-)\n  # endpoint = "tcp://127.0.0.1:2375"\n  # docker swarm mode (1.12+)\n  endpoint = "tcp://127.0.0.1:2377"\n'})}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",metastring:'tab="CLI"',children:"# swarm classic (1.12-)\n# --providers.swarm.endpoint=tcp://127.0.0.1:2375\n# docker swarm mode (1.12+)\n--providers.swarm.endpoint=tcp://127.0.0.1:2377\n"})}),"\n",(0,c.jsx)(r.p,{children:"Attach labels to services (not containers) while in Swarm mode (in your Docker compose file).\nWhen there is only one service, and the router does not specify a service,\nthen that service is automatically assigned to the router."}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'version: "3"\nservices:\n  my-container:\n    deploy:\n      labels:\n        - Mesh.http.routers.my-container.rule=Host(`example.com`)\n        - Mesh.http.services.my-container-service.loadbalancer.server.port=8080\n'})}),"\n",(0,c.jsxs)(r.p,{children:['!!! important "Labels in Docker Swarm Mode"\nWhile in Swarm Mode, Mesh uses labels found on services, not on individual containers.\nTherefore, if you use a compose file with Swarm Mode, labels should be defined in the ',(0,c.jsx)(r.code,{children:"deploy"})," part of your service.\nThis behavior is only enabled for docker-compose version 3+ (",(0,c.jsx)(r.a,{href:"https://docs.docker.com/compose/compose-file/compose-file-v3/#labels-1",children:"Compose file reference"}),")."]}),"\n",(0,c.jsx)(r.p,{children:'??? example "Specify a Custom Port for the Container"'}),"\n",(0,c.jsxs)(r.p,{children:["Forward requests for ",(0,c.jsx)(r.code,{children:"http://example.com"})," to ",(0,c.jsx)(r.code,{children:"http://<private IP of container>:12345"}),":"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'version: "3"\nservices:\n  my-container:\n    # ...\n    deploy:\n      labels:\n        - Mesh.http.routers.my-container.rule=Host(`example.com`)\n        - Mesh.http.routers.my-container.service=my-service"\n        # Tell Mesh to use the port 12345 to connect to `my-container`\n        - Mesh.http.services.my-service.loadbalancer.server.port=12345\n'})}),"\n",(0,c.jsxs)(r.p,{children:['!!! important "Mesh Connecting to the Wrong Port: ',(0,c.jsx)(r.code,{children:"HTTP/502 Gateway Error"}),'"\nBy default, Mesh uses the lowest exposed port of a container as detailed in\n',(0,c.jsx)(r.a,{href:"/doc/docs/routing/providers/swarm#port-detection",children:"Port Detection"})," of the Swarm provider."]}),"\n",(0,c.jsxs)(r.p,{children:["Setting the label ",(0,c.jsx)(r.code,{children:"Mesh.http.services.xxx.loadbalancer.server.port"}),"\noverrides this behavior."]}),"\n",(0,c.jsx)(r.p,{children:'??? example "Specifying more than one router and service per container"'}),"\n",(0,c.jsx)(r.p,{children:"Forwarding requests to more than one port on a container requires referencing the service loadbalancer port definition using the service parameter on the router."}),"\n",(0,c.jsxs)(r.p,{children:["In this example, requests are forwarded for ",(0,c.jsx)(r.code,{children:"http://example-a.com"})," to ",(0,c.jsx)(r.code,{children:"http://<private IP of container>:8000"})," in addition to ",(0,c.jsx)(r.code,{children:"http://example-b.com"})," forwarding to ",(0,c.jsx)(r.code,{children:"http://<private IP of container>:9000"}),":"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'version: "3"\nservices:\n  my-container:\n    # ...\n    deploy:\n      labels:\n        - Mesh.http.routers.www-router.rule=Host(`example-a.com`)\n        - Mesh.http.routers.www-router.service=www-service\n        - Mesh.http.services.www-service.loadbalancer.server.port=8000\n        - Mesh.http.routers.admin-router.rule=Host(`example-b.com`)\n        - Mesh.http.routers.admin-router.service=admin-service\n        - Mesh.http.services.admin-service.loadbalancer.server.port=9000\n'})}),"\n",(0,c.jsx)(r.h2,{id:"routing-configuration",children:"Routing Configuration"}),"\n",(0,c.jsx)(r.p,{children:'!!! info "Labels"'}),"\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsx)(r.li,{children:"Labels are case-insensitive."}),"\n",(0,c.jsxs)(r.li,{children:["The complete list of labels can be found in ",(0,c.jsx)(r.a,{href:"/doc/docs/reference/dynamic-configuration/docker",children:"the reference page"}),"."]}),"\n"]}),"\n",(0,c.jsx)(r.h3,{id:"general",children:"General"}),"\n",(0,c.jsxs)(r.p,{children:["Mesh creates, for each container, a corresponding ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/",children:"service"})," and ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/",children:"router"}),"."]}),"\n",(0,c.jsxs)(r.p,{children:["The Service automatically gets a server per instance of the container,\nand the router automatically gets a rule defined by ",(0,c.jsx)(r.code,{children:"defaultRule"})," (if no rule for it was defined in labels)."]}),"\n",(0,c.jsx)(r.h4,{id:"service-definition",children:"Service definition"}),"\n",(0,c.jsx)(r.p,{children:'??? example "Automatic service assignment with labels"'}),"\n",(0,c.jsx)(r.p,{children:"With labels in a compose file"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'labels:\n  - "Mesh.http.routers.myproxy.rule=Host(`example.net`)"\n  # service myservice gets automatically assigned to router myproxy\n  - "Mesh.http.services.myservice.loadbalancer.server.port=80"\n'})}),"\n",(0,c.jsx)(r.p,{children:'??? example "Automatic service creation and assignment with labels"'}),"\n",(0,c.jsx)(r.p,{children:"With labels in a compose file"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'labels:\n  # no service specified or defined and yet one gets automatically created\n  # and assigned to router myproxy.\n  - "Mesh.http.routers.myproxy.rule=Host(`example.net`)"\n'})}),"\n",(0,c.jsx)(r.h3,{id:"routers",children:"Routers"}),"\n",(0,c.jsxs)(r.p,{children:["To update the configuration of the Router automatically attached to the container,\nadd labels starting with ",(0,c.jsx)(r.code,{children:"Mesh.http.routers.<name-of-your-choice>."})," and followed by the option you want to change."]}),"\n",(0,c.jsxs)(r.p,{children:["For example, to change the rule, you could add the label ",(0,c.jsx)(r.code,{children:"Mesh.http.routers.my-container.rule=Host(`example.com`)"}),"."]}),"\n",(0,c.jsxs)(r.p,{children:['!!! warning "The character ',(0,c.jsx)(r.code,{children:"@"})," is not authorized in the router name ",(0,c.jsx)(r.code,{children:"<router_name>"}),'."']}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.routers.<router_name>.rule"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#rule",children:"rule"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.routers.myrouter.rule=Host(`example.com`)"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.routers.<router_name>.entrypoints"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#entrypoints",children:"entry points"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.routers.myrouter.entrypoints=ep1,ep2"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.routers.<router_name>.middlewares"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#middlewares",children:"middlewares"})," and ",(0,c.jsx)(r.a,{href:"/doc/docs/middlewares/overview",children:"middlewares overview"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.routers.myrouter.middlewares=auth,prefix,cb"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.routers.<router_name>.service"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#service",children:"service"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.routers.myrouter.service=myservice"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.routers.<router_name>.tls"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#tls",children:"tls"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.routers.myrouter.tls=true"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.routers.<router_name>.tls.certresolver"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#certresolver",children:"certResolver"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.routers.myrouter.tls.certresolver=myresolver"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.routers.<router_name>.tls.domains[n].main"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#domains",children:"domains"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.routers.myrouter.tls.domains[0].main=example.org"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.routers.<router_name>.tls.domains[n].sans"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#domains",children:"domains"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.routers.myrouter.tls.domains[0].sans=test.example.org,dev.example.org"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.routers.<router_name>.tls.options"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#options",children:"options"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.routers.myrouter.tls.options=foobar"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.routers.<router_name>.observability.accesslogs"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See accesslogs ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#accesslogs",children:"option"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.routers.myrouter.observability.accesslogs=true"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.routers.<router_name>.observability.metrics"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See metrics ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#metrics",children:"option"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.routers.myrouter.observability.metrics=true"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.routers.<router_name>.observability.tracing"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See tracing ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#tracing",children:"option"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.routers.myrouter.observability.tracing=true"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.routers.<router_name>.priority"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#priority",children:"priority"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.routers.myrouter.priority=42"\n'})}),"\n",(0,c.jsx)(r.h3,{id:"services",children:"Services"}),"\n",(0,c.jsxs)(r.p,{children:["To update the configuration of the Service automatically attached to the container,\nadd labels starting with ",(0,c.jsx)(r.code,{children:"Mesh.http.services.<name-of-your-choice>."}),", followed by the option you want to change."]}),"\n",(0,c.jsxs)(r.p,{children:["For example, to change the ",(0,c.jsx)(r.code,{children:"passHostHeader"})," behavior,\nyou'd add the label ",(0,c.jsx)(r.code,{children:"Mesh.http.services.<name-of-your-choice>.loadbalancer.passhostheader=false"}),"."]}),"\n",(0,c.jsxs)(r.p,{children:['!!! warning "The character ',(0,c.jsx)(r.code,{children:"@"})," is not authorized in the service name ",(0,c.jsx)(r.code,{children:"<service_name>"}),'."']}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.server.port"}),'"']}),"\n",(0,c.jsx)(r.p,{children:"Registers a port.\nUseful when the container exposes multiples ports."}),"\n",(0,c.jsxs)(r.p,{children:["Mandatory for Docker Swarm (see the section ",(0,c.jsx)(r.a,{href:"/doc/docs/providers/swarm#port-detection",children:'"Port Detection with Docker Swarm"'}),")."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.server.port=8080"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.server.scheme"}),'"']}),"\n",(0,c.jsx)(r.p,{children:"Overrides the default scheme."}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.server.scheme=http"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.server.url"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["Defines the service URL.\nThis option cannot be used in combination with ",(0,c.jsx)(r.code,{children:"port"})," or ",(0,c.jsx)(r.code,{children:"scheme"})," definition."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.server.url=http://foobar:8080"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.serverstransport"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["Allows to reference a ServersTransport resource that is defined either with the File provider or the Kubernetes CRD one.\nSee ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#serverstransport",children:"serverstransport"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.<service_name>.loadbalancer.serverstransport=foobar@file"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.passhostheader"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#pass-host-header",children:"pass Host header"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.passhostheader=true"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.healthcheck.headers.<header_name>"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#health-check",children:"health check"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.healthcheck.headers.X-Foo=foobar"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.healthcheck.hostname"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#health-check",children:"health check"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.healthcheck.hostname=example.org"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.healthcheck.interval"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#health-check",children:"health check"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.healthcheck.interval=10s"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.healthcheck.unhealthyinterval"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#health-check",children:"health check"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.healthcheck.unhealthyinterval=10s"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.healthcheck.path"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#health-check",children:"health check"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.healthcheck.path=/foo"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.healthcheck.method"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#health-check",children:"health check"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.healthcheck.method=foobar"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.healthcheck.status"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#health-check",children:"health check"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.healthcheck.status=42"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.healthcheck.port"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#health-check",children:"health check"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.healthcheck.port=42"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.healthcheck.scheme"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#health-check",children:"health check"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.healthcheck.scheme=http"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.healthcheck.timeout"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#health-check",children:"health check"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.healthcheck.timeout=10s"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.healthcheck.followredirects"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#health-check",children:"health check"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.healthcheck.followredirects=true"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.sticky.cookie"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#sticky-sessions",children:"sticky sessions"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.sticky.cookie=true"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.sticky.cookie.httponly"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#sticky-sessions",children:"sticky sessions"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.sticky.cookie.httponly=true"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.sticky.cookie.name"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#sticky-sessions",children:"sticky sessions"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.sticky.cookie.name=foobar"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.sticky.cookie.path"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#sticky-sessions",children:"sticky sessions"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.sticky.cookie.path=/foobar"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.sticky.cookie.secure"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#sticky-sessions",children:"sticky sessions"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.sticky.cookie.secure=true"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.sticky.cookie.samesite"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#sticky-sessions",children:"sticky sessions"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.sticky.cookie.samesite=none"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.sticky.cookie.domain"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#sticky-sessions",children:"sticky sessions"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.sticky.cookie.domain=foo.com"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.responseforwarding.flushinterval"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#response-forwarding",children:"response forwarding"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.responseforwarding.flushinterval=10"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.http.services.<service_name>.loadbalancer.strategy"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#load-balancing-strategy",children:"load balancing strategy"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.http.services.myservice.loadbalancer.strategy=p2c"\n'})}),"\n",(0,c.jsx)(r.h3,{id:"middleware",children:"Middleware"}),"\n",(0,c.jsxs)(r.p,{children:["You can declare pieces of middleware using labels starting with ",(0,c.jsx)(r.code,{children:"Mesh.http.middlewares.<name-of-your-choice>."}),",\nfollowed by the middleware type/options."]}),"\n",(0,c.jsxs)(r.p,{children:["For example, to declare a middleware ",(0,c.jsx)(r.a,{href:"/doc/docs/middlewares/http/redirectscheme",children:(0,c.jsx)(r.code,{children:"redirectscheme"})})," named ",(0,c.jsx)(r.code,{children:"my-redirect"}),",\nyou'd write ",(0,c.jsx)(r.code,{children:"Mesh.http.middlewares.my-redirect.redirectscheme.scheme=https"}),"."]}),"\n",(0,c.jsxs)(r.p,{children:["More information about available middlewares in the dedicated ",(0,c.jsx)(r.a,{href:"/doc/docs/middlewares/overview",children:"middlewares section"}),"."]}),"\n",(0,c.jsxs)(r.p,{children:['!!! warning "The character ',(0,c.jsx)(r.code,{children:"@"}),' is not authorized in the middleware name."']}),"\n",(0,c.jsx)(r.p,{children:'??? example "Declaring and Referencing a Middleware"'}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:"services:\n  my-container:\n    # ...\n    deploy:\n    labels:\n    # Declaring a middleware\n    - Mesh.http.middlewares.my-redirect.redirectscheme.scheme=https\n        # Referencing a middleware\n        - Mesh.http.routers.my-container.middlewares=my-redirect\n"})}),"\n",(0,c.jsx)(r.p,{children:'!!! warning "Conflicts in Declaration"'}),"\n",(0,c.jsx)(r.p,{children:"If you declare multiple middleware with the same name but with different parameters, the middleware fails to be declared."}),"\n",(0,c.jsx)(r.h3,{id:"tcp",children:"TCP"}),"\n",(0,c.jsx)(r.p,{children:"You can declare TCP Routers and/or Services using labels."}),"\n",(0,c.jsx)(r.p,{children:'??? example "Declaring TCP Routers and Services"'}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'services:\n  my-container:\n    # ...\n    deploy:\n      labels:\n        - "Mesh.tcp.routers.my-router.rule=HostSNI(`example.com`)"\n        - "Mesh.tcp.routers.my-router.tls=true"\n        - "Mesh.tcp.services.my-service.loadbalancer.server.port=4123"\n'})}),"\n",(0,c.jsx)(r.p,{children:'!!! warning "TCP and HTTP"'}),"\n",(0,c.jsx)(r.p,{children:"If you declare a TCP Router/Service, it will prevent Mesh from automatically creating an HTTP Router/Service (like it does by default if no TCP Router/Service is defined).\nYou can declare both a TCP Router/Service and an HTTP Router/Service for the same container (but you have to do so manually)."}),"\n",(0,c.jsx)(r.h4,{id:"tcp-routers",children:"TCP Routers"}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.tcp.routers.<router_name>.entrypoints"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#entrypoints_1",children:"entry points"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.tcp.routers.mytcprouter.entrypoints=ep1,ep2"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.tcp.routers.<router_name>.rule"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#rule_1",children:"rule"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.tcp.routers.mytcprouter.rule=HostSNI(`example.com`)"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.tcp.routers.<router_name>.service"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#services",children:"service"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.tcp.routers.mytcprouter.service=myservice"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.tcp.routers.<router_name>.tls"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#tls_1",children:"TLS"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.tcp.routers.mytcprouter.tls=true"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.tcp.routers.<router_name>.tls.certresolver"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#certresolver_1",children:"certResolver"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.tcp.routers.mytcprouter.tls.certresolver=myresolver"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.tcp.routers.<router_name>.tls.domains[n].main"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#domains_1",children:"domains"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.tcp.routers.mytcprouter.tls.domains[0].main=example.org"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.tcp.routers.<router_name>.tls.domains[n].sans"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#domains_1",children:"domains"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.tcp.routers.mytcprouter.tls.domains[0].sans=test.example.org,dev.example.org"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.tcp.routers.<router_name>.tls.options"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#options_1",children:"options"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.tcp.routers.mytcprouter.tls.options=mysoptions"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.tcp.routers.<router_name>.tls.passthrough"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#tls_1",children:"TLS"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.tcp.routers.mytcprouter.tls.passthrough=true"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.tcp.routers.<router_name>.priority"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#priority_1",children:"priority"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.tcp.routers.myrouter.priority=42"\n'})}),"\n",(0,c.jsx)(r.h4,{id:"tcp-services",children:"TCP Services"}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.tcp.services.<service_name>.loadbalancer.server.port"}),'"']}),"\n",(0,c.jsx)(r.p,{children:"Registers a port of the application."}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.tcp.services.mytcpservice.loadbalancer.server.port=423"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.tcp.services.<service_name>.loadbalancer.server.tls"}),'"']}),"\n",(0,c.jsx)(r.p,{children:"Determines whether to use TLS when dialing with the backend."}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.tcp.services.mytcpservice.loadbalancer.server.tls=true"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.tcp.services.<service_name>.loadbalancer.proxyprotocol.version"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#proxy-protocol",children:"PROXY protocol"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.tcp.services.mytcpservice.loadbalancer.proxyprotocol.version=1"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.tcp.services.<service_name>.loadbalancer.serverstransport"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["Allows to reference a ServersTransport resource that is defined either with the File provider or the Kubernetes CRD one.\nSee ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/services/#serverstransport_2",children:"serverstransport"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.tcp.services.<service_name>.loadbalancer.serverstransport=foobar@file"\n'})}),"\n",(0,c.jsx)(r.h3,{id:"udp",children:"UDP"}),"\n",(0,c.jsx)(r.p,{children:"You can declare UDP Routers and/or Services using labels."}),"\n",(0,c.jsx)(r.p,{children:'??? example "Declaring UDP Routers and Services"'}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'services:\n  my-container:\n    # ...\n    deploy:\n      labels:\n        - "Mesh.udp.routers.my-router.entrypoints=udp"\n        - "Mesh.udp.services.my-service.loadbalancer.server.port=4123"\n'})}),"\n",(0,c.jsx)(r.p,{children:'!!! warning "UDP and HTTP"'}),"\n",(0,c.jsx)(r.p,{children:"If you declare a UDP Router/Service, it will prevent Mesh from automatically creating an HTTP Router/Service (like it does by default if no UDP Router/Service is defined).\nYou can declare both a UDP Router/Service and an HTTP Router/Service for the same container (but you have to do so manually)."}),"\n",(0,c.jsx)(r.h4,{id:"udp-routers",children:"UDP Routers"}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.udp.routers.<router_name>.entrypoints"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#entrypoints_2",children:"entry points"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.udp.routers.myudprouter.entrypoints=ep1,ep2"\n'})}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.udp.routers.<router_name>.service"}),'"']}),"\n",(0,c.jsxs)(r.p,{children:["See ",(0,c.jsx)(r.a,{href:"/doc/docs/routing/routers/#services_1",children:"service"})," for more information."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.udp.routers.myudprouter.service=myservice"\n'})}),"\n",(0,c.jsx)(r.h4,{id:"udp-services",children:"UDP Services"}),"\n",(0,c.jsxs)(r.p,{children:['??? info "',(0,c.jsx)(r.code,{children:"Mesh.udp.services.<service_name>.loadbalancer.server.port"}),'"']}),"\n",(0,c.jsx)(r.p,{children:"Registers a port of the application."}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.udp.services.myudpservice.loadbalancer.server.port=423"\n'})}),"\n",(0,c.jsx)(r.h3,{id:"specific-provider-options",children:"Specific Provider Options"}),"\n",(0,c.jsx)(r.h4,{id:"meshenable",children:(0,c.jsx)(r.code,{children:"Mesh.enable"})}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.enable=true"\n'})}),"\n",(0,c.jsxs)(r.p,{children:["You can tell Mesh to consider (or not) the container by setting ",(0,c.jsx)(r.code,{children:"Mesh.enable"})," to true or false."]}),"\n",(0,c.jsxs)(r.p,{children:["This option overrides the value of ",(0,c.jsx)(r.code,{children:"exposedByDefault"}),"."]}),"\n",(0,c.jsx)(r.h4,{id:"meshswarmnetwork",children:(0,c.jsx)(r.code,{children:"Mesh.swarm.network"})}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.swarm.network=mynetwork"\n'})}),"\n",(0,c.jsx)(r.p,{children:"Overrides the default docker network to use for connections to the container."}),"\n",(0,c.jsxs)(r.p,{children:["If a container is linked to several networks, be sure to set the proper network name (you can check this with ",(0,c.jsx)(r.code,{children:"docker inspect <container_id>"}),"),\notherwise it will randomly pick one (depending on how docker is returning them)."]}),"\n",(0,c.jsxs)(r.p,{children:["!!! warning\nWhen deploying a stack from a compose file ",(0,c.jsx)(r.code,{children:"stack"}),", the networks defined are prefixed with ",(0,c.jsx)(r.code,{children:"stack"}),"."]}),"\n",(0,c.jsx)(r.h4,{id:"meshswarmlbswarm",children:(0,c.jsx)(r.code,{children:"Mesh.swarm.lbswarm"})}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-yaml",children:'- "Mesh.docker.lbswarm=true"\n'})}),"\n",(0,c.jsx)(r.p,{children:"Enables Swarm's inbuilt load balancer (only relevant in Swarm Mode)."}),"\n",(0,c.jsx)(r.p,{children:"If you enable this option, Mesh will use the virtual IP provided by docker swarm instead of the containers IPs.\nWhich means that Mesh will not perform any kind of load balancing and will delegate this task to swarm."})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,c.jsx)(r,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}}}]);