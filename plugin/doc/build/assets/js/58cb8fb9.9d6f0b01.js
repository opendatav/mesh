"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[2350],{6451:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"user-guides/cert-manager","title":"Integration with cert-manager","description":"Learn how to use cert-manager certificates with Mesh Proxy for your routers. Read the technical documentation.","source":"@site/docs/user-guides/cert-manager.md","sourceDirName":"user-guides","slug":"/user-guides/cert-manager","permalink":"/doc/docs/user-guides/cert-manager","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/user-guides/cert-manager.md","tags":[],"version":"current","frontMatter":{"title":"Integration with cert-manager","description":"Learn how to use cert-manager certificates with Mesh Proxy for your routers. Read the technical documentation."},"sidebar":"tutorialSidebar","previous":{"title":"TLS Certificates in Multi\u2011Tenant Kubernetes","permalink":"/doc/docs/security/tls-certs-in-multi-tenant-kubernetes"},"next":{"title":"Mesh CRD TLS Documentation","permalink":"/doc/docs/user-guides/crd-acme/"}}');var s=t(4848),a=t(8453);const i={title:"Integration with cert-manager",description:"Learn how to use cert-manager certificates with Mesh Proxy for your routers. Read the technical documentation."},o="cert-manager",c={},h=[{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"Example with ACME and HTTP challenge",id:"example-with-acme-and-http-challenge",level:2},{value:"With an Ingress",id:"with-an-ingress",level:3},{value:"With an IngressRoute",id:"with-an-ingressroute",level:3},{value:"With an HTTPRoute",id:"with-an-httproute",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"cert-manager",children:"cert-manager"})}),"\n",(0,s.jsx)(n.p,{children:"Provision TLS Certificate for Mesh Proxy with cert-manager on Kubernetes"}),"\n",(0,s.jsx)(n.h2,{id:"pre-requisites",children:"Pre-requisites"}),"\n",(0,s.jsx)(n.p,{children:"To obtain certificates from cert-manager that can be used in Mesh Proxy, you will need to:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Have cert-manager properly configured"}),"\n",(0,s.jsx)(n.li,{children:"Have Mesh Proxy configured"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The certificates can then be used in an Ingress / IngressRoute / HTTPRoute."}),"\n",(0,s.jsx)(n.h2,{id:"example-with-acme-and-http-challenge",children:"Example with ACME and HTTP challenge"}),"\n",(0,s.jsx)(n.p,{children:'!!! example "ACME issuer for HTTP challenge"'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="Issuer"',children:"apiVersion: cert-manager.io/v1\nkind: Issuer\nmetadata:\n  name: acme\n\nspec:\n  acme:\n    # Production server is on https://acme-v02.api.letsencrypt.org/directory\n    # Use staging by default.\n    server: https://acme-staging-v02.api.letsencrypt.org/directory\n    privateKeySecretRef:\n      name: acme\n    solvers:\n      - http01:\n          ingress:\n            ingressClassName: Mesh\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="Certificate"',children:'apiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: whoami\n  namespace: Mesh\nspec:\n  secretName: domain-tls        # <===  Name of secret where the generated certificate will be stored.\n  dnsNames:\n    - "domain.example.com"\n  issuerRef:\n    name: acme\n    kind: Issuer\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Let's see now how to use it with the various Kubernetes providers of Mesh Proxy.\nThe enabled providers can be seen on the ",(0,s.jsx)(n.a,{href:"../../operations/dashboard/",children:"dashboard"})," of Mesh Proxy and also in the INFO logs when Mesh Proxy starts."]}),"\n",(0,s.jsx)(n.h3,{id:"with-an-ingress",children:"With an Ingress"}),"\n",(0,s.jsxs)(n.p,{children:["To use this certificate with an Ingress, the ",(0,s.jsx)(n.a,{href:"../../providers/kubernetes-ingress/",children:"Kubernetes Ingress"})," provider has to be enabled."]}),"\n",(0,s.jsx)(n.p,{children:"!!! info Mesh Helm Chart"}),"\n",(0,s.jsx)(n.p,{children:"This provider is enabled by default in the Mesh Helm Chart."}),"\n",(0,s.jsx)(n.p,{children:'!!! example "Route with this Certificate"'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="Ingress"',children:"apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: domain\n  annotations:\n    Mesh.ingress.kubernetes.io/router.entrypoints: websecure\n\nspec:\n  rules:\n  - host: domain.example.com\n    http:\n      paths:\n      - path: /\n        pathType: Exact\n        backend:\n          service:\n            name:  domain-service\n            port:\n              number: 80\n  tls:\n  - secretName: domain-tls # <=== Use the name defined in Certificate resource.\n"})}),"\n",(0,s.jsx)(n.h3,{id:"with-an-ingressroute",children:"With an IngressRoute"}),"\n",(0,s.jsxs)(n.p,{children:["To use this certificate with an IngressRoute, the ",(0,s.jsx)(n.a,{href:"../../providers/kubernetes-crd",children:"Kubernetes CRD"})," provider has to be enabled."]}),"\n",(0,s.jsx)(n.p,{children:"!!! info Mesh Helm Chart"}),"\n",(0,s.jsx)(n.p,{children:"This provider is enabled by default in the Mesh Helm Chart."}),"\n",(0,s.jsx)(n.p,{children:'!!! example "Route with this Certificate"'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="IngressRoute"',children:"apiVersion: Mesh.io/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: domain\n\nspec:\n  entryPoints:\n    - websecure\n\n  routes:\n  - match: Host(`domain.example.com`)\n    kind: Rule\n    services:\n    - name: domain-service\n      port: 80\n  tls:\n    secretName: domain-tls    # <=== Use the name defined in Certificate resource.\n"})}),"\n",(0,s.jsx)(n.h3,{id:"with-an-httproute",children:"With an HTTPRoute"}),"\n",(0,s.jsxs)(n.p,{children:["To use this certificate with an HTTPRoute, the ",(0,s.jsx)(n.a,{href:"../../routing/providers/kubernetes-gateway",children:"Kubernetes Gateway"})," provider has to be enabled."]}),"\n",(0,s.jsx)(n.p,{children:"!!! info Mesh Helm Chart"}),"\n",(0,s.jsx)(n.p,{children:"This provider is disabled by default in the Mesh Helm Chart."}),"\n",(0,s.jsx)(n.p,{children:'!!! example "Route with this Certificate"'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="HTTPRoute"',children:"---\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: domain-gateway\nspec:\n  gatewayClassName: Mesh\n  listeners:\n    - name: websecure\n      port: 8443\n      protocol: HTTPS\n      hostname: domain.example.com\n      tls:\n        certificateRefs:\n          - name: domain-tls  # <==== Use the name defined in Certificate resource.\n---\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: domain\nspec:\n  parentRefs:\n    - name: domain-gateway\n  hostnames:\n    - domain.example.com\n  rules:\n    - matches:\n        - path:\n            type: Exact\n            value: /\n\n      backendRefs:\n        - name: domain-service\n          port: 80\n          weight: 1\n"})}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.p,{children:"There are multiple event sources available to investigate when using cert-manager:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Kubernetes events in ",(0,s.jsx)(n.code,{children:"Certificate"})," and ",(0,s.jsx)(n.code,{children:"CertificateRequest"})," resources"]}),"\n",(0,s.jsx)(n.li,{children:"cert-manager logs"}),"\n",(0,s.jsx)(n.li,{children:"Dashboard and/or (debug) logs from Mesh Proxy"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["cert-manager documentation provides a ",(0,s.jsx)(n.a,{href:"https://cert-manager.io/docs/troubleshooting/",children:"detailed guide"})," on how to troubleshoot a certificate request."]})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var r=t(6540);const s={},a=r.createContext(s);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);