"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[2996],{8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>s});var i=n(6540);const t={},a=i.createContext(t);function o(e){const r=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(a.Provider,{value:r},e.children)}},9746:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"reference/routing-configuration/tcp/middlewares/overview","title":"Mesh Proxy TCP Middleware Overview","description":"Read the official Mesh Proxy documentation for an overview of the available TCP middleware.","source":"@site/docs/reference/routing-configuration/tcp/middlewares/overview.md","sourceDirName":"reference/routing-configuration/tcp/middlewares","slug":"/reference/routing-configuration/tcp/middlewares/overview","permalink":"/doc/docs/reference/routing-configuration/tcp/middlewares/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/reference/routing-configuration/tcp/middlewares/overview.md","tags":[],"version":"current","frontMatter":{"title":"Mesh Proxy TCP Middleware Overview","description":"Read the official Mesh Proxy documentation for an overview of the available TCP middleware."},"sidebar":"tutorialSidebar","previous":{"title":"Mesh TCP Middlewares IPAllowList","permalink":"/doc/docs/reference/routing-configuration/tcp/middlewares/ipallowlist"},"next":{"title":"Mesh TCP Routers Rules & Priority Documentation","permalink":"/doc/docs/reference/routing-configuration/tcp/router/rules-and-priority"}}');var t=n(4848),a=n(8453);const o={title:"Mesh Proxy TCP Middleware Overview",description:"Read the official Mesh Proxy documentation for an overview of the available TCP middleware."},s="TCP Middleware Overview",l={},d=[{value:"Configuration Example",id:"configuration-example",level:2},{value:"Available TCP Middlewares",id:"available-tcp-middlewares",level:2}];function c(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"tcp-middleware-overview",children:"TCP Middleware Overview"})}),"\n",(0,t.jsx)(r.p,{children:"Attached to the routers, pieces of middleware are a means of tweaking the requests before they are sent to your service (or before the answer from the services are sent to the clients)."}),"\n",(0,t.jsx)(r.p,{children:"There are several available middlewares in Mesh, some can modify the request, the headers, some are in charge of redirections, some add authentication, and so on."}),"\n",(0,t.jsx)(r.p,{children:"Middlewares that use the same protocol can be combined into chains to fit every scenario."}),"\n",(0,t.jsx)(r.h2,{id:"configuration-example",children:"Configuration Example"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yaml",metastring:'tab="Structured (YAML)"',children:'# As YAML Configuration File\ntcp:\n  routers:\n    router1:\n      service: myService\n      middlewares:\n        - "foo-ip-allowlist"\n      rule: "Host(`example.com`)"\n\n  middlewares:\n    foo-ip-allowlist:\n      ipAllowList:\n        sourceRange:\n          - "127.0.0.1/32"\n          - "192.168.1.7"\n\n  services:\n    service1:\n      loadBalancer:\n        servers:\n        - address: "10.0.0.10:4000"\n        - address: "10.0.0.11:4000"\n'})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-toml",metastring:'tab="Structured (TOML)"',children:'# As TOML Configuration File\n[tcp.routers]\n  [tcp.routers.router1]\n    service = "myService"\n    middlewares = ["foo-ip-allowlist"]\n    rule = "Host(`example.com`)"\n\n[tcp.middlewares]\n  [tcp.middlewares.foo-ip-allowlist.ipAllowList]\n    sourceRange = ["127.0.0.1/32", "192.168.1.7"]\n\n[tcp.services]\n  [tcp.services.service1]\n    [tcp.services.service1.loadBalancer]\n    [[tcp.services.service1.loadBalancer.servers]]\n      address = "10.0.0.10:4000"\n    [[tcp.services.service1.loadBalancer.servers]]\n      address = "10.0.0.11:4000"\n'})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yaml",metastring:'tab="Labels"',children:'labels:\n  # Create a middleware named `foo-ip-allowlist`\n  - "Mesh.tcp.middlewares.foo-ip-allowlist.ipallowlist.sourcerange=127.0.0.1/32, 192.168.1.7"\n  # Apply the middleware named `foo-ip-allowlist` to the router named `router1`\n  - "Mesh.tcp.routers.router1.middlewares=foo-ip-allowlist@docker"\n'})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-json",metastring:'tab="Consul Catalog" ',children:'{\n  //...\n  "Tags" : [\n    // Create a middleware named `foo-ip-allowlist`\n    "Mesh.tcp.middlewares.foo-ip-allowlist.ipallowlist.sourcerange=127.0.0.1/32, 192.168.1.7",\n    // Apply the middleware named `foo-ip-allowlist` to the router named `router1`\n    "Mesh.tcp.routers.router1.middlewares=foo-ip-allowlist@consulcatalog"\n  ]\n}\n\n'})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yaml",metastring:'tab="Kubernetes"',children:"---\napiVersion: Mesh.io/v1alpha1\nkind: MiddlewareTCP\nmetadata:\n  name: foo-ip-allowlist\nspec:\n  ipAllowList:\n    sourcerange:\n      - 127.0.0.1/32\n      - 192.168.1.7\n\n---\napiVersion: Mesh.io/v1alpha1\nkind: IngressRouteTCP\nmetadata:\n  name: ingressroute\nspec:\n# more fields...\n  routes:\n    # more fields...\n    middlewares:\n      - name: foo-ip-allowlist\n"})}),"\n",(0,t.jsx)(r.h2,{id:"available-tcp-middlewares",children:"Available TCP Middlewares"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Middleware"}),(0,t.jsx)(r.th,{children:"Purpose"}),(0,t.jsx)(r.th,{children:"Area"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"/doc/docs/reference/routing-configuration/tcp/middlewares/inflightconn",children:"InFlightConn"})}),(0,t.jsx)(r.td,{children:"Limits the number of simultaneous connections."}),(0,t.jsx)(r.td,{children:"Security, Request lifecycle"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"/doc/docs/reference/routing-configuration/tcp/middlewares/ipallowlist",children:"IPAllowList"})}),(0,t.jsx)(r.td,{children:"Limit the allowed client IPs."}),(0,t.jsx)(r.td,{children:"Security, Request lifecycle"})]})]})]})]})}function u(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);