"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[281],{5596:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>r,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"middlewares/tcp/ipallowlist","title":"Mesh TCP Middlewares IPAllowList","description":"Learn how to use IPAllowList in TCP middleware for limiting clients to specific IPs in Mesh Proxy. Read the technical documentation.","source":"@site/docs/middlewares/tcp/ipallowlist.md","sourceDirName":"middlewares/tcp","slug":"/middlewares/tcp/ipallowlist","permalink":"/doc/docs/middlewares/tcp/ipallowlist","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/middlewares/tcp/ipallowlist.md","tags":[],"version":"current","frontMatter":{"title":"Mesh TCP Middlewares IPAllowList","description":"Learn how to use IPAllowList in TCP middleware for limiting clients to specific IPs in Mesh Proxy. Read the technical documentation."},"sidebar":"tutorialSidebar","previous":{"title":"InFlightConn","permalink":"/doc/docs/middlewares/tcp/inflightconn"},"next":{"title":"Mesh TCP Middlewares IPWhiteList","permalink":"/doc/docs/middlewares/tcp/ipwhitelist"}}');var s=t(4848),l=t(8453);const o={title:"Mesh TCP Middlewares IPAllowList",description:"Learn how to use IPAllowList in TCP middleware for limiting clients to specific IPs in Mesh Proxy. Read the technical documentation."},a="IPAllowList",r={},c=[{value:"Configuration Examples",id:"configuration-examples",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"<code>sourceRange</code>",id:"sourcerange",level:3}];function d(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"ipallowlist",children:"IPAllowList"})}),"\n",(0,s.jsx)(i.p,{children:"Limiting Clients to Specific IPs"}),"\n",(0,s.jsx)(i.p,{children:"IPAllowList limits allowed requests based on the client IP."}),"\n",(0,s.jsx)(i.h2,{id:"configuration-examples",children:"Configuration Examples"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",metastring:'tab="Docker & Swarm"',children:'# Accepts connections from defined IP\nlabels:\n  - "Mesh.tcp.middlewares.test-ipallowlist.ipallowlist.sourcerange=127.0.0.1/32, 192.168.1.7"\n'})}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",metastring:'tab="Kubernetes"',children:"apiVersion: Mesh.io/v1alpha1\nkind: MiddlewareTCP\nmetadata:\n  name: test-ipallowlist\nspec:\n  ipAllowList:\n    sourceRange:\n      - 127.0.0.1/32\n      - 192.168.1.7\n"})}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",metastring:'tab="Consul Catalog"',children:'# Accepts request from defined IP\n- "Mesh.tcp.middlewares.test-ipallowlist.ipallowlist.sourcerange=127.0.0.1/32, 192.168.1.7"\n'})}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'# Accepts request from defined IP\n[tcp.middlewares]\n  [tcp.middlewares.test-ipallowlist.ipAllowList]\n    sourceRange = ["127.0.0.1/32", "192.168.1.7"]\n'})}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'# Accepts request from defined IP\ntcp:\n  middlewares:\n    test-ipallowlist:\n      ipAllowList:\n        sourceRange:\n          - "127.0.0.1/32"\n          - "192.168.1.7"\n'})}),"\n",(0,s.jsx)(i.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,s.jsx)(i.h3,{id:"sourcerange",children:(0,s.jsx)(i.code,{children:"sourceRange"})}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"sourceRange"})," option sets the allowed IPs (or ranges of allowed IPs by using CIDR notation)."]})]})}function p(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>o,x:()=>a});var n=t(6540);const s={},l=n.createContext(s);function o(e){const i=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(l.Provider,{value:i},e.children)}}}]);