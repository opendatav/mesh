"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[245],{3882:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"reference/install-configuration/boot-environment","title":"Mesh Configuration Overview","description":"Read the official Mesh documentation to get started with configuring the Mesh Proxy.","source":"@site/docs/reference/install-configuration/boot-environment.md","sourceDirName":"reference/install-configuration","slug":"/reference/install-configuration/boot-environment","permalink":"/doc/docs/reference/install-configuration/boot-environment","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/reference/install-configuration/boot-environment.md","tags":[],"version":"current","frontMatter":{"title":"Mesh Configuration Overview","description":"Read the official Mesh documentation to get started with configuring the Mesh Proxy."},"sidebar":"tutorialSidebar","previous":{"title":"Mesh API & Dashboard Documentation","permalink":"/doc/docs/reference/install-configuration/api-dashboard"},"next":{"title":"cli-options-list","permalink":"/doc/docs/reference/install-configuration/cli-options-list"}}');var s=i(4848),t=i(8453);const o={title:"Mesh Configuration Overview",description:"Read the official Mesh documentation to get started with configuring the Mesh Proxy."},a="Boot Environment",l={},c=[{value:"Configuration Methods",id:"configuration-methods",level:2},{value:"File",id:"file",level:2},{value:"Configuration Example",id:"configuration-example",level:3},{value:"Configuration File",id:"configuration-file",level:3},{value:"CLI",id:"cli",level:2},{value:"Configuration Example",id:"configuration-example-1",level:3},{value:"Environment Variables",id:"environment-variables",level:2},{value:"Configuration Example",id:"configuration-example-2",level:3},{value:"Helm",id:"helm",level:2},{value:"Configuration Example",id:"configuration-example-3",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"boot-environment",children:"Boot Environment"})}),"\n",(0,s.jsx)(n.p,{children:"Mesh Proxy\u2019s configuration is divided into two main categories:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Static Configuration"}),": Defines parameters that require Mesh to restart when changed. This includes entry points, providers, API/dashboard settings, and logging levels."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dynamic Configuration"}),": Involves elements that can be updated without restarting Mesh, such as routers, services, and middlewares."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This section focuses on setting up the static configuration, which is essential for Mesh\u2019s initial boot."}),"\n",(0,s.jsx)(n.h2,{id:"configuration-methods",children:"Configuration Methods"}),"\n",(0,s.jsx)(n.p,{children:"Mesh offers multiple methods to define static configuration."}),"\n",(0,s.jsx)(n.p,{children:'!!! warning "Note"\nIt\u2019s crucial to choose one method and stick to it, as mixing different configuration options is not supported and can lead to unexpected behavior.'}),"\n",(0,s.jsx)(n.p,{children:"Here are the methods available for configuring the Mesh proxy:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#file",children:"File"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#cli",children:"CLI"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#environment-variables",children:"Environment Variables"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#helm",children:"Helm"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"file",children:"File"}),"\n",(0,s.jsx)(n.p,{children:"You can define the static configuration in a file using formats like YAML or TOML."}),"\n",(0,s.jsx)(n.h3,{id:"configuration-example",children:"Configuration Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="Mesh.yml (YAML)"',children:'entryPoints:\n  web:\n    address: ":80"\n  websecure:\n    address: ":443"\n\nproviders:\n  docker: {}\n\napi:\n  dashboard: true\n\nlog:\n  level: INFO\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="Mesh.toml (TOML)"',children:'[entryPoints]\n  [entryPoints.web]\n    address = ":80"\n\n  [entryPoints.websecure]\n    address = ":443"\n\n[providers]\n  [providers.docker]\n\n[api]\n  dashboard = true\n\n[log]\n  level = "INFO"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"configuration-file",children:"Configuration File"}),"\n",(0,s.jsxs)(n.p,{children:["At startup, Mesh searches for static configuration in a file named ",(0,s.jsx)(n.code,{children:"Mesh.yml"})," (or ",(0,s.jsx)(n.code,{children:"Mesh.yaml"})," or ",(0,s.jsx)(n.code,{children:"Mesh.toml"}),") in the following directories:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"/etc/Mesh/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"$XDG_CONFIG_HOME/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"$HOME/.config/"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"."})," (the current working directory)."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["You can override this behavior using the ",(0,s.jsx)(n.code,{children:"configFile"})," argument like this:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"Mesh --configFile=foo/bar/myconfigfile.yml\n"})}),"\n",(0,s.jsx)(n.h2,{id:"cli",children:"CLI"}),"\n",(0,s.jsx)(n.p,{children:"Using the CLI, you can pass static configuration directly as command-line arguments when starting Mesh."}),"\n",(0,s.jsx)(n.h3,{id:"configuration-example-1",children:"Configuration Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",metastring:'tab="CLI"',children:'Mesh \\\n  --entryPoints.web.address=":80" \\\n  --entryPoints.websecure.address=":443" \\\n  --providers.docker \\\n  --api.dashboard \\\n  --log.level=INFO\n'})}),"\n",(0,s.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,s.jsxs)(n.p,{children:["You can also set the static configuration using environment variables. Each option corresponds to an environment variable prefixed with ",(0,s.jsx)(n.code,{children:"Mesh_"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"configuration-example-2",children:"Configuration Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",metastring:'tab="ENV"',children:'Mesh_ENTRYPOINTS_WEB_ADDRESS=":80" Mesh_ENTRYPOINTS_WEBSECURE_ADDRESS=":443" Mesh_PROVIDERS_DOCKER=true Mesh_API_DASHBOARD=true Mesh_LOG_LEVEL="INFO" Mesh\n'})}),"\n",(0,s.jsx)(n.h2,{id:"helm",children:"Helm"}),"\n",(0,s.jsxs)(n.p,{children:["When deploying Mesh Proxy using Helm in a Kubernetes cluster, the static configuration is defined in a ",(0,s.jsx)(n.code,{children:"values.yaml"})," file."]}),"\n",(0,s.jsxs)(n.p,{children:["You can find the official Mesh Helm chart on ",(0,s.jsx)(n.a,{href:"https://github.com/Mesh/mesh-helm-chart/blob/master/Mesh/VALUES.md",children:"GitHub"})]}),"\n",(0,s.jsx)(n.h3,{id:"configuration-example-3",children:"Configuration Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="values.yaml"',children:'ports:\n  web:\n    exposedPort: 80\n  websecure:\n    exposedPort: 443\n\nadditionalArguments:\n  - "--providers.kubernetescrd.ingressClass"\n  - "--log.level=INFO"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",metastring:'tab="Helm Commands"',children:"helm repo add Mesh https://Mesh.github.io/charts\nhelm repo update\nhelm install Mesh Mesh/Mesh -f values.yaml\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var r=i(6540);const s={},t=r.createContext(s);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);