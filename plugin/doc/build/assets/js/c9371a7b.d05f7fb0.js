"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[84],{6003:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"middlewares/http/retry","title":"Mesh HTTP Retry Documentation","description":"Configure Mesh Proxy\'s HTTP Retry middleware, so you can retry requests to a backend server until it succeeds. Read the technical documentation.","source":"@site/docs/middlewares/http/retry.md","sourceDirName":"middlewares/http","slug":"/middlewares/http/retry","permalink":"/doc/docs/middlewares/http/retry","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/middlewares/http/retry.md","tags":[],"version":"current","frontMatter":{"title":"Mesh HTTP Retry Documentation","description":"Configure Mesh Proxy\'s HTTP Retry middleware, so you can retry requests to a backend server until it succeeds. Read the technical documentation."},"sidebar":"tutorialSidebar","previous":{"title":"Mesh ReplacePathRegex Documentation","permalink":"/doc/docs/middlewares/http/replacepathregex"},"next":{"title":"Mesh StripPrefix Documentation","permalink":"/doc/docs/middlewares/http/stripprefix"}}');var i=n(4848),a=n(8453);const s={title:"Mesh HTTP Retry Documentation",description:"Configure Mesh Proxy's HTTP Retry middleware, so you can retry requests to a backend server until it succeeds. Read the technical documentation."},o="Retry",l={},d=[{value:"Configuration Examples",id:"configuration-examples",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"<code>attempts</code>",id:"attempts",level:3},{value:"<code>initialInterval</code>",id:"initialinterval",level:3}];function c(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"retry",children:"Retry"})}),"\n",(0,i.jsx)(t.p,{children:"Retrying until it Succeeds"}),"\n",(0,i.jsx)(t.p,{children:"The Retry middleware reissues requests a given number of times when it cannot contact the backend service.\nThis applies at the transport level (TCP).\nIf the service does not respond to the initial connection attempt, the middleware retries.\nHowever, once the service responds, regardless of the HTTP status code, the middleware considers it operational and stops retrying.\nThis means that the retry mechanism does not handle HTTP errors; it only retries when there is no response at the TCP level.\nThe Retry middleware has an optional configuration to enable an exponential backoff."}),"\n",(0,i.jsx)(t.h2,{id:"configuration-examples",children:"Configuration Examples"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",metastring:'tab="Docker & Swarm"',children:'# Retry 4 times with exponential backoff\nlabels:\n  - "Mesh.http.middlewares.test-retry.retry.attempts=4"\n  - "Mesh.http.middlewares.test-retry.retry.initialinterval=100ms"\n'})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",metastring:'tab="Kubernetes"',children:"# Retry 4 times with exponential backoff\napiVersion: Mesh.io/v1alpha1\nkind: Middleware\nmetadata:\n  name: test-retry\nspec:\n  retry:\n    attempts: 4\n    initialInterval: 100ms\n"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",metastring:'tab="Consul Catalog"',children:'# Retry 4 times with exponential backoff\n- "Mesh.http.middlewares.test-retry.retry.attempts=4"\n- "Mesh.http.middlewares.test-retry.retry.initialinterval=100ms"\n'})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"# Retry 4 times with exponential backoff\nhttp:\n  middlewares:\n    test-retry:\n      retry:\n        attempts: 4\n        initialInterval: 100ms\n"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'# Retry 4 times with exponential backoff\n[http.middlewares]\n  [http.middlewares.test-retry.retry]\n    attempts = 4\n    initialInterval = "100ms"\n'})}),"\n",(0,i.jsx)(t.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,i.jsx)(t.h3,{id:"attempts",children:(0,i.jsx)(t.code,{children:"attempts"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"mandatory"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"attempts"})," option defines how many times the request should be retried."]}),"\n",(0,i.jsx)(t.h3,{id:"initialinterval",children:(0,i.jsx)(t.code,{children:"initialInterval"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"initialInterval"})," option defines the first wait time in the exponential backoff series. The maximum interval is\ncalculated as twice the ",(0,i.jsx)(t.code,{children:"initialInterval"}),". If unspecified, requests will be retried immediately."]}),"\n",(0,i.jsxs)(t.p,{children:["The value of initialInterval should be provided in seconds or as a valid duration format, see ",(0,i.jsx)(t.a,{href:"https://golang.org/pkg/time/#ParseDuration",children:"time.ParseDuration"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>o});var r=n(6540);const i={},a=r.createContext(i);function s(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);