"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[6402],{2011:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"providers/ecs","title":"Mesh AWS ECS Documentation","description":"Configuration discovery in Mesh is achieved through Providers. Read the technical documentation for leveraging AWS ECS in Mesh.","source":"@site/docs/providers/ecs.md","sourceDirName":"providers","slug":"/providers/ecs","permalink":"/doc/docs/providers/ecs","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/providers/ecs.md","tags":[],"version":"current","frontMatter":{"title":"Mesh AWS ECS Documentation","description":"Configuration discovery in Mesh is achieved through Providers. Read the technical documentation for leveraging AWS ECS in Mesh."},"sidebar":"tutorialSidebar","previous":{"title":"Mesh Docker Documentation","permalink":"/doc/docs/providers/docker"},"next":{"title":"Mesh Etcd Documentation","permalink":"/doc/docs/providers/etcd"}}');var r=s(4848),l=s(8453);const i={title:"Mesh AWS ECS Documentation",description:"Configuration discovery in Mesh is achieved through Providers. Read the technical documentation for leveraging AWS ECS in Mesh."},c="Mesh & AWS ECS",t={},d=[{value:"Configuration Examples",id:"configuration-examples",level:2},{value:"Policy",id:"policy",level:2},{value:"Provider Configuration",id:"provider-configuration",level:2},{value:"<code>autoDiscoverClusters</code>",id:"autodiscoverclusters",level:3},{value:"<code>ecsAnywhere</code>",id:"ecsanywhere",level:3},{value:"<code>clusters</code>",id:"clusters",level:3},{value:"<code>exposedByDefault</code>",id:"exposedbydefault",level:3},{value:"<code>constraints</code>",id:"constraints",level:3},{value:"<code>healthyTasksOnly</code>",id:"healthytasksonly",level:3},{value:"<code>defaultRule</code>",id:"defaultrule",level:3},{value:"<code>refreshSeconds</code>",id:"refreshseconds",level:3},{value:"Credentials",id:"credentials",level:3}];function o(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"mesh--aws-ecs",children:"Mesh & AWS ECS"})}),"\n",(0,r.jsx)(n.p,{children:"A Story of Labels & Elastic Containers"}),"\n",(0,r.jsx)(n.p,{children:"Attach labels to your ECS containers and let Mesh do the rest!"}),"\n",(0,r.jsx)(n.h2,{id:"configuration-examples",children:"Configuration Examples"}),"\n",(0,r.jsx)(n.p,{children:'??? example "Configuring ECS provider"'}),"\n",(0,r.jsx)(n.p,{children:"Enabling the ECS provider:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  ecs: {}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.ecs]\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.ecs=true\n"})}),"\n",(0,r.jsx)(n.h2,{id:"policy",children:"Policy"}),"\n",(0,r.jsx)(n.p,{children:"Mesh needs the following policy to read ECS information:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "Version": "2012-10-17",\n    "Statement": [\n        {\n            "Sid": "MeshECSReadAccess",\n            "Effect": "Allow",\n            "Action": [\n                "ecs:ListClusters",\n                "ecs:DescribeClusters",\n                "ecs:ListTasks",\n                "ecs:DescribeTasks",\n                "ecs:DescribeContainerInstances",\n                "ecs:DescribeTaskDefinition",\n                "ec2:DescribeInstances",\n                "ssm:DescribeInstanceInformation"\n            ],\n            "Resource": [\n                "*"\n            ]\n        }\n    ]\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:'!!! info "ECS Anywhere"'}),"\n",(0,r.jsxs)(n.p,{children:["Please note that the ",(0,r.jsx)(n.code,{children:"ssm:DescribeInstanceInformation"})," action is required for ECS anywhere instances discovery."]}),"\n",(0,r.jsx)(n.h2,{id:"provider-configuration",children:"Provider Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"autodiscoverclusters",children:(0,r.jsx)(n.code,{children:"autoDiscoverClusters"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=false"})}),"\n",(0,r.jsx)(n.p,{children:"Search for services in cluster list."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If set to ",(0,r.jsx)(n.code,{children:"true"})," service discovery is enabled for all clusters."]}),"\n",(0,r.jsxs)(n.li,{children:["If set to ",(0,r.jsx)(n.code,{children:"false"})," service discovery is enabled on configured clusters only."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  ecs:\n    autoDiscoverClusters: true\n    # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.ecs]\n  autoDiscoverClusters = true\n  # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.ecs.autoDiscoverClusters=true\n# ...\n"})}),"\n",(0,r.jsx)(n.h3,{id:"ecsanywhere",children:(0,r.jsx)(n.code,{children:"ecsAnywhere"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=false"})}),"\n",(0,r.jsx)(n.p,{children:"Enable ECS Anywhere support."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If set to ",(0,r.jsx)(n.code,{children:"true"})," service discovery is enabled for ECS Anywhere instances."]}),"\n",(0,r.jsxs)(n.li,{children:["If set to ",(0,r.jsx)(n.code,{children:"false"})," service discovery is disabled for ECS Anywhere instances."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  ecs:\n    ecsAnywhere: true\n    # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.ecs]\n  ecsAnywhere = true\n  # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.ecs.ecsAnywhere=true\n# ...\n"})}),"\n",(0,r.jsx)(n.h3,{id:"clusters",children:(0,r.jsx)(n.code,{children:"clusters"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:'Optional, Default=["default"]'})}),"\n",(0,r.jsxs)(n.p,{children:["Search for services in cluster list.\nThis option is ignored if ",(0,r.jsx)(n.code,{children:"autoDiscoverClusters"})," is set to ",(0,r.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  ecs:\n    clusters:\n      - default\n    # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.ecs]\n  clusters = ["default"]\n  # ...\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.ecs.clusters=default\n# ...\n"})}),"\n",(0,r.jsx)(n.h3,{id:"exposedbydefault",children:(0,r.jsx)(n.code,{children:"exposedByDefault"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=true"})}),"\n",(0,r.jsx)(n.p,{children:"Expose ECS services by default in Mesh."}),"\n",(0,r.jsxs)(n.p,{children:["If set to ",(0,r.jsx)(n.code,{children:"false"}),", services that do not have a ",(0,r.jsx)(n.code,{children:"Mesh.enable=true"})," label are ignored from the resulting routing configuration."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  ecs:\n    exposedByDefault: false\n    # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.ecs]\n  exposedByDefault = false\n  # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.ecs.exposedByDefault=false\n# ...\n"})}),"\n",(0,r.jsx)(n.h3,{id:"constraints",children:(0,r.jsx)(n.code,{children:"constraints"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:'Optional, Default=""'})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"constraints"})," option can be set to an expression that Mesh matches against the container labels (task),\nto determine whether to create any route for that container.\nIf none of the container labels match the expression, no route for that container is created.\nIf the expression is empty, all detected containers are included."]}),"\n",(0,r.jsxs)(n.p,{children:["The expression syntax is based on the ",(0,r.jsx)(n.code,{children:'Label("key", "value")'}),", and ",(0,r.jsx)(n.code,{children:'LabelRegex("key", "value")'})," functions,\nas well as the usual boolean logic, as shown in examples below."]}),"\n",(0,r.jsx)(n.p,{children:'??? example "Constraints Expression Examples"'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# Includes only containers having a label with key `a.label.name` and value `foo`\nconstraints = "Label(`a.label.name`, `foo`)"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# Excludes containers having any label with key `a.label.name` and value `foo`\nconstraints = "!Label(`a.label.name`, `value`)"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# With logical AND.\nconstraints = "Label(`a.label.name`, `valueA`) && Label(`another.label.name`, `valueB`)"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# With logical OR.\nconstraints = "Label(`a.label.name`, `valueA`) || Label(`another.label.name`, `valueB`)"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# With logical AND and OR, with precedence set by parentheses.\nconstraints = "Label(`a.label.name`, `valueA`) && (Label(`another.label.name`, `valueB`) || Label(`yet.another.label.name`, `valueC`))"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# Includes only containers having a label with key `a.label.name` and a value matching the `a.+` regular expression.\nconstraints = "LabelRegex(`a.label.name`, `a.+`)"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["For additional information, refer to ",(0,r.jsx)(n.a,{href:"/doc/docs/providers/overview#restrict-the-scope-of-service-discovery",children:"Restrict the Scope of Service Discovery"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'providers:\n  ecs:\n    constraints: "Label(`a.label.name`,`foo`)"\n    # ...\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.ecs]\n  constraints = "Label(`a.label.name`,`foo`)"\n  # ...\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.ecs.constraints=Label(`a.label.name`,`foo`)\n# ...\n"})}),"\n",(0,r.jsx)(n.h3,{id:"healthytasksonly",children:(0,r.jsx)(n.code,{children:"healthyTasksOnly"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=false"})}),"\n",(0,r.jsxs)(n.p,{children:["Determines whether Mesh discovers only healthy tasks (",(0,r.jsx)(n.code,{children:"HEALTHY"})," healthStatus)."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  ecs:\n    healthyTasksOnly: true\n    # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.ecs]\n  healthyTasksOnly = true\n  # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.ecs.healthyTasksOnly=true\n# ...\n"})}),"\n",(0,r.jsx)(n.h3,{id:"defaultrule",children:(0,r.jsx)(n.code,{children:"defaultRule"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["Optional, Default=",(0,r.jsx)(n.code,{children:"Host(`{{ normalize .Name }}`)"})]})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"defaultRule"})," option defines what routing rule to apply to a container if no rule is defined by a label."]}),"\n",(0,r.jsxs)(n.p,{children:["It must be a valid ",(0,r.jsx)(n.a,{href:"https://pkg.go.dev/text/template/",children:"Go template"}),", and can use\n",(0,r.jsx)(n.a,{href:"https://masterminds.github.io/sprig/",children:"sprig template functions"}),".\nThe container service name can be accessed with the ",(0,r.jsx)(n.code,{children:"Name"})," identifier,\nand the template has access to all the labels defined on this container."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'providers:\n  ecs:\n    defaultRule: "Host(`{{ .Name }}.{{ index .Labels \\"customLabel\\"}}`)"\n    # ...\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.ecs]\n  defaultRule = "Host(`{{ .Name }}.{{ index .Labels \\"customLabel\\"}}`)"\n  # ...\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.ecs.defaultRule='Host(`{{ .Name }}.{{ index .Labels \"customLabel\"}}`)'\n# ...\n"})}),"\n",(0,r.jsx)(n.p,{children:'??? info "Default rule and Mesh service"'}),"\n",(0,r.jsx)(n.p,{children:"The exposure of the Mesh container, combined with the default rule mechanism,\ncan lead to create a router targeting itself in a loop.\nIn this case, to prevent an infinite loop,\nMesh adds an internal middleware to refuse the request if it comes from the same router."}),"\n",(0,r.jsx)(n.h3,{id:"refreshseconds",children:(0,r.jsx)(n.code,{children:"refreshSeconds"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=15"})}),"\n",(0,r.jsx)(n.p,{children:"Polling interval (in seconds)."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  ecs:\n    refreshSeconds: 15\n    # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.ecs]\n  refreshSeconds = 15\n  # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.ecs.refreshSeconds=15\n# ...\n"})}),"\n",(0,r.jsx)(n.h3,{id:"credentials",children:"Credentials"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional"})}),"\n",(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:"region"})," is not provided, it is resolved from the EC2 metadata endpoint for EC2 tasks.\nIn a FARGATE context it is resolved from the ",(0,r.jsx)(n.code,{children:"AWS_REGION"})," environment variable."]}),"\n",(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:"accessKeyID"})," and ",(0,r.jsx)(n.code,{children:"secretAccessKey"})," are not provided, credentials are resolved in the order specified by the\n",(0,r.jsx)(n.a,{href:"https://docs.aws.amazon.com/sdk-for-go/v2/developer-guide/configure-gosdk.html#specifying-credentials",children:"default credential chain of AWS SDK for Go V2"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Using the environment variables ",(0,r.jsx)(n.code,{children:"AWS_ACCESS_KEY_ID"}),", ",(0,r.jsx)(n.code,{children:"AWS_SECRET_ACCESS_KEY"}),", and ",(0,r.jsx)(n.code,{children:"AWS_SESSION_TOKEN"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Using shared credentials, determined by ",(0,r.jsx)(n.code,{children:"AWS_PROFILE"})," and ",(0,r.jsx)(n.code,{children:"AWS_SHARED_CREDENTIALS_FILE"}),", defaults to ",(0,r.jsx)(n.code,{children:"default"})," and ",(0,r.jsx)(n.code,{children:"~/.aws/credentials"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Using EC2 instance role or ECS task role"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'providers:\n  ecs:\n    region: us-east-1\n    accessKeyID: "abc"\n    secretAccessKey: "123"\n    # ...\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.ecs]\n  region = "us-east-1"\n  accessKeyID = "abc"\n  secretAccessKey = "123"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:'--providers.ecs.region="us-east-1"\n--providers.ecs.accessKeyID="abc"\n--providers.ecs.secretAccessKey="123"\n# ...\n'})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var a=s(6540);const r={},l=a.createContext(r);function i(e){const n=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(l.Provider,{value:n},e.children)}}}]);