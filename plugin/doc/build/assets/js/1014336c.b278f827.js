"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[2952],{8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var s=t(6540);const r={},c=s.createContext(r);function o(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(c.Provider,{value:n},e.children)}},9999:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"user-guides/docker-compose/acme-http/index","title":"Mesh Docker HTTP Challenge Documentation","description":"Learn how to create a certificate with the Let\'s Encrypt HTTP challenge to use HTTPS on a Service exposed with Mesh Proxy. Read the technical documentation.","source":"@site/docs/user-guides/docker-compose/acme-http/index.md","sourceDirName":"user-guides/docker-compose/acme-http","slug":"/user-guides/docker-compose/acme-http/","permalink":"/doc/docs/user-guides/docker-compose/acme-http/","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/user-guides/docker-compose/acme-http/index.md","tags":[],"version":"current","frontMatter":{"title":"Mesh Docker HTTP Challenge Documentation","description":"Learn how to create a certificate with the Let\'s Encrypt HTTP challenge to use HTTPS on a Service exposed with Mesh Proxy. Read the technical documentation."},"sidebar":"tutorialSidebar","previous":{"title":"Mesh Docker DNS Challenge Documentation","permalink":"/doc/docs/user-guides/docker-compose/acme-dns/"},"next":{"title":"Mesh Docker TLS Challenge Documentation","permalink":"/doc/docs/user-guides/docker-compose/acme-tls/"}}');var r=t(4848),c=t(8453);const o={title:"Mesh Docker HTTP Challenge Documentation",description:"Learn how to create a certificate with the Let's Encrypt HTTP challenge to use HTTPS on a Service exposed with Mesh Proxy. Read the technical documentation."},i="Docker-compose with Let's Encrypt : HTTP Challenge",l={},a=[{value:"Prerequisite",id:"prerequisite",level:2},{value:"Setup",id:"setup",level:2},{value:"Explanation",id:"explanation",level:2}];function d(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"docker-compose-with-lets-encrypt--http-challenge",children:"Docker-compose with Let's Encrypt : HTTP Challenge"})}),"\n",(0,r.jsxs)(n.p,{children:["This guide aims to demonstrate how to create a certificate with the Let's Encrypt HTTP challenge to use https on a simple service exposed with Mesh.",(0,r.jsx)(n.br,{}),"\n","Please also read the ",(0,r.jsx)(n.a,{href:"../basic-example",children:"basic example"})," for details on how to expose such a service."]}),"\n",(0,r.jsx)(n.h2,{id:"prerequisite",children:"Prerequisite"}),"\n",(0,r.jsx)(n.p,{children:"For the HTTP challenge you will need:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A publicly accessible host allowing connections on port ",(0,r.jsx)(n.code,{children:"80"})," & ",(0,r.jsx)(n.code,{children:"443"})," with docker & docker-compose installed."]}),"\n",(0,r.jsx)(n.li,{children:"A DNS record with the domain you want to expose pointing to this host."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Create a ",(0,r.jsx)(n.code,{children:"docker-compose.yml"})," on your remote server with the following content:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'--8<-- "content/user-guides/docker-compose/acme-http/docker-compose.yml"\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Replace ",(0,r.jsx)(n.code,{children:"postmaster@example.com"})," by your ",(0,r.jsx)(n.strong,{children:"own email"})," within the ",(0,r.jsx)(n.code,{children:"certificatesresolvers.myresolver.acme.email"})," command line argument of the ",(0,r.jsx)(n.code,{children:"Mesh"})," service."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Replace ",(0,r.jsx)(n.code,{children:"whoami.example.com"})," by your ",(0,r.jsx)(n.strong,{children:"own domain"})," within the ",(0,r.jsx)(n.code,{children:"Mesh.http.routers.whoami.rule"})," label of the ",(0,r.jsx)(n.code,{children:"whoami"})," service."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Optionally uncomment the following lines if you want to test/debug:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'#- "--log.level=DEBUG"\n#- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Run ",(0,r.jsx)(n.code,{children:"docker compose up -d"})," within the folder where you created the previous file."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Wait a bit and visit ",(0,r.jsx)(n.code,{children:"https://your_own_domain"})," to confirm everything went fine."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"!!! Note"}),"\n",(0,r.jsxs)(n.p,{children:["If you uncommented the ",(0,r.jsx)(n.code,{children:"acme.caserver"})," line, you will get an SSL error, but if you display the certificate and see it was emitted by ",(0,r.jsx)(n.code,{children:"Fake LE Intermediate X1"})," then it means all is good.\n(It is the staging environment intermediate certificate used by Let's Encrypt).",(0,r.jsx)(n.br,{}),"\n","You can now safely comment the ",(0,r.jsx)(n.code,{children:"acme.caserver"})," line, remove the ",(0,r.jsx)(n.code,{children:"letsencrypt/acme.json"})," file and restart Mesh to issue a valid certificate."]}),"\n",(0,r.jsx)(n.h2,{id:"explanation",children:"Explanation"}),"\n",(0,r.jsx)(n.p,{children:"What changed between the basic example:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"We configure a second entry point for the HTTPS traffic:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'command:\n  # Mesh will listen to incoming request on the port 443 (https)\n  - "--entryPoints.websecure.address=:443"\nports:\n  - "443:443"\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"We configure the HTTP Let's Encrypt challenge:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'command:\n  # Enable a http challenge named "myresolver"\n  - "--certificatesresolvers.myresolver.acme.httpchallenge=true"\n  # Tell it to use our predefined entrypoint named "web"\n  - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"\n  # The email to provide to Let\'s Encrypt\n  - "--certificatesresolvers.myresolver.acme.email=postmaster@example.com"\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"We add a volume to store our certificates:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'volumes:\n  # Create a letsencrypt dir within the folder where the docker-compose file is\n  - "./letsencrypt:/letsencrypt"\n\ncommand:\n  # Tell to store the certificate on a path under our volume\n  - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["We configure the ",(0,r.jsx)(n.code,{children:"whoami"})," service to tell Mesh to use the certificate resolver named ",(0,r.jsx)(n.code,{children:"myresolver"})," we just configured:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'labels:\n  # Uses the Host rule to define which certificate to issue\n  - "Mesh.http.routers.whoami.tls.certresolver=myresolver"\n'})})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);