"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[9826],{4039:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>a,frontMatter:()=>r,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"reference/install-configuration/observability/logs-and-accesslogs","title":"Mesh Logs Documentation","description":"Logs are a key part of observability in Mesh Proxy. Read the technical documentation to learn their configurations, rotations, and time zones.","source":"@site/docs/reference/install-configuration/observability/logs-and-accesslogs.md","sourceDirName":"reference/install-configuration/observability","slug":"/reference/install-configuration/observability/logs-and-accesslogs","permalink":"/doc/docs/reference/install-configuration/observability/logs-and-accesslogs","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/reference/install-configuration/observability/logs-and-accesslogs.md","tags":[],"version":"current","frontMatter":{"title":"Mesh Logs Documentation","description":"Logs are a key part of observability in Mesh Proxy. Read the technical documentation to learn their configurations, rotations, and time zones."},"sidebar":"tutorialSidebar","previous":{"title":"Mesh Health Check Documentation","permalink":"/doc/docs/reference/install-configuration/observability/healthcheck"},"next":{"title":"Mesh Metrics Overview","permalink":"/doc/docs/reference/install-configuration/observability/metrics"}}');var l=s(4848),i=s(8453);const r={title:"Mesh Logs Documentation",description:"Logs are a key part of observability in Mesh Proxy. Read the technical documentation to learn their configurations, rotations, and time zones."},d=void 0,o={},c=[{value:"Logs",id:"logs",level:2},{value:"Configuration Example",id:"configuration-example",level:3},{value:"Configuration Options",id:"configuration-options",level:3},{value:"AccessLogs",id:"accesslogs",level:2},{value:"Configuration Example",id:"configuration-example-1",level:3},{value:"Configuration Options",id:"configuration-options-1",level:3},{value:"CLF format fields",id:"clf-format-fields",level:4},{value:"Available Fields",id:"available-fields",level:4},{value:"Log Rotation",id:"log-rotation",level:4},{value:"Time Zones",id:"time-zones",level:4}];function h(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.h2,{id:"logs",children:"Logs"}),"\n",(0,l.jsx)(t.p,{children:"Logs concern everything that happens to Mesh itself (startup, configuration, events, shutdown, and so on)."}),"\n",(0,l.jsx)(t.h3,{id:"configuration-example",children:"Configuration Example"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'log:\n  filePath: "/path/to/log-file.log"\n  format: json\n  level: INFO\n'})}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[log]\n  filePath = "/path/to/log-file.log"\n  format = "json"\n  level = "INFO"\n'})}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-sh",metastring:'tab="CLI"',children:"--log.filePath=/path/to/log-file.log\n--log.format=json\n--log.level=INFO\n"})}),"\n",(0,l.jsx)(t.h3,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,l.jsx)(t.p,{children:"The section below describe how to configure Mesh logs using the static configuration."}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Field"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Default"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Required"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"log.filePath"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["By default, the logs are written to the standard output.",(0,l.jsx)("br",{}),"You can configure a file path instead using the ",(0,l.jsx)(t.code,{children:"filePath"})," option."]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"-"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"log.format"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["Log format (",(0,l.jsx)(t.code,{children:"common"}),"or ",(0,l.jsx)(t.code,{children:"json"}),").",(0,l.jsx)("br",{})," The fields displayed with the format ",(0,l.jsx)(t.code,{children:"common"})," cannot be customized."]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:'"common"'}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"log.level"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["Log level (",(0,l.jsx)(t.code,{children:"TRACE"}),", ",(0,l.jsx)(t.code,{children:"DEBUG"}),", ",(0,l.jsx)(t.code,{children:"INFO"}),", ",(0,l.jsx)(t.code,{children:"WARN"}),", ",(0,l.jsx)(t.code,{children:"ERROR"}),", ",(0,l.jsx)(t.code,{children:"FATAL"}),", and ",(0,l.jsx)(t.code,{children:"PANIC"}),")"]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"ERROR"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"log.noColor"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["When using the format ",(0,l.jsx)(t.code,{children:"common"}),", disables the colorized output."]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"log.maxSize"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"Maximum size in megabytes of the log file before it gets rotated."}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"100MB"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"log.maxAge"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["Maximum number of days to retain old log files based on the timestamp encoded in their filename.",(0,l.jsx)("br",{})," A day is defined as 24 hours and may not exactly correspond to calendar days due to daylight savings, leap seconds, etc.",(0,l.jsx)("br",{}),"By default files are not removed based on their age."]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"0"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"log.maxBackups"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["Maximum number of old log files to retain.",(0,l.jsx)("br",{}),"The default is to retain all old log files."]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"0"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"log.compress"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"Compress log files in gzip after rotation."}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]})]})]}),"\n",(0,l.jsx)(t.h2,{id:"accesslogs",children:"AccessLogs"}),"\n",(0,l.jsx)(t.h3,{id:"configuration-example-1",children:"Configuration Example"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'accessLog:\n  # JSON format\n  format: json\n  # Filter on status codes, retry attempts and minimal duration\n  filters:\n    statusCodes:\n      - "200"\n      - "300-302"\n    retryAttempts: true\n    minDuration: "10ms"\n  fields:\n    # Keep all the fields by default\n    defaultMode: keep\n    names:\n      # Drop the Field ClientUserName\n      ClientUsername: drop\n    headers:\n      # Keep all the headers by default\n      defaultMode: keep\n      names:\n        # Redact the User-Agent header value\n        User-Agent: redact\n        # Drop the Authorization header value\n        Authorization: drop\n'})}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[accessLog]\n  format = "json"\n\n  [accessLog.filters]\n    statusCodes = [ "200", "300-302" ]\n    retryAttempts = true\n    minDuration = "10ms"\n\n  [accessLog.fields]\n    defaultMode = "keep"\n\n    [accessLog.fields.names]\n      ClientUsername = "drop"\n\n    [accessLog.fields.headers]\n      defaultMode = "keep"\n\n      [accessLog.fields.headers.names]\n        User-Agent = "redact"\n        Authorization = "drop"\n'})}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-sh",metastring:'tab="CLI"',children:"--accesslog=true\n--accesslog.format=json\n--accesslog.filters.statuscodes=200,300-302\n--accesslog.filters.retryattempts\n--accesslog.filters.minduration=10ms\n--accesslog.fields.defaultmode=keep\n--accesslog.fields.names.ClientUsername=drop\n--accesslog.fields.headers.defaultmode=keep\n--accesslog.fields.headers.names.User-Agent=redact\n--accesslog.fields.headers.names.Authorization=drop\n"})}),"\n",(0,l.jsx)(t.h3,{id:"configuration-options-1",children:"Configuration Options"}),"\n",(0,l.jsx)(t.p,{children:"The section below describes how to configure Mesh access logs using the static configuration."}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Field"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Default"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Required"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"accesslog.filePath"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["By default, the access logs are written to the standard output.",(0,l.jsx)("br",{}),"You can configure a file path instead using the ",(0,l.jsx)(t.code,{children:"filePath"})," option."]}),(0,l.jsx)(t.td,{style:{textAlign:"left"}}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"accesslog.format"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["By default, logs are written using the Common Log Format (CLF).",(0,l.jsx)("br",{}),"To write logs in JSON, use ",(0,l.jsx)(t.code,{children:"json"})," in the ",(0,l.jsx)(t.code,{children:"format"})," option.",(0,l.jsx)("br",{}),"If the given format is unsupported, the default (CLF) is used instead.",(0,l.jsx)("br",{}),"More information about CLF fields ",(0,l.jsx)(t.a,{href:"#clf-format-fields",children:"here"}),"."]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:'"common"'}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"accesslog.bufferingSize"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["To write the logs in an asynchronous fashion, specify a  ",(0,l.jsx)(t.code,{children:"bufferingSize"})," option.",(0,l.jsx)("br",{}),"This option represents the number of log lines Mesh will keep in memory before writing them to the selected output.",(0,l.jsx)("br",{}),"In some cases, this option can greatly help performances."]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"0"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"accesslog.addInternals"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["Enables access logs for internal resources (e.g.: ",(0,l.jsx)(t.code,{children:"ping@internal"}),")."]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"accesslog.filters.statusCodes"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"Limit the access logs to requests with a status codes in the specified range."}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"accesslog.filters.retryAttempts"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"Keep the access logs when at least one retry has happened."}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"accesslog.filters.minDuration"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["Keep access logs when requests take longer than the specified duration (provided in seconds or as a valid duration format, see ",(0,l.jsx)(t.a,{href:"https://golang.org/pkg/time/#ParseDuration",children:"time.ParseDuration"}),")."]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"0"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"accesslog.fields.defaultMode"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["Mode to apply by default to the access logs fields (",(0,l.jsx)(t.code,{children:"keep"}),", ",(0,l.jsx)(t.code,{children:"redact"})," or ",(0,l.jsx)(t.code,{children:"drop"}),")."]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"keep"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"accesslog.fields.names"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["Set the fields list to display in the access logs (format ",(0,l.jsx)(t.code,{children:"name:mode"}),").",(0,l.jsx)("br",{})," Available fields list ",(0,l.jsx)(t.a,{href:"#available-fields",children:"here"}),"."]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"-"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"accesslog.headers.defaultMode"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["Mode to apply by default to the access logs headers (",(0,l.jsx)(t.code,{children:"keep"}),", ",(0,l.jsx)(t.code,{children:"redact"})," or ",(0,l.jsx)(t.code,{children:"drop"}),")."]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"drop"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"accesslog.headers.names"})}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["Set the headers list to display in the access logs (format ",(0,l.jsx)(t.code,{children:"name:mode"}),")."]}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"-"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]})]})]}),"\n",(0,l.jsx)(t.h4,{id:"clf-format-fields",children:"CLF format fields"}),"\n",(0,l.jsx)(t.p,{children:"Below the fields displayed with the CLF format:"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-html",children:'<remote_IP_address> - <client_user_name_if_available> [<timestamp>] \n"<request_method> <request_path> <request_protocol>" <HTTP_status> <content-length> \n"<request_referrer>" "<request_user_agent>" <number_of_requests_received_since_Mesh_started>\n"<Mesh_router_name>" "<Mesh_server_URL>" <request_duration_in_ms>ms\n'})}),"\n",(0,l.jsx)(t.h4,{id:"available-fields",children:"Available Fields"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{children:"Field"}),(0,l.jsx)(t.th,{children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"StartUTC"})}),(0,l.jsx)(t.td,{children:"The time at which request processing started."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"StartLocal"})}),(0,l.jsx)(t.td,{children:"The local time at which request processing started."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"Duration"})}),(0,l.jsx)(t.td,{children:"The total time taken (in nanoseconds) by processing the response, including the origin server's time but not the log writing time."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"RouterName"})}),(0,l.jsx)(t.td,{children:"The name of the Mesh  router."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"ServiceName"})}),(0,l.jsx)(t.td,{children:"The name of the Mesh backend."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"ServiceURL"})}),(0,l.jsx)(t.td,{children:"The URL of the Mesh backend."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"ServiceAddr"})}),(0,l.jsxs)(t.td,{children:["The IP",":port"," of the Mesh backend (extracted from ",(0,l.jsx)(t.code,{children:"ServiceURL"}),")."]})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"ClientAddr"})}),(0,l.jsxs)(t.td,{children:["The remote address in its original form (usually IP",":port",")."]})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"ClientHost"})}),(0,l.jsx)(t.td,{children:"The remote IP address from which the client request was received."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"ClientPort"})}),(0,l.jsx)(t.td,{children:"The remote TCP port from which the client request was received."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"ClientUsername"})}),(0,l.jsx)(t.td,{children:"The username provided in the URL, if present."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"RequestAddr"})}),(0,l.jsxs)(t.td,{children:["The HTTP Host header (usually IP",":port","). This is treated as not a header by the Go API."]})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"RequestHost"})}),(0,l.jsx)(t.td,{children:"The HTTP Host server name (not including port)."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"RequestPort"})}),(0,l.jsx)(t.td,{children:"The TCP port from the HTTP Host."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"RequestMethod"})}),(0,l.jsx)(t.td,{children:"The HTTP method."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"RequestPath"})}),(0,l.jsx)(t.td,{children:"The HTTP request URI, not including the scheme, host or port."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"RequestProtocol"})}),(0,l.jsx)(t.td,{children:"The version of HTTP requested."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"RequestScheme"})}),(0,l.jsxs)(t.td,{children:["The HTTP scheme requested ",(0,l.jsx)(t.code,{children:"http"})," or ",(0,l.jsx)(t.code,{children:"https"}),"."]})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"RequestLine"})}),(0,l.jsxs)(t.td,{children:["The ",(0,l.jsx)(t.code,{children:"RequestMethod"}),", + ",(0,l.jsx)(t.code,{children:"RequestPath"})," and ",(0,l.jsx)(t.code,{children:"RequestProtocol"}),"."]})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"RequestContentSize"})}),(0,l.jsx)(t.td,{children:"The number of bytes in the request entity (a.k.a. body) sent by the client."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"OriginDuration"})}),(0,l.jsx)(t.td,{children:"The time taken (in nanoseconds) by the origin server ('upstream') to return its response."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"OriginContentSize"})}),(0,l.jsx)(t.td,{children:"The content length specified by the origin server, or 0 if unspecified."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"OriginStatus"})}),(0,l.jsx)(t.td,{children:"The HTTP status code returned by the origin server. If the request was handled by this Mesh instance (e.g. with a redirect), then this value will be absent (0)."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"OriginStatusLine"})}),(0,l.jsxs)(t.td,{children:[(0,l.jsx)(t.code,{children:"OriginStatus"})," + Status code explanation"]})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"DownstreamStatus"})}),(0,l.jsx)(t.td,{children:"The HTTP status code returned to the client."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"DownstreamStatusLine"})}),(0,l.jsxs)(t.td,{children:["The ",(0,l.jsx)(t.code,{children:"DownstreamStatus"})," and status code explanation."]})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"DownstreamContentSize"})}),(0,l.jsx)(t.td,{children:'The number of bytes in the response entity returned to the client. This is in addition to the "Content-Length" header, which may be present in the origin response.'})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"RequestCount"})}),(0,l.jsx)(t.td,{children:"The number of requests received since the Mesh instance started."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"GzipRatio"})}),(0,l.jsx)(t.td,{children:"The response body compression ratio achieved."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"Overhead"})}),(0,l.jsx)(t.td,{children:"The processing time overhead (in nanoseconds) caused by Mesh."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"RetryAttempts"})}),(0,l.jsx)(t.td,{children:"The amount of attempts the request was retried."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"TLSVersion"})}),(0,l.jsxs)(t.td,{children:["The TLS version used by the connection (e.g. ",(0,l.jsx)(t.code,{children:"1.2"}),") (if connection is TLS)."]})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"TLSCipher"})}),(0,l.jsxs)(t.td,{children:["The TLS cipher used by the connection (e.g. ",(0,l.jsx)(t.code,{children:"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA"}),") (if connection is TLS)."]})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"TLSClientSubject"})}),(0,l.jsxs)(t.td,{children:["The string representation of the TLS client certificate's Subject (e.g. ",(0,l.jsx)(t.code,{children:"CN=username,O=organization"}),")."]})]})]})]}),"\n",(0,l.jsx)(t.h4,{id:"log-rotation",children:"Log Rotation"}),"\n",(0,l.jsxs)(t.p,{children:["Mesh close and reopen its log files, assuming they're configured, on receipt of a USR1 signal.\nThis allows the logs to be rotated and processed by an external program, such as ",(0,l.jsx)(t.code,{children:"logrotate"}),"."]}),"\n",(0,l.jsx)(t.p,{children:"!!! warning\nThis does not work on Windows due to the lack of USR signals."}),"\n",(0,l.jsx)(t.h4,{id:"time-zones",children:"Time Zones"}),"\n",(0,l.jsx)(t.p,{children:"Mesh will timestamp each log line in UTC time by default."}),"\n",(0,l.jsx)(t.p,{children:"It is possible to configure the Mesh to timestamp in a specific timezone by ensuring the following configuration has been made in your environment:"}),"\n",(0,l.jsxs)(t.ol,{children:["\n",(0,l.jsxs)(t.li,{children:["Provide time zone data to ",(0,l.jsx)(t.code,{children:"/etc/localtime"})," or ",(0,l.jsx)(t.code,{children:"/usr/share/zoneinfo"})," (based on your distribution) or set the environment variable TZ to the desired timezone."]}),"\n",(0,l.jsxs)(t.li,{children:["Specify the field ",(0,l.jsx)(t.code,{children:"StartLocal"})," by dropping the field named ",(0,l.jsx)(t.code,{children:"StartUTC"})," (available on the default Common Log Format (CLF) as well as JSON): ",(0,l.jsx)(t.code,{children:"accesslog.fields.names.StartUTC=drop"}),"."]}),"\n"]}),"\n",(0,l.jsx)(t.p,{children:"Example utilizing Docker Compose:"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-yaml",children:'version: "3.7"\n\nservices:\n  Mesh:\n    image: Mesh:v3.4\n    environment:\n      - TZ=US/Alaska\n    command:\n      - --accesslog.fields.names.StartUTC=drop\n      - --providers.docker\n    ports:\n      - 80:80\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n'})})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>d});var n=s(6540);const l={},i=n.createContext(l);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);