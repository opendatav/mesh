"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[8389],{5011:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"reference/routing-configuration/kubernetes/gateway-api","title":"Mesh Kubernetes Gateway","description":"The Kubernetes Gateway API can be used as a provider for routing and load balancing in Mesh Proxy. View examples in the technical documentation.","source":"@site/docs/reference/routing-configuration/kubernetes/gateway-api.md","sourceDirName":"reference/routing-configuration/kubernetes","slug":"/reference/routing-configuration/kubernetes/gateway-api","permalink":"/doc/docs/reference/routing-configuration/kubernetes/gateway-api","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/reference/routing-configuration/kubernetes/gateway-api.md","tags":[],"version":"current","frontMatter":{"title":"Mesh Kubernetes Gateway","description":"The Kubernetes Gateway API can be used as a provider for routing and load balancing in Mesh Proxy. View examples in the technical documentation."},"sidebar":"tutorialSidebar","previous":{"title":"IngressRouteUDP","permalink":"/doc/docs/reference/routing-configuration/kubernetes/crd/udp/ingressrouteudp"},"next":{"title":"Kubernetes Ingress Routing Configuration","permalink":"/doc/docs/reference/routing-configuration/kubernetes/ingress"}}');var s=a(4848),o=a(8453);const r={title:"Mesh Kubernetes Gateway",description:"The Kubernetes Gateway API can be used as a provider for routing and load balancing in Mesh Proxy. View examples in the technical documentation."},i="Mesh & Kubernetes with Gateway API",c={},d=[{value:"Deploying a Gateway",id:"deploying-a-gateway",level:2},{value:"Exposing a Route",id:"exposing-a-route",level:2},{value:"HTTP/HTTPS",id:"httphttps",level:3},{value:"Using Mesh middleware as HTTPRoute filter",id:"using-mesh-middleware-as-httproute-filter",level:4},{value:"GRPC",id:"grpc",level:3},{value:"TCP",id:"tcp",level:3},{value:"TLS",id:"tls",level:3},{value:"Native Load Balancing",id:"native-load-balancing",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"mesh--kubernetes-with-gateway-api",children:"Mesh & Kubernetes with Gateway API"})}),"\n",(0,s.jsxs)(n.p,{children:["When using the Kubernetes Gateway API provider, Mesh leverages the Gateway API Custom Resource Definitions (CRDs) to obtain its routing configuration.\nFor detailed information on the Gateway API concepts and resources, refer to the official ",(0,s.jsx)(n.a,{href:"https://gateway-api.sigs.k8s.io/",children:"documentation"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The Kubernetes Gateway API provider supports version ",(0,s.jsx)(n.a,{href:"https://github.com/kubernetes-sigs/gateway-api/releases/tag/v1.2.1",children:"v1.2.1"})," of the specification."]}),"\n",(0,s.jsxs)(n.p,{children:["It fully supports all ",(0,s.jsx)(n.code,{children:"HTTPRoute"})," core and some extended features, like ",(0,s.jsx)(n.code,{children:"GRPCRoute"}),", as well as the ",(0,s.jsx)(n.code,{children:"TCPRoute"})," and ",(0,s.jsx)(n.code,{children:"TLSRoute"})," resources from the ",(0,s.jsx)(n.a,{href:"https://gateway-api.sigs.k8s.io/concepts/versioning/?h=#release-channels",children:"Experimental channel"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["For more details, check out the conformance ",(0,s.jsx)(n.a,{href:"https://github.com/kubernetes-sigs/gateway-api/tree/main/conformance/reports/v1.2.1/mesh-Mesh",children:"report"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"deploying-a-gateway",children:"Deploying a Gateway"}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.code,{children:"Gateway"})," is a core resource in the Gateway API specification that defines the entry point for traffic into a Kubernetes cluster.\nIt is linked to a ",(0,s.jsx)(n.code,{children:"GatewayClass"}),", which specifies the controller responsible for managing and handling the traffic, ensuring that it is directed to the appropriate Kubernetes backend services."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"GatewayClass"})," is a cluster-scoped resource typically defined by the infrastructure provider.\nThe following ",(0,s.jsx)(n.code,{children:"GatewayClass"})," defines that gateways attached to it must be managed by the Mesh controller."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="GatewayClass"',children:"---\napiVersion: gateway.networking.k8s.io/v1\nkind: GatewayClass\nmetadata:\n  name: Mesh\nspec:\n  controllerName: Mesh.io/gateway-controller\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Next, the following ",(0,s.jsx)(n.code,{children:"Gateway"})," manifest configures the running Mesh controller to handle the incoming traffic."]}),"\n",(0,s.jsx)(n.p,{children:'!!! info "Listener ports"'}),"\n",(0,s.jsxs)(n.p,{children:["Please note that ",(0,s.jsx)(n.code,{children:"Gateway"})," listener ports must match the configured ",(0,s.jsx)(n.a,{href:"/doc/docs/reference/install-configuration/entrypoints",children:"EntryPoint ports"})," of the Mesh deployment.\nIn case they do not match, an ",(0,s.jsx)(n.code,{children:"ERROR"})," message is logged, and the resource status is updated accordingly."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="Gateway"',children:"---\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: Mesh\n  namespace: default\nspec:\n  gatewayClassName: Mesh\n  \n  # Only Routes from the same namespace are allowed.\n  listeners:\n    - name: http\n      protocol: HTTP\n      port: 80\n      allowedRoutes:\n        namespaces:\n          from: Same \n\n    - name: https\n      protocol: HTTPS\n      port: 443\n      tls:\n        mode: Terminate\n        certificateRefs:\n          - name: secret-tls\n            namespace: default\n\n      allowedRoutes:\n        namespaces:\n          from: Same\n\n    - name: tcp\n      protocol: TCP\n      port: 3000\n      allowedRoutes:\n        namespaces:\n          from: Same\n\n    - name: tls\n      protocol: TLS\n      port: 3443\n      tls:\n        mode: Terminate\n        certificateRefs:\n          - name: secret-tls\n            namespace: default\n            \n      allowedRoutes:\n        namespaces:\n          from: Same\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="Secret"',children:"---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: secret-tls\n  namespace: default\ntype: kubernetes.io/tls\ndata:\n  # Self-signed certificate for the whoami.localhost domain.\n  tls.crt: |\n    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZWakNDQXo2Z0F3SUJBZ0lVZUUrZG94aTUrMTBMVi9DaUdTMkt2Q1dJR1dZd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1JERUxNQWtHQTFVRUJoTUNSbEl4RFRBTEJnTlZCQWNNQkV4NWIyNHhGVEFUQmdOVkJBb01ERlJ5WVdWbQphV3NnVEdGaWN6RVBNQTBHQTFVRUF3d0dWMmh2WVcxcE1DQVhEVEkwTURjeE1ERTFNRGt3TjFvWUR6SXhNalF3Ck5qRTJNVFV3T1RBM1dqQkVNUXN3Q1FZRFZRUUdFd0pHVWpFTk1Bc0dBMVVFQnd3RVRIbHZiakVWTUJNR0ExVUUKQ2d3TVZISmhaV1pwYXlCTVlXSnpNUTh3RFFZRFZRUUREQVpYYUc5aGJXa3dnZ0lpTUEwR0NTcUdTSWIzRFFFQgpBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRQ1pNNm1WNUJkV2V0QzZtdnp0YVBobFNjZ0ljbnd6Z3NsOEFxendEMk05ClJWVkZwRUxBbTh2OTNlRWtMZEY2ZnNkY0FhUXQxWlFDSFdYby9mTHBRNVVrUHh1djZNUCt2NG1KMHY4ZEtGWjcKUjcwaTVud1lCMkVlVkw2RUNZaWlxNmZ6VEtsa3F6U0QvNW93elN3L3pqa0dUYTBJdy92SDlhc0g3NEhqM1d0QQo3RythenZjaVlhQTZxK1dWYlZxNlBIanF6em9obEFuMkh1ano2aERqYWllc3ZMbHdBL0IvcmhEc0FLaCtpMHI4CkFKUTFqM0JiTGJuYkJyWmZqYnBJUjNhYVh5amkwK3RQWENnVTkzQmU5dm1LZTZTY0dSNy82T25tYmtTc0xjZFcKaFpVNzcrL2c4WllsZGhwS01nczc4ekJYUlh4bHlzSThHRUtqU1hud3k5WmZNT2RJNEpBTWNtT0lOaVlBY21abgpJTUJIa0xacFl3aUl0eFdseXVJcWxoZFpkSHNrTFdNSjBSTHUxRmhTMnBFV0NOZTM3VDBiOWhtNFg0OXJ1QWJ6Ckl1M01xSmczcXFIdGRMNGRkZ1JZRHNjMXd0cDJrR2dBZGxDaXJIclF6K1l4MEJNT1ZsZEczaG1SUUh5ZHEySHIKWW0xeEFDNWpMZ3FvaVZhY09wd0xKY21PcGsrZWVNQkNZNVo0ekNYN1hXeXdhVmNtMnN2aGlPMThCZFIraDloWQpiMkRNZDFCendDbE95endQcUlvQy9uNGRURG96Ry9GT3NySzgvNEZ4dzY2Q1ZmM3E4MzBNUHdSd2xDSzFDQjdGCjNQK3lKWkpPelRuK05QZ2dGQW9NaGZUYXBQWTFhUGlWajBzVG9vQjBaOGNFV1RkTnJxQU5tUGs5aDNoQjJwbjgKSndJREFRQUJvejR3UERBYkJnTlZIUkVFRkRBU2doQjNhRzloYldrdWJHOWpZV3hvYjNOME1CMEdBMVVkRGdRVwpCQlNGSjF4N01xdG9zQ3UwQmFWbEs1U054K2djampBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQWdFQVdCOVc1eWkzClRpTWpmSThhSCtMZW1wZjc4clhyeWJ6UXJvSXdEazhqQXhnc3Nrc2V2ZEtIaXJIZGJMZ0RoS2krbkJLeEQ5S2QKNWM4RS9VL1VHWUhxaUowTVUzYkpoeTVNM3oyaklKd1hFa3FuVVhRd0dBNzVyU0QxWVBkOTlWeVpuNEJVRlEwdwpCT3loOU5DS3Z3ZTgycUVlOWZmeU5iem5JUEMrNS9pekhaYlNQMEpwRzdtNFQ5TXljdHV1OTlsaVhmSVlCMU1PCkRFRUdpamxhZ3JvdTliVlpsNmovR2xCaVZpU0JVQXhaRlNqdFErV2RFODJaZlFRUFVWdXQrUEY0SEl0N1dmYlgKaUpZbjRsMytJSVczNStvbUZ5QjR5WUJNdU9SVWRsZ3V5N1ZieEU5OTdPdHYzTnpDOGJYcGtaQVM0TkVzQVVFdwpJZ3lOcTFCdExsb3dZdjZXY05HbkJ5RE1NRUMzdUYzNEcxQkJCTzFDRHUrYXBVdW5NbVhUWmU5WlkrbXh4U2Z2CnBZclhHTHBoT2t4ZitQalpMbEpqQVFlcTNxblMvWWtLQmtYQi9zb282ZVVLTTlybyt5RTVMbnFrV20wZXpQWmwKc2Z5NGpqZ0lJUHlUMHhhZ0YyWExzUSs0M3N4aDRYTEhmc3Z3Zis2QnJVK2trTnoydmc2M3duLzJDQUNVVms3bgphSDdwZzZyZGt4T2pOTDJjUGd6ZzhWaExXbkVYYjhhUVJlVjY1WnlRc0xta21oOXBlSFRpYXBUb2xWa0d6TDIwCm9pdExZc3ZUcnhUR2NRd3Jpd3FaT1I3WjEvVEJLVnVoYnp0emxlRjFHRk9LdE52UmNSREVBeWVlbnJDRzRRMmgKMnFNNFh1RFFKcjJrR095OEV0dnlYTitENkNZUkg0ck5vZUk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n\n  tls.key: |\n    LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRUUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1Nzd2dna25BZ0VBQW9JQ0FRQ1pNNm1WNUJkV2V0QzYKbXZ6dGFQaGxTY2dJY253emdzbDhBcXp3RDJNOVJWVkZwRUxBbTh2OTNlRWtMZEY2ZnNkY0FhUXQxWlFDSFdYbwovZkxwUTVVa1B4dXY2TVArdjRtSjB2OGRLRlo3UjcwaTVud1lCMkVlVkw2RUNZaWlxNmZ6VEtsa3F6U0QvNW93CnpTdy96amtHVGEwSXcvdkg5YXNINzRIajNXdEE3RythenZjaVlhQTZxK1dWYlZxNlBIanF6em9obEFuMkh1anoKNmhEamFpZXN2TGx3QS9CL3JoRHNBS2graTByOEFKUTFqM0JiTGJuYkJyWmZqYnBJUjNhYVh5amkwK3RQWENnVQo5M0JlOXZtS2U2U2NHUjcvNk9ubWJrU3NMY2RXaFpVNzcrL2c4WllsZGhwS01nczc4ekJYUlh4bHlzSThHRUtqClNYbnd5OVpmTU9kSTRKQU1jbU9JTmlZQWNtWm5JTUJIa0xacFl3aUl0eFdseXVJcWxoZFpkSHNrTFdNSjBSTHUKMUZoUzJwRVdDTmUzN1QwYjlobTRYNDlydUFiekl1M01xSmczcXFIdGRMNGRkZ1JZRHNjMXd0cDJrR2dBZGxDaQpySHJReitZeDBCTU9WbGRHM2htUlFIeWRxMkhyWW0xeEFDNWpMZ3FvaVZhY09wd0xKY21PcGsrZWVNQkNZNVo0CnpDWDdYV3l3YVZjbTJzdmhpTzE4QmRSK2g5aFliMkRNZDFCendDbE95endQcUlvQy9uNGRURG96Ry9GT3NySzgKLzRGeHc2NkNWZjNxODMwTVB3UndsQ0sxQ0I3RjNQK3lKWkpPelRuK05QZ2dGQW9NaGZUYXBQWTFhUGlWajBzVApvb0IwWjhjRVdUZE5ycUFObVBrOWgzaEIycG44SndJREFRQUJBb0lDQUVCa2dKRXA3ODAvamVBQktQSTR2cjhFCkJmblc5UEZKdFpwVUhaQkJSM3NIVzFJTU9xcHVVWTJBNXhLbjEzWmZOemdxMEhFYlpqeUZVc0pkaXU0VW8razYKUlU3b3pRaVVSU0VTK0h1dTZycWlhcEx5d1pIditCZ2hrbm80NzU4Lyt6VytNU3pJOFNmU0ZXTVJ1ZG1QdWxRMQo3ZGJUV1U2d3FaU0tUTlFUeXZMYzdnUHBuZUpybWtkTzNRNnppZ0RoVGdtVDFHRXNzZ3NxN3NzbXhMWnhkZithCnkyNlRtVkJ4UDFlUzV6OVpHTWxYRFBSK044RjdOTFVrMng3S21WT3NCZVBZdjN5bmlpNHZGQUhNQndWRFZadXAKWUlUajRpMjZIaVhtanlLM2t5T0F2anNWSElRMXh1QTBCZFROdC84WXRtYllJL005QitydVg0UDJiRFNUMktRKwo4TlN2Uk9wbVppcnBHZkY3bExMSGpJUjlTMFhCWDd6VDRoWnBRWnpqK3NEWnhDM2Y3TGIwRFlKYkp0TmlDYTQxCmNpTjhNUlNldzNneHZ0RVk0RzdnN3hjbkJNdjdNT3RwQTE3d2gvMHdLd0h0amYzSWh2TmIzdkZwT0k5d1FqSzYKSlRQMng4bENJV0tyalpObVN0UksreHJTN3hTOUZVdnBhSVlyclRLQkZWSmcyMURCYWI1L3hqRlBlQWxXejczSwpvVkhsa0hLdXNMSjZLczZzcXo0ZG9mbzg3dkFsUFJzTXRkZ1ZnZFIzNXhLTGtEWXNIbGxML3Z5dE9oSkNieXB5CkJqQm1TR0RMdzBDdWplaHVtU2czYjdSUGVTNk5rbHNqUEIrMVpzRjhpVGdCcjMyM1hvTmNha2dhWWVYQlg4NFAKaE1WZHUxWk1rbXJZMWhXTzEydnhBb0lCQVFEWU5Vb2xCMkhsdWlDcVFqdmU4UFNhV0YxRmhwNUlOMGJIZEppeApIdkhqMkplVHJ6V1pUZFlIdFNJR2RzalhTOTBESXo2bXJhMW9YZXFRYlgrODVlOUFQQkZnRTJmNU5uTzBCSVVJCk5hMXRiVGpIOUhjRGRzQmJKUkZwYnk1ODZUb3lhdFY3bS9zcjVpQUZlZFMyenFOTm1XUmZOdllZS2xselZoSEUKdUd4ZjZxMHJTWktVQUhja2s1bU5Yais3WFhZaTgyemErVEE3ZjBDVm5OamR3OXFpd3B2aTJKTFB2SnA0bWt6KwpyMEN1RW9yV2NhMUdTL2hTVWdXemw3NzhQdlRpZFI2RW4zMDB2ZlIyTE84aG1xRjhVL3Bpb2UrTDVjSllRNnNKCk1YMngrYThzWFFpZ3dwdG02aUNxQ2FuS3ExN3NUZS9RTmQ1czdwb3ZOaHVKOHd3dEFvSUJBUUMxWmM5ZktPUFgKVzZSN1VoaHRRcmhIc3htQnRIQ1BuNWRLbjN5MElNNWRBaEFSdFZDV1U0M0hOTHpCNW1LbjU2dnZrSVNFaXdBbAoxTGhuY2I3YXQ2cHpTSlZtMm5oTDhjeUZrdGQrNzVyL1FHNFlpNnZQbHNBODV5ZXZpZDhZcWswaHdaZXExY05xCmxETUN3NWsrV0drckM2VW5jZXNIc2FWbDJTUGdZV1c1L3I1NnVxUnBsaVFka1EyZmlEYWRyblVueU8ycHg3bFMKVG1HemZaNmtzTWh2MlZFR1NPRm05aUo0dWlPb0xyZVhoU1RQRmxTdjdZUTZSWWtSaGgwT0tqdXM5bXZacEIxWApjcytYN0UyVTNlM0RZelpCR0NFdmxxaFNWTFRScjdIN21pMWxUMEozR0RzbDdiUk9xOE50WVdQa3hhSlNCUnQ5Ck9TcTlkTm9CcGRvakFvSUJBQ2lQdnN3NW1WVW0yUS80QXhGdE5RWnJ3M3ZTcUlrMXpaS0h2a21rVzQ3NlNGMk4KaGttdmY1TE1tWWlLNmx6eHY1SGlIOVBYUzJ3RUNvaHo4bjMyeVM3TTFobW5LbDlucHNkRC9jMHZmTXpGcTl4ZgpjYUIxdTlxZGxxbW9FUm1nQzZuL3Z2TkVyUmRzUWQrbEhwSDVMRXZYbGl3Q3ZLS0Y5MmdhNHBSOFlPQ1J2MUVhCnFXUVl2a0ZmYTNSSkZUM0taK3BncnJCYUJZRnoreUxXWFIwbHJEUFN2TG9QRldQaHB6MHUvWGplV2cwT0wzdlIKc2NjNVkybldOM21jNDFpaFd3SE5KUitPYUVmbnh5QVFpQUJPNlRMUThtMWtvZk1sOUpMb2h3TGZoUXhKb21KNQpSYkFiTWxwWlhDMXFTSzliL1IvcDh5NmxuSWZsTDRuaDVjSzRsVFVDZ2dFQUpSSHVSQU1tTksrTXVJcjVaUEs2Cm1DUjR0UEg4QXMzWmJDMlZuWFlLMWlVQ3hhdXBFVjkzM05yaExEcjV0Rmg2NFpWR0Q1UWNicDYvSkp5eEpSOWQKblB1YlZJNlhBT1lrSnJQd2lBZE5SSmFWS1R6NTJvMXpNYjhIZEM4WHdZR2tDNTcxY0xzSW1YSTV6bm5NaWxvaworK0FBVzBSRGhLb0FKQVV3K0x6T3ZpamFJbGljR3R2TSs2SFdCK0VkVURJRHpTS1p0eFdTd01nMTNTbHh6elExCmNlNFdTZE9CQkxxT0p0L2JRNVp3ZkcyQUxUWGlEcVhhWE5JekJickRtMDUwTFkrYVVMcmlLQ25WVkxXODBReGQKZDQyQjIrR2pmb2NxVk5Ec3R1RlIzUm9QNXVGQXN2Zm50b09TVW5WMWxaZk9nMFVFUEFEQk1tRUpZL2hLU1FYcwp3d0tDQVFBNWQya2hFQ1c1V3QrMzRYWnl1b3NFTjZ4UDExbC96VDRBZjhGSWtQLzlkb0JXRnBhc28zbG1NcXZHCmhPeFErbnZBSjFhNzhZRjA4N3p1UC9DZkQ0UElOUTV4YzZHMDNQdG5JOVNVT0dpMDB4Zlg5MU5NMHBHYWJqb0QKZ0RqVzJxSkJDaVB5N0RIR1RlZkU5eUNUbkhrY1NBbWllVGc3aGFyeEZPOUREZTJKbzhKQXV2SHI1aGVxazVIcgpLYlgzTy9vNUMwcWVnYW1rWVRLcHZzV2VFdXhkY2l5LzFQd3NnV3BuV1JPWllQNENrSkJweEx1bDNVamVSY3dkCnRhcjBJYU52WlV2NFd4U0JZdWVHMDFyYUd2SDZtTTcyTEExR3MrMytwTnZwUVo3bGo2S09tcFlhQUlhemVxY2MKTjJjT2R5U1RqZmQ5OFlNVFAxbmIyK3N1Yy91VAotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==\n"})}),"\n",(0,s.jsx)(n.h2,{id:"exposing-a-route",children:"Exposing a Route"}),"\n",(0,s.jsxs)(n.p,{children:["Once a ",(0,s.jsx)(n.code,{children:"Gateway"})," is deployed (see ",(0,s.jsx)(n.a,{href:"#deploying-a-gateway",children:"Deploying a Gateway"}),") ",(0,s.jsx)(n.code,{children:"HTTPRoute"}),", ",(0,s.jsx)(n.code,{children:"TCPRoute"}),",\nand/or ",(0,s.jsx)(n.code,{children:"TLSRoute"})," resources must be deployed to forward some traffic to Kubernetes backend ",(0,s.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"services"}),"."]}),"\n",(0,s.jsx)(n.p,{children:'!!! info "Attaching to Gateways"'}),"\n",(0,s.jsxs)(n.p,{children:["As demonstrated in the following examples, a Route resource must be configured with ",(0,s.jsx)(n.code,{children:"ParentRefs"})," that reference the parent ",(0,s.jsx)(n.code,{children:"Gateway"})," it should be associated with."]}),"\n",(0,s.jsx)(n.h3,{id:"httphttps",children:"HTTP/HTTPS"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"HTTPRoute"})," is a core resource in the Gateway API specification, designed to define how HTTP traffic should be routed within a Kubernetes cluster.\nIt allows the specification of routing rules that direct HTTP requests to the appropriate Kubernetes backend services."]}),"\n",(0,s.jsxs)(n.p,{children:["For more details on the resource and concepts, check out the Kubernetes Gateway API ",(0,s.jsx)(n.a,{href:"https://gateway-api.sigs.k8s.io/api-types/httproute/",children:"documentation"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["For example, the following manifests configure a whoami backend and its corresponding ",(0,s.jsx)(n.code,{children:"HTTPRoute"}),",\nreachable through the ",(0,s.jsxs)(n.a,{href:"#deploying-a-gateway",children:["deployed ",(0,s.jsx)(n.code,{children:"Gateway"})]})," at the ",(0,s.jsx)(n.code,{children:"http://whoami.localhost"})," address."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="HTTPRoute"',children:"---\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: whoami-http\n  namespace: default\nspec:\n  parentRefs:\n    - name: Mesh\n      sectionName: http\n      kind: Gateway\n\n  hostnames:\n    - whoami.localhost\n\n  rules:\n     - matches:\n        - path:\n            type: PathPrefix\n            value: /\n\n       backendRefs:\n        - name: whoami\n          namespace: default\n          port: 80\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="Whoami deployment"',children:"---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: whoami\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: whoami\n\n  template:\n    metadata:\n      labels:\n        app: whoami\n    spec:\n      containers:\n        - name: whoami\n          image: Mesh/whoami\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: whoami\n  namespace: default\nspec:\n  selector:\n    app: whoami\n\n  ports:\n    - port: 80\n"})}),"\n",(0,s.jsxs)(n.p,{children:["To secure the connection with HTTPS and redirect non-secure request to the secure endpoint,\nwe will update the above ",(0,s.jsx)(n.code,{children:"HTTPRoute"})," manifest to add a ",(0,s.jsx)(n.code,{children:"RequestRedirect"})," filter,\nand add a new ",(0,s.jsx)(n.code,{children:"HTTPRoute"})," which binds to the https ",(0,s.jsx)(n.code,{children:"Listener"})," and forward the traffic to the whoami backend."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="HTTRoute (HTTP)"',children:"---\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: whoami-http\n  namespace: default\nspec:\n  parentRefs:\n    - name: Mesh\n      sectionName: http\n      kind: Gateway\n\n  hostnames:\n    - whoami.localhost\n\n  rules:\n    - filters:\n        - type: RequestRedirect\n          requestRedirect:\n            scheme: https\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="HTTRoute (HTTPS)"',children:"---\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: whoami-https\n  namespace: default\nspec:\n  parentRefs:\n    - name: Mesh\n      sectionName: https\n      kind: Gateway\n\n  hostnames:\n    - whoami.localhost\n\n  rules:\n    - matches:\n        - path:\n            type: PathPrefix\n            value: /\n\n      backendRefs:\n        - name: whoami\n          namespace: default\n          port: 80\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Once everything is deployed, sending a ",(0,s.jsx)(n.code,{children:"GET"})," request to the HTTP and HTTPS endpoints should return the following responses:"]}),"\n",(0,s.jsx)(n.p,{children:'??? success "Response"'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ curl -I http://whoami.localhost\n\nHTTP/1.1 302 Found\nLocation: https://whoami.localhost/\nDate: Thu, 11 Jul 2024 15:11:31 GMT\nContent-Length: 5\n\n$ curl -k https://whoami.localhost\n\nHostname: whoami-697f8c6cbc-2krl7\nIP: 127.0.0.1\nIP: ::1\nIP: 10.42.1.5\nIP: fe80::60ed:22ff:fe10:3ced\nRemoteAddr: 10.42.2.4:44682\nGET / HTTP/1.1\nHost: whoami.localhost\nUser-Agent: curl/7.87.1-DEV\nAccept: */*\nAccept-Encoding: gzip\nX-Forwarded-For: 10.42.1.0\nX-Forwarded-Host: whoami.localhost\nX-Forwarded-Port: 443\nX-Forwarded-Proto: https\nX-Forwarded-Server: mesh-6b66d45748-ns8mt\nX-Real-Ip: 10.42.1.0\n"})}),"\n",(0,s.jsx)(n.h4,{id:"using-mesh-middleware-as-httproute-filter",children:"Using Mesh middleware as HTTPRoute filter"}),"\n",(0,s.jsxs)(n.p,{children:["An HTTP ",(0,s.jsx)(n.a,{href:"https://gateway-api.sigs.k8s.io/api-types/httproute/#filters-optional",children:"filter"})," is an ",(0,s.jsx)(n.code,{children:"HTTPRoute"})," component which enables the modification of HTTP requests and responses as they traverse the routing infrastructure."]}),"\n",(0,s.jsx)(n.p,{children:"There are three types of filters:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Core:"})," Mandatory filters for every Gateway controller, such as ",(0,s.jsx)(n.code,{children:"RequestHeaderModifier"})," and ",(0,s.jsx)(n.code,{children:"RequestRedirect"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Extended:"})," Optional filters for Gateway controllers, such as ",(0,s.jsx)(n.code,{children:"ResponseHeaderModifier"})," and ",(0,s.jsx)(n.code,{children:"RequestMirror"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ExtensionRef:"})," Additional filters provided by the Gateway controller. In Mesh, these are the ",(0,s.jsx)(n.a,{href:"/doc/docs/reference/routing-configuration/http/middlewares/overview",children:"HTTP middlewares"})," supported through the ",(0,s.jsx)(n.a,{href:"/doc/docs/reference/routing-configuration/kubernetes/crd/http/middleware",children:"Middleware CRD"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:'!!! info "ExtensionRef Filters"'}),"\n",(0,s.jsxs)(n.p,{children:["To use Mesh middlewares as ",(0,s.jsx)(n.code,{children:"ExtensionRef"})," filters, the Kubernetes IngressRoute provider must be enabled in the static configuration, as detailed in the ",(0,s.jsx)(n.a,{href:"/doc/docs/reference/install-configuration/providers/kubernetes/kubernetes-ingress",children:"documentation"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["For example, the following manifests configure an ",(0,s.jsx)(n.code,{children:"HTTPRoute"})," using the Mesh ",(0,s.jsx)(n.code,{children:"AddPrefix"})," middleware,\nreachable through the ",(0,s.jsxs)(n.a,{href:"#deploying-a-gateway",children:["deployed ",(0,s.jsx)(n.code,{children:"Gateway"})]})," at the ",(0,s.jsx)(n.code,{children:"http://whoami.localhost"})," address:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="HTTRoute"',children:"---\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: whoami-http\n  namespace: default\nspec:\n  parentRefs:\n    - name: Mesh\n      sectionName: http\n      kind: Gateway\n\n  hostnames:\n    - whoami.localhost\n\n  rules:\n    - backendRefs:\n        - name: whoami\n          namespace: default\n          port: 80\n\n      filters:\n        - type: ExtensionRef\n          extensionRef:\n            group: Mesh.io\n            kind: Middleware\n            name: add-prefix\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="AddPrefix middleware"',children:"---\napiVersion: Mesh.io/v1alpha1\nkind: Middleware\nmetadata:\n  name: add-prefix\n  namespace: default\nspec:\n  addPrefix:\n    prefix: /prefix\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="Whoami deployment"',children:"---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: whoami\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: whoami\n\n  template:\n    metadata:\n      labels:\n        app: whoami\n    spec:\n      containers:\n        - name: whoami\n          image: Mesh/whoami\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: whoami\n  namespace: default\nspec:\n  selector:\n    app: whoami\n  ports:\n    - port: 80\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Once everything is deployed, sending a ",(0,s.jsx)(n.code,{children:"GET"})," request should return the following response:"]}),"\n",(0,s.jsx)(n.p,{children:'??? success "Response"'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ curl http://whoami.localhost\n                                                                                                    \nHostname: whoami-697f8c6cbc-kw954\nIP: 127.0.0.1\nIP: ::1\nIP: 10.42.2.6\nIP: fe80::a460:ecff:feb6:3a56\nRemoteAddr: 10.42.2.4:54758\nGET /prefix/ HTTP/1.1\nHost: whoami.localhost\nUser-Agent: curl/7.87.1-DEV\nAccept: */*\nAccept-Encoding: gzip\nX-Forwarded-For: 10.42.2.1\nX-Forwarded-Host: whoami.localhost\nX-Forwarded-Port: 80\nX-Forwarded-Proto: http\nX-Forwarded-Server: mesh-6b66d45748-ns8mt\nX-Real-Ip: 10.42.2.1\n"})}),"\n",(0,s.jsx)(n.h3,{id:"grpc",children:"GRPC"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"GRPCRoute"})," is an extended resource in the Gateway API specification, designed to define how GRPC traffic should be routed within a Kubernetes cluster.\nIt allows the specification of routing rules that direct GRPC requests to the appropriate Kubernetes backend services."]}),"\n",(0,s.jsxs)(n.p,{children:["For more details on the resource and concepts, check out the Kubernetes Gateway API ",(0,s.jsx)(n.a,{href:"https://gateway-api.sigs.k8s.io/api-types/grpcroute/",children:"documentation"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["For example, the following manifests configure an echo backend and its corresponding ",(0,s.jsx)(n.code,{children:"GRPCRoute"}),",\nreachable through the ",(0,s.jsxs)(n.a,{href:"#deploying-a-gateway",children:["deployed ",(0,s.jsx)(n.code,{children:"Gateway"})]})," at the ",(0,s.jsx)(n.code,{children:"echo.localhost:80"})," address."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="GRPCRoute"',children:"---\napiVersion: gateway.networking.k8s.io/v1\nkind: GRPCRoute\nmetadata:\n  name: echo\n  namespace: default\nspec:\n  parentRefs:\n    - name: Mesh\n      sectionName: http\n      kind: Gateway\n\n  hostnames:\n    - echo.localhost\n\n  rules:\n    - matches:\n        - method:\n            type: Exact\n            service: grpc.reflection.v1alpha.ServerReflection\n\n        - method:\n            type: Exact\n            service: gateway_api_conformance.echo_basic.grpcecho.GrpcEcho\n            method: Echo\n\n      backendRefs:\n        - name: echo\n          namespace: default\n          port: 3000\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="Echo deployment"',children:'---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: echo\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: echo\n\n  template:\n    metadata:\n      labels:\n        app: echo\n    spec:\n      containers:\n        - name: echo-basic\n          image: gcr.io/k8s-staging-gateway-api/echo-basic\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: GRPC_ECHO_SERVER\n              value: "1"\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: echo\n  namespace: default\nspec:\n  selector:\n    app: echo\n\n  ports:\n    - port: 3000\n'})}),"\n",(0,s.jsx)(n.p,{children:"Once everything is deployed, sending a GRPC request to the HTTP endpoint should return the following response:"}),"\n",(0,s.jsx)(n.p,{children:'??? success "Response"'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'$ grpcurl -plaintext echo.localhost:80 gateway_api_conformance.echo_basic.grpcecho.GrpcEcho/Echo\n\n{\n  "assertions": {\n    "fullyQualifiedMethod": "/gateway_api_conformance.echo_basic.grpcecho.GrpcEcho/Echo",\n    "headers": [\n      {\n        "key": "x-real-ip",\n        "value": "10.42.2.0"\n      },\n      {\n        "key": "x-forwarded-server",\n        "value": "mesh-74b4cf85d8-nkqqf"\n      },\n      {\n        "key": "x-forwarded-port",\n        "value": "80"\n      },\n      {\n        "key": "x-forwarded-for",\n        "value": "10.42.2.0"\n      },\n      {\n        "key": "grpc-accept-encoding",\n        "value": "gzip"\n      },\n      {\n        "key": "user-agent",\n        "value": "grpcurl/1.9.1 grpc-go/1.61.0"\n      },\n      {\n        "key": "content-type",\n        "value": "application/grpc"\n      },\n      {\n        "key": "x-forwarded-host",\n        "value": "echo.localhost:80"\n      },\n      {\n        "key": ":authority",\n        "value": "echo.localhost:80"\n      },\n      {\n        "key": "accept-encoding",\n        "value": "gzip"\n      },\n      {\n        "key": "x-forwarded-proto",\n        "value": "http"\n      }\n    ],\n    "authority": "echo.localhost:80",\n    "context": {\n      "namespace": "default",\n      "pod": "echo-78f76675cf-9k7rf"\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"tcp",children:"TCP"}),"\n",(0,s.jsx)(n.p,{children:'!!! info "Experimental Channel"'}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"TCPRoute"})," resource described below is currently available only in the Experimental channel of the Gateway API specification.\nTo use this resource, the ",(0,s.jsx)(n.a,{href:"/doc/docs/reference/install-configuration/providers/kubernetes/kubernetes-gateway",children:"experimentalChannel"})," configuration option must be enabled in the Mesh deployment."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"TCPRoute"})," is a resource in the Gateway API specification designed to define how TCP traffic should be routed within a Kubernetes cluster."]}),"\n",(0,s.jsxs)(n.p,{children:["For more details on the resource and concepts, check out the Kubernetes Gateway API ",(0,s.jsx)(n.a,{href:"https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1alpha2.TCPRoute",children:"documentation"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["For example, the following manifests configure a whoami backend and its corresponding ",(0,s.jsx)(n.code,{children:"TCPRoute"}),",\nreachable through the ",(0,s.jsxs)(n.a,{href:"#deploying-a-gateway",children:["deployed ",(0,s.jsx)(n.code,{children:"Gateway"})]})," at the ",(0,s.jsx)(n.code,{children:"localhost:3000"})," address."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="TCPRoute"',children:"---\napiVersion: gateway.networking.k8s.io/v1alpha2\nkind: TCPRoute\nmetadata:\n  name: whoami-tcp\n  namespace: default\nspec:\n  parentRefs:\n    - name: Mesh\n      sectionName: tcp\n      kind: Gateway\n\n  rules:\n     - backendRefs:\n        - name: whoamitcp\n          namespace: default\n          port: 3000\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="Whoami deployment"',children:"---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: whoamitcp\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: whoamitcp\n\n  template:\n    metadata:\n      labels:\n        app: whoamitcp\n    spec:\n      containers:\n        - name: whoami\n          image: Mesh/whoamitcp\n          args:\n            - --port=:3000\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: whoamitcp\n  namespace: default\nspec:\n  selector:\n    app: whoamitcp\n  ports:\n    - port: 3000\n"})}),"\n",(0,s.jsx)(n.p,{children:"Once everything is deployed, sending the WHO command should return the following response:"}),"\n",(0,s.jsx)(n.p,{children:'??? success "Response"'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ nc localhost 3000\n\nWHO\nHostname: whoamitcp-85d644bfc-ktzv4\nIP: 127.0.0.1\nIP: ::1\nIP: 10.42.1.4\nIP: fe80::b89e:85ff:fec2:7d21\n"})}),"\n",(0,s.jsx)(n.h3,{id:"tls",children:"TLS"}),"\n",(0,s.jsx)(n.p,{children:'!!! info "Experimental Channel"'}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"TLSRoute"})," resource described below is currently available only in the Experimental channel of the Gateway API.\nTherefore, to use this resource, the ",(0,s.jsx)(n.a,{href:"/doc/docs/reference/install-configuration/providers/kubernetes/kubernetes-gateway",children:"experimentalChannel"})," option must be enabled."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"TLSRoute"})," is a resource in the Gateway API specification designed to define how TLS (Transport Layer Security) traffic should be routed within a Kubernetes cluster.\nIt specifies routing rules for TLS connections, directing them to appropriate backend services based on the SNI (Server Name Indication) of the incoming connection."]}),"\n",(0,s.jsxs)(n.p,{children:["For more details on the resource and concepts, check out the Kubernetes Gateway API ",(0,s.jsx)(n.a,{href:"https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1alpha2.TLSRoute",children:"documentation"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["For example, the following manifests configure a whoami backend and its corresponding ",(0,s.jsx)(n.code,{children:"TLSRoute"}),",\nreachable through the ",(0,s.jsxs)(n.a,{href:"#deploying-a-gateway",children:["deployed ",(0,s.jsx)(n.code,{children:"Gateway"})]})," at the ",(0,s.jsx)(n.code,{children:"localhost:3443"})," address via a secure connection with the ",(0,s.jsx)(n.code,{children:"whoami.localhost"})," SNI."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="TLSRoute"',children:"---\napiVersion: gateway.networking.k8s.io/v1alpha2\nkind: TLSRoute\nmetadata:\n  name: whoami-tls\n  namespace: default\nspec:\n  parentRefs:\n    - name: Mesh\n      sectionName: tls\n      kind: Gateway\n\n  hostnames:\n    - whoami.localhost\n\n  rules:\n    - backendRefs:\n        - name: whoamitcp\n          namespace: default\n          port: 3000\n\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="Whoami deployment"',children:"---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: whoamitcp\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: whoamitcp\n\n  template:\n    metadata:\n      labels:\n        app: whoamitcp\n    spec:\n      containers:\n        - name: whoami\n          image: Mesh/whoamitcp\n          args:\n            - --port=:3000\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: whoamitcp\n  namespace: default\nspec:\n  selector:\n    app: whoamitcp\n  ports:\n    - port: 3000\n"})}),"\n",(0,s.jsx)(n.p,{children:"Once everything is deployed, sending the WHO command should return the following response:"}),"\n",(0,s.jsx)(n.p,{children:'??? success "Response"'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ openssl s_client -quiet -connect localhost:3443 -servername whoami.localhost\nConnecting to ::1\ndepth=0 C=FR, L=Lyon, O=Mesh Labs, CN=Whoami\nverify error:num=18:self-signed certificate\nverify return:1\ndepth=0 C=FR, L=Lyon, O=Mesh Labs, CN=Whoami\nverify return:1\n\nWHO\nHostname: whoamitcp-85d644bfc-hnmdz\nIP: 127.0.0.1\nIP: ::1\nIP: 10.42.2.4\nIP: fe80::d873:20ff:fef5:be86\n"})}),"\n",(0,s.jsx)(n.h2,{id:"native-load-balancing",children:"Native Load Balancing"}),"\n",(0,s.jsx)(n.p,{children:"By default, Mesh sends the traffic directly to the pod IPs and reuses the established connections to the backends for performance purposes."}),"\n",(0,s.jsxs)(n.p,{children:["It is possible to override this behavior and configure Mesh to send the traffic to the service IP.\nThe Kubernetes service itself does the load balancing to the pods.\nIt can be done with the annotation ",(0,s.jsx)(n.code,{children:"Mesh.io/service.nativelb"})," on the backend ",(0,s.jsx)(n.code,{children:"Service"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["By default, NativeLB is ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsx)(n.p,{children:'!!! info "Default value"'}),"\n",(0,s.jsxs)(n.p,{children:["Note that it is possible to override the default value by using the option ",(0,s.jsx)(n.a,{href:"/doc/docs/reference/install-configuration/providers/kubernetes/kubernetes-gateway",children:(0,s.jsx)(n.code,{children:"nativeLBByDefault"})})," at the provider level."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'---\napiVersion: v1\nkind: Service\nmetadata:\n  name: myservice\n  namespace: default\n  annotations:\n    Mesh.io/service.nativelb: "true"\nspec:\n[...]\n'})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>i});var t=a(6540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);