"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[71],{913:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"routing/routers/index","title":"Mesh Routers Documentation","description":"In Mesh Proxy, a router is in charge of connecting incoming requests to the Services that can handle them. Read the technical documentation.","source":"@site/docs/routing/routers/index.md","sourceDirName":"routing/routers","slug":"/routing/routers/","permalink":"/doc/docs/routing/routers/","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/routing/routers/index.md","tags":[],"version":"current","frontMatter":{"title":"Mesh Routers Documentation","description":"In Mesh Proxy, a router is in charge of connecting incoming requests to the Services that can handle them. Read the technical documentation."},"sidebar":"tutorialSidebar","previous":{"title":"Mesh Docker Swarm Routing Documentation","permalink":"/doc/docs/routing/providers/swarm"},"next":{"title":"Mesh Services Documentation","permalink":"/doc/docs/routing/services/"}}');var s=r(4848),i=r(8453);const o={title:"Mesh Routers Documentation",description:"In Mesh Proxy, a router is in charge of connecting incoming requests to the Services that can handle them. Read the technical documentation."},a="Routers",c={},l=[{value:"Configuration Example",id:"configuration-example",level:2},{value:"Configuring HTTP Routers",id:"configuring-http-routers",level:2},{value:"EntryPoints",id:"entrypoints",level:3},{value:"Rule",id:"rule",level:3},{value:"Header and HeaderRegexp",id:"header-and-headerregexp",level:4},{value:"Host and HostRegexp",id:"host-and-hostregexp",level:4},{value:"Method",id:"method",level:4},{value:"Path, PathPrefix, and PathRegexp",id:"path-pathprefix-and-pathregexp",level:4},{value:"Query and QueryRegexp",id:"query-and-queryregexp",level:4},{value:"ClientIP",id:"clientip",level:4},{value:"Priority",id:"priority",level:3},{value:"RuleSyntax",id:"rulesyntax",level:3},{value:"Middlewares",id:"middlewares",level:3},{value:"Service",id:"service",level:3},{value:"TLS",id:"tls",level:3},{value:"General",id:"general",level:4},{value:"<code>options</code>",id:"options",level:4},{value:"<code>certResolver</code>",id:"certresolver",level:4},{value:"<code>domains</code>",id:"domains",level:4},{value:"Observability",id:"observability",level:3},{value:"<code>accessLogs</code>",id:"accesslogs",level:4},{value:"<code>metrics</code>",id:"metrics",level:4},{value:"<code>tracing</code>",id:"tracing",level:4},{value:"Configuring TCP Routers",id:"configuring-tcp-routers",level:2},{value:"General",id:"general-1",level:3},{value:"EntryPoints",id:"entrypoints-1",level:3},{value:"Rule",id:"rule-1",level:3},{value:"HostSNI and HostSNIRegexp",id:"hostsni-and-hostsniregexp",level:4},{value:"ClientIP",id:"clientip-1",level:4},{value:"ALPN",id:"alpn",level:4},{value:"Priority",id:"priority-1",level:3},{value:"RuleSyntax",id:"rulesyntax-1",level:3},{value:"Middlewares",id:"middlewares-1",level:3},{value:"Services",id:"services",level:3},{value:"TLS",id:"tls-1",level:3},{value:"General",id:"general-2",level:4},{value:"<code>passthrough</code>",id:"passthrough",level:4},{value:"<code>options</code>",id:"options-1",level:4},{value:"<code>certResolver</code>",id:"certresolver-1",level:4},{value:"<code>domains</code>",id:"domains-1",level:4},{value:"Configuring UDP Routers",id:"configuring-udp-routers",level:2},{value:"General",id:"general-3",level:3},{value:"EntryPoints",id:"entrypoints-2",level:3},{value:"Services",id:"services-1",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"routers",children:"Routers"})}),"\n",(0,s.jsx)(n.p,{children:"Connecting Requests to Services"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"routers",src:r(2101).A+"",width:"719",height:"398"})}),"\n",(0,s.jsxs)(n.p,{children:["A router is in charge of connecting incoming requests to the services that can handle them.\nIn the process, routers may use pieces of ",(0,s.jsx)(n.a,{href:"/doc/docs/middlewares/overview",children:"middleware"})," to update the request,\nor act before forwarding the request to the service."]}),"\n",(0,s.jsx)(n.h2,{id:"configuration-example",children:"Configuration Example"}),"\n",(0,s.jsxs)(n.p,{children:['??? example "Requests /foo are Handled by service-foo -- Using the ',(0,s.jsx)(n.a,{href:"/doc/docs/providers/file",children:"File Provider"}),'"']}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="YAML"',children:'## Dynamic configuration\nhttp:\n  routers:\n    my-router:\n      rule: "Path(`/foo`)"\n      service: service-foo\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="TOML"',children:'## Dynamic configuration\n[http.routers]\n  [http.routers.my-router]\n    rule = "Path(`/foo`)"\n    service = "service-foo"\n'})}),"\n",(0,s.jsx)(n.p,{children:'??? example "Forwarding all (non-tls) requests on port 3306 to a database service"'}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Dynamic Configuration"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\ntcp:\n  routers:\n    to-database:\n      entryPoints:\n        - "mysql"\n      # Catch every request (only available rule for non-tls routers. See below.)\n      rule: "HostSNI(`*`)"\n      service: database\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[tcp]\n  [tcp.routers]\n    [tcp.routers.to-database]\n      entryPoints = ["mysql"]\n      # Catch every request (only available rule for non-tls routers. See below.)\n      rule = "HostSNI(`*`)"\n      service = "database"\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Static Configuration"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\nentryPoints:\n  web:\n    address: ":80"\n  mysql:\n    address: ":3306"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[entryPoints]\n  [entryPoints.web]\n    address = ":80"\n  [entryPoints.mysql]\n    address = ":3306"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--entryPoints.web.address=:80\n--entryPoints.mysql.address=:3306\n"})}),"\n",(0,s.jsx)(n.h2,{id:"configuring-http-routers",children:"Configuring HTTP Routers"}),"\n",(0,s.jsxs)(n.p,{children:['!!! warning "The character ',(0,s.jsx)(n.code,{children:"@"}),' is not authorized in the router name"']}),"\n",(0,s.jsx)(n.h3,{id:"entrypoints",children:"EntryPoints"}),"\n",(0,s.jsxs)(n.p,{children:["If not specified, HTTP routers will accept requests from all EntryPoints in the ",(0,s.jsx)(n.a,{href:"/doc/docs/routing/entrypoints#asdefault",children:"list of default EntryPoints"}),".\nIf you want to limit the router scope to a set of entry points, set the ",(0,s.jsx)(n.code,{children:"entryPoints"})," option."]}),"\n",(0,s.jsx)(n.p,{children:'??? example "Listens to Every EntryPoint"'}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Dynamic Configuration"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\nhttp:\n  routers:\n    Router-1:\n      # By default, routers listen to every EntryPoints.\n      rule: "Host(`example.com`)"\n      service: "service-1"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[http.routers]\n  [http.routers.Router-1]\n    # By default, routers listen to every EntryPoints.\n    rule = "Host(`example.com`)"\n    service = "service-1"\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Static Configuration"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\nentryPoints:\n  web:\n    address: ":80"\n  websecure:\n    address: ":443"\n  other:\n    address: ":9090"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[entryPoints]\n  [entryPoints.web]\n    address = ":80"\n  [entryPoints.websecure]\n    address = ":443"\n  [entryPoints.other]\n    address = ":9090"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--entryPoints.web.address=:80\n--entryPoints.websecure.address=:443\n--entryPoints.other.address=:9090\n"})}),"\n",(0,s.jsx)(n.p,{children:'??? example "Listens to Specific EntryPoints"'}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Dynamic Configuration"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\nhttp:\n  routers:\n    Router-1:\n      # won\'t listen to entry point web\n      entryPoints:\n        - "websecure"\n        - "other"\n      rule: "Host(`example.com`)"\n      service: "service-1"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[http.routers]\n  [http.routers.Router-1]\n    # won\'t listen to entry point web\n    entryPoints = ["websecure", "other"]\n    rule = "Host(`example.com`)"\n    service = "service-1"\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Static Configuration"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\nentryPoints:\n  web:\n    address: ":80"\n  websecure:\n    address: ":443"\n  other:\n    address: ":9090"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[entryPoints]\n  [entryPoints.web]\n    address = ":80"\n  [entryPoints.websecure]\n    address = ":443"\n  [entryPoints.other]\n    address = ":9090"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--entryPoints.web.address=:80\n--entryPoints.websecure.address=:443\n--entryPoints.other.address=:9090\n"})}),"\n",(0,s.jsx)(n.h3,{id:"rule",children:"Rule"}),"\n",(0,s.jsx)(n.p,{children:"Rules are a set of matchers configured with values, that determine if a particular request matches specific criteria.\nIf the rule is verified, the router becomes active, calls middlewares, and then forwards the request to the service."}),"\n",(0,s.jsx)(n.p,{children:"The table below lists all the available matchers:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Rule"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#header-and-headerregexp",children:(0,s.jsx)(n.code,{children:"Header(`key`, `value`)"})})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Matches requests containing a header named ",(0,s.jsx)(n.code,{children:"key"})," set to ",(0,s.jsx)(n.code,{children:"value"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#header-and-headerregexp",children:(0,s.jsx)(n.code,{children:"HeaderRegexp(`key`, `regexp`)"})})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Matches requests containing a header named ",(0,s.jsx)(n.code,{children:"key"})," matching ",(0,s.jsx)(n.code,{children:"regexp"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#host-and-hostregexp",children:(0,s.jsx)(n.code,{children:"Host(`domain`)"})})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Matches requests host set to ",(0,s.jsx)(n.code,{children:"domain"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#host-and-hostregexp",children:(0,s.jsx)(n.code,{children:"HostRegexp(`regexp`)"})})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Matches requests host matching ",(0,s.jsx)(n.code,{children:"regexp"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#method",children:(0,s.jsx)(n.code,{children:"Method(`method`)"})})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Matches requests method set to ",(0,s.jsx)(n.code,{children:"method"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#path-pathprefix-and-pathregexp",children:(0,s.jsx)(n.code,{children:"Path(`path`)"})})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Matches requests path set to ",(0,s.jsx)(n.code,{children:"path"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#path-pathprefix-and-pathregexp",children:(0,s.jsx)(n.code,{children:"PathPrefix(`prefix`)"})})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Matches requests path prefix set to ",(0,s.jsx)(n.code,{children:"prefix"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#path-pathprefix-and-pathregexp",children:(0,s.jsx)(n.code,{children:"PathRegexp(`regexp`)"})})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Matches request path using ",(0,s.jsx)(n.code,{children:"regexp"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#query-and-queryregexp",children:(0,s.jsx)(n.code,{children:"Query(`key`, `value`)"})})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Matches requests query parameters named ",(0,s.jsx)(n.code,{children:"key"})," set to ",(0,s.jsx)(n.code,{children:"value"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#query-and-queryregexp",children:(0,s.jsx)(n.code,{children:"QueryRegexp(`key`, `regexp`)"})})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Matches requests query parameters named ",(0,s.jsx)(n.code,{children:"key"})," matching ",(0,s.jsx)(n.code,{children:"regexp"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#clientip",children:(0,s.jsx)(n.code,{children:"ClientIP(`ip`)"})})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Matches requests client IP using ",(0,s.jsx)(n.code,{children:"ip"}),". It accepts IPv4, IPv6 and CIDR formats."]})]})]})]}),"\n",(0,s.jsx)(n.p,{children:'!!! tip "Backticks or Quotes?"'}),"\n",(0,s.jsxs)(n.p,{children:["To set the value of a rule, use ",(0,s.jsx)(n.a,{href:"https://en.wiktionary.org/wiki/backtick",children:"backticks"})," ",(0,s.jsx)(n.code,{children:"`"})," or escaped double-quotes ",(0,s.jsx)(n.code,{children:'\\"'}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Single quotes ",(0,s.jsx)(n.code,{children:"'"})," are not accepted since the values are ",(0,s.jsx)(n.a,{href:"https://golang.org/ref/spec#String_literals",children:"Go's String Literals"}),"."]}),"\n",(0,s.jsx)(n.p,{children:'!!! important "Regexp Syntax"'}),"\n",(0,s.jsxs)(n.p,{children:["Matchers that accept a regexp as their value use a ",(0,s.jsx)(n.a,{href:"https://golang.org/pkg/regexp/",children:"Go"})," flavored syntax."]}),"\n",(0,s.jsx)(n.p,{children:'!!! info "Expressing Complex Rules Using Operators and Parenthesis"'}),"\n",(0,s.jsxs)(n.p,{children:["The usual AND (",(0,s.jsx)(n.code,{children:"&&"}),") and OR (",(0,s.jsx)(n.code,{children:"||"}),") logical operators can be used, with the expected precedence rules,\nas well as parentheses."]}),"\n",(0,s.jsxs)(n.p,{children:["One can invert a matcher by using the NOT (",(0,s.jsx)(n.code,{children:"!"}),") operator."]}),"\n",(0,s.jsx)(n.p,{children:"The following rule matches requests where:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["either host is ",(0,s.jsx)(n.code,{children:"example.com"})," OR,"]}),"\n",(0,s.jsxs)(n.li,{children:["host is ",(0,s.jsx)(n.code,{children:"example.org"})," AND path is NOT ",(0,s.jsx)(n.code,{children:"/Mesh"})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"Host(`example.com`) || (Host(`example.org`) && !Path(`/Mesh`))\n"})}),"\n",(0,s.jsx)(n.h4,{id:"header-and-headerregexp",children:"Header and HeaderRegexp"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Header"})," and ",(0,s.jsx)(n.code,{children:"HeaderRegexp"})," matchers allow to match requests that contain specific header."]}),"\n",(0,s.jsx)(n.p,{children:'!!! example "Examples"'}),"\n",(0,s.jsxs)(n.p,{children:["Match requests with a ",(0,s.jsx)(n.code,{children:"Content-Type"})," header set to ",(0,s.jsx)(n.code,{children:"application/yaml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"Header(`Content-Type`, `application/yaml`)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Match requests with a ",(0,s.jsx)(n.code,{children:"Content-Type"})," header set to either ",(0,s.jsx)(n.code,{children:"application/json"})," or ",(0,s.jsx)(n.code,{children:"application/yaml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"HeaderRegexp(`Content-Type`, `^application/(json|yaml)$`)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["To match headers ",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Case_sensitivity",children:"case-insensitively"}),", use the ",(0,s.jsx)(n.code,{children:"(?i)"})," option:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"HeaderRegexp(`Content-Type`, `(?i)^application/(json|yaml)$`)\n"})}),"\n",(0,s.jsx)(n.h4,{id:"host-and-hostregexp",children:"Host and HostRegexp"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Host"})," and ",(0,s.jsx)(n.code,{children:"HostRegexp"})," matchers allow to match requests that are targeted to a given host."]}),"\n",(0,s.jsxs)(n.p,{children:["These matchers do not support non-ASCII characters, use punycode encoded values (",(0,s.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc3492",children:"rfc 3492"}),") to match such domains."]}),"\n",(0,s.jsxs)(n.p,{children:["If no Host is set in the request URL (e.g., it's an IP address), these matchers will look at the ",(0,s.jsx)(n.code,{children:"Host"})," header."]}),"\n",(0,s.jsx)(n.p,{children:"These matchers will match the request's host in lowercase."}),"\n",(0,s.jsx)(n.p,{children:'!!! example "Examples"'}),"\n",(0,s.jsxs)(n.p,{children:["Match requests with ",(0,s.jsx)(n.code,{children:"Host"})," set to ",(0,s.jsx)(n.code,{children:"example.com"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"Host(`example.com`)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Match requests sent to any subdomain of ",(0,s.jsx)(n.code,{children:"example.com"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"HostRegexp(`^.+\\.example\\.com$`)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Match requests with ",(0,s.jsx)(n.code,{children:"Host"})," set to either ",(0,s.jsx)(n.code,{children:"example.com"})," or ",(0,s.jsx)(n.code,{children:"example.org"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"HostRegexp(`^example\\.(com|org)$`)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["To match domains ",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Case_sensitivity",children:"case-insensitively"}),", use the ",(0,s.jsx)(n.code,{children:"(?i)"})," option:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"HostRegexp(`(?i)^example\\.(com|org)$`)\n"})}),"\n",(0,s.jsx)(n.h4,{id:"method",children:"Method"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Method"})," matchers allows to match requests sent with the given method."]}),"\n",(0,s.jsx)(n.p,{children:'!!! example "Example"'}),"\n",(0,s.jsxs)(n.p,{children:["Match ",(0,s.jsx)(n.code,{children:"OPTIONS"})," requests:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"Method(`OPTIONS`)\n"})}),"\n",(0,s.jsx)(n.h4,{id:"path-pathprefix-and-pathregexp",children:"Path, PathPrefix, and PathRegexp"}),"\n",(0,s.jsx)(n.p,{children:"These matchers allow matching requests based on their URL path."}),"\n",(0,s.jsxs)(n.p,{children:["For exact matches, use ",(0,s.jsx)(n.code,{children:"Path"})," and its prefixed alternative ",(0,s.jsx)(n.code,{children:"PathPrefix"}),", for regexp matches, use ",(0,s.jsx)(n.code,{children:"PathRegexp"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Path are always starting with a ",(0,s.jsx)(n.code,{children:"/"}),", except for ",(0,s.jsx)(n.code,{children:"PathRegexp"}),"."]}),"\n",(0,s.jsx)(n.p,{children:'!!! example "Examples"'}),"\n",(0,s.jsxs)(n.p,{children:["Match ",(0,s.jsx)(n.code,{children:"/products"})," but neither ",(0,s.jsx)(n.code,{children:"/products/shoes"})," nor ",(0,s.jsx)(n.code,{children:"/products/"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"Path(`/products`)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Match ",(0,s.jsx)(n.code,{children:"/products"})," as well as everything under ",(0,s.jsx)(n.code,{children:"/products"}),",\nsuch as ",(0,s.jsx)(n.code,{children:"/products/shoes"}),", ",(0,s.jsx)(n.code,{children:"/products/"})," but also ",(0,s.jsx)(n.code,{children:"/products-for-sale"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"PathPrefix(`/products`)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Match both ",(0,s.jsx)(n.code,{children:"/products/shoes"})," and ",(0,s.jsx)(n.code,{children:"/products/socks"})," with and ID like ",(0,s.jsx)(n.code,{children:"/products/shoes/57"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"PathRegexp(`^/products/(shoes|socks)/[0-9]+$`)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Match requests with a path ending in either ",(0,s.jsx)(n.code,{children:".jpeg"}),", ",(0,s.jsx)(n.code,{children:".jpg"})," or ",(0,s.jsx)(n.code,{children:".png"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"PathRegexp(`\\.(jpeg|jpg|png)$`)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Match ",(0,s.jsx)(n.code,{children:"/products"})," as well as everything under ",(0,s.jsx)(n.code,{children:"/products"}),",\nsuch as ",(0,s.jsx)(n.code,{children:"/products/shoes"}),", ",(0,s.jsx)(n.code,{children:"/products/"})," but also ",(0,s.jsx)(n.code,{children:"/products-for-sale"}),",\n",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Case_sensitivity",children:"case-insensitively"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"PathRegexp(`(?i)^/products`)\n"})}),"\n",(0,s.jsx)(n.h4,{id:"query-and-queryregexp",children:"Query and QueryRegexp"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Query"})," and ",(0,s.jsx)(n.code,{children:"QueryRegexp"})," matchers allow to match requests based on query parameters."]}),"\n",(0,s.jsx)(n.p,{children:'!!! example "Examples"'}),"\n",(0,s.jsxs)(n.p,{children:["Match requests with a ",(0,s.jsx)(n.code,{children:"mobile"})," query parameter set to ",(0,s.jsx)(n.code,{children:"true"}),", such as in ",(0,s.jsx)(n.code,{children:"/search?mobile=true"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"Query(`mobile`, `true`)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["To match requests with a query parameter ",(0,s.jsx)(n.code,{children:"mobile"})," that has no value, such as in ",(0,s.jsx)(n.code,{children:"/search?mobile"}),", use:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"Query(`mobile`)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Match requests with a ",(0,s.jsx)(n.code,{children:"mobile"})," query parameter set to either ",(0,s.jsx)(n.code,{children:"true"})," or ",(0,s.jsx)(n.code,{children:"yes"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"QueryRegexp(`mobile`, `^(true|yes)$`)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Match requests with a ",(0,s.jsx)(n.code,{children:"mobile"})," query parameter set to any value (including the empty value):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"QueryRegexp(`mobile`, `^.*$`)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["To match query parameters ",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Case_sensitivity",children:"case-insensitively"}),", use the ",(0,s.jsx)(n.code,{children:"(?i)"})," option:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"QueryRegexp(`mobile`, `(?i)^(true|yes)$`)\n"})}),"\n",(0,s.jsx)(n.h4,{id:"clientip",children:"ClientIP"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"ClientIP"})," matcher allows matching requests sent from the given client IP."]}),"\n",(0,s.jsxs)(n.p,{children:["It only matches the request client IP and does not use the ",(0,s.jsx)(n.code,{children:"X-Forwarded-For"})," header for matching."]}),"\n",(0,s.jsx)(n.p,{children:'!!! example "Examples"'}),"\n",(0,s.jsx)(n.p,{children:"Match requests coming from a given IP:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="IPv4"',children:"ClientIP(`10.76.105.11`)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="IPv6"',children:"ClientIP(`::1`)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Match requests coming from a given subnet:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="IPv4"',children:"ClientIP(`192.168.1.0/24`)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="IPv6"',children:"ClientIP(`fe80::/10`)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"priority",children:"Priority"}),"\n",(0,s.jsx)(n.p,{children:"To avoid path overlap, routes are sorted, by default, in descending order using rules length.\nThe priority is directly equal to the length of the rule, and so the longest length has the highest priority."}),"\n",(0,s.jsxs)(n.p,{children:["A value of ",(0,s.jsx)(n.code,{children:"0"})," for the priority is ignored: ",(0,s.jsx)(n.code,{children:"priority = 0"})," means that the default rules length sorting is used."]}),"\n",(0,s.jsx)(n.p,{children:'??? warning "Maximum Value"'}),"\n",(0,s.jsx)(n.p,{children:"Mesh reserves a range of priorities for its internal routers,\nthe maximum user-defined router priority value is:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"(MaxInt32 - 1000)"})," for 32-bit platforms,"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"(MaxInt64 - 1000)"})," for 64-bit platforms."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:'??? info "How default priorities are computed"'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\nhttp:\n  routers:\n    Router-1:\n      rule: "HostRegexp(`[a-z]+\\.Mesh\\.com`)"\n      # ...\n    Router-2:\n      rule: "Host(`foobar.Mesh.com`)"\n      # ...\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[http.routers]\n  [http.routers.Router-1]\n    rule = "HostRegexp(`[a-z]+\\\\.Mesh\\\\.com`)"\n    # ...\n  [http.routers.Router-2]\n    rule = "Host(`foobar.Mesh.com`)"\n    # ...\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In this case, all requests with host ",(0,s.jsx)(n.code,{children:"foobar.Mesh.com"})," will be routed through ",(0,s.jsx)(n.code,{children:"Router-1"})," instead of ",(0,s.jsx)(n.code,{children:"Router-2"}),"."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Rule"}),(0,s.jsx)(n.th,{children:"Priority"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Router-1"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"HostRegexp(`[a-z]+\\.Mesh\\.com`)"})}),(0,s.jsx)(n.td,{children:"34"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Router-2"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Host(`foobar.Mesh.com`)"})}),(0,s.jsx)(n.td,{children:"26"})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["The previous table shows that ",(0,s.jsx)(n.code,{children:"Router-1"})," has a higher priority than ",(0,s.jsx)(n.code,{children:"Router-2"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"To solve this issue, the priority must be set."}),"\n",(0,s.jsxs)(n.p,{children:['??? example "Set priorities -- using the ',(0,s.jsx)(n.a,{href:"/doc/docs/providers/file",children:"File Provider"}),'"']}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\nhttp:\n  routers:\n    Router-1:\n      rule: "HostRegexp(`[a-z]+\\\\.Mesh\\\\.com`)"\n      entryPoints:\n      - "web"\n      service: service-1\n      priority: 1\n    Router-2:\n      rule: "Host(`foobar.Mesh.com`)"\n      entryPoints:\n      - "web"\n      priority: 2\n      service: service-2\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[http.routers]\n  [http.routers.Router-1]\n    rule = "HostRegexp(`[a-z]+\\\\.Mesh\\\\.com`)"\n    entryPoints = ["web"]\n    service = "service-1"\n    priority = 1\n  [http.routers.Router-2]\n    rule = "Host(`foobar.Mesh.com`)"\n    entryPoints = ["web"]\n    priority = 2\n    service = "service-2"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In this configuration, the priority is configured to allow ",(0,s.jsx)(n.code,{children:"Router-2"})," to handle requests with the ",(0,s.jsx)(n.code,{children:"foobar.Mesh.com"})," host."]}),"\n",(0,s.jsx)(n.h3,{id:"rulesyntax",children:"RuleSyntax"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:'Optional, Default=""'})}),"\n",(0,s.jsxs)(n.p,{children:["In Mesh v3 a new rule syntax has been introduced (",(0,s.jsx)(n.a,{href:"../../migration/v2-to-v3.md#router-rule-matchers",children:"migration guide"}),").\n",(0,s.jsx)(n.code,{children:"ruleSyntax"})," option allows to configure the rule syntax to be used for parsing the rule on a per-router basis.\nThis allows to have heterogeneous router configurations and ease migration."]}),"\n",(0,s.jsxs)(n.p,{children:["The default value of the ",(0,s.jsx)(n.code,{children:"ruleSyntax"})," option is inherited from the ",(0,s.jsx)(n.code,{children:"defaultRuleSyntax"})," option in the static configuration.\nBy default, the ",(0,s.jsx)(n.code,{children:"defaultRuleSyntax"})," static option is ",(0,s.jsx)(n.code,{children:"v3"}),", meaning that the default rule syntax is also ",(0,s.jsx)(n.code,{children:"v3"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:['??? example "Set rule syntax -- using the ',(0,s.jsx)(n.a,{href:"/doc/docs/providers/file",children:"File Provider"}),'"']}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"## Dynamic configuration\nhttp:\n  routers:\n    Router-v3:\n      rule: HostRegexp(`[a-z]+\\\\.Mesh\\\\.com`)\n      ruleSyntax: v3\n    Router-v2:\n      rule: HostRegexp(`{subdomain:[a-z]+}.Mesh.com`)\n      ruleSyntax: v2\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[http.routers]\n  [http.routers.Router-v3]\n    rule = "HostRegexp(`[a-z]+\\\\.Mesh\\\\.com`)"\n    ruleSyntax = v3\n  [http.routers.Router-v2]\n    rule = "HostRegexp(`{subdomain:[a-z]+}.Mesh.com`)"\n    ruleSyntax = v2\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="Kubernetes Mesh.io/v1alpha1"',children:"apiVersion: Mesh.io/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: test.route\n  namespace: default\n\nspec:\n  routes:\n    # route v3\n    - match: HostRegexp(`[a-z]+\\\\.Mesh\\\\.com`)\n      syntax: v3\n      kind: Rule\n\n    # route v2\n    - match: HostRegexp(`{subdomain:[a-z]+}.Mesh.com`)\n      syntax: v2\n      kind: Rule\n"})}),"\n",(0,s.jsxs)(n.p,{children:["In this configuration, the ruleSyntax is configured to allow ",(0,s.jsx)(n.code,{children:"Router-v2"})," to use v2 syntax,\nwhile for ",(0,s.jsx)(n.code,{children:"Router-v3"})," it is configured to use v3 syntax."]}),"\n",(0,s.jsx)(n.h3,{id:"middlewares",children:"Middlewares"}),"\n",(0,s.jsxs)(n.p,{children:["You can attach a list of ",(0,s.jsx)(n.a,{href:"/doc/docs/middlewares/overview",children:"middlewares"})," to each HTTP router.\nThe middlewares will take effect only if the rule matches, and before forwarding the request to the service."]}),"\n",(0,s.jsxs)(n.p,{children:['!!! warning "The character ',(0,s.jsx)(n.code,{children:"@"}),' is not authorized in the middleware name."']}),"\n",(0,s.jsx)(n.p,{children:'!!! tip "Middlewares order"'}),"\n",(0,s.jsxs)(n.p,{children:["Middlewares are applied in the same order as their declaration in ",(0,s.jsx)(n.strong,{children:"router"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:['??? example "With a ',(0,s.jsx)(n.a,{href:"/doc/docs/middlewares/overview",children:"middleware"})," -- using the ",(0,s.jsx)(n.a,{href:"/doc/docs/providers/file",children:"File Provider"}),'"']}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="YAML"',children:'## Dynamic configuration\nhttp:\n  routers:\n    my-router:\n      rule: "Path(`/foo`)"\n      # declared elsewhere\n      middlewares:\n      - authentication\n      service: service-foo\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="TOML"',children:'## Dynamic configuration\n[http.routers]\n  [http.routers.my-router]\n    rule = "Path(`/foo`)"\n    # declared elsewhere\n    middlewares = ["authentication"]\n    service = "service-foo"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"service",children:"Service"}),"\n",(0,s.jsxs)(n.p,{children:["Each request must eventually be handled by a ",(0,s.jsx)(n.a,{href:"/doc/docs/routing/services/",children:"service"}),",\nwhich is why each router definition should include a service target,\nwhich is basically where the request will be passed along to."]}),"\n",(0,s.jsxs)(n.p,{children:["In general, a service assigned to a router should have been defined,\nbut there are exceptions for label-based providers.\nSee the specific ",(0,s.jsx)(n.a,{href:"/doc/docs/routing/providers/docker#service-definition",children:"docker"})," documentation."]}),"\n",(0,s.jsxs)(n.p,{children:['!!! warning "The character ',(0,s.jsx)(n.code,{children:"@"}),' is not authorized in the service name."']}),"\n",(0,s.jsx)(n.p,{children:'!!! important "HTTP routers can only target HTTP services (not TCP services)."'}),"\n",(0,s.jsx)(n.h3,{id:"tls",children:"TLS"}),"\n",(0,s.jsx)(n.h4,{id:"general",children:"General"}),"\n",(0,s.jsx)(n.p,{children:"When a TLS section is specified, it instructs Mesh that the current router is dedicated to HTTPS requests only\n(and that the router should ignore HTTP (non TLS) requests).\nMesh will terminate the SSL connections (meaning that it will send decrypted data to the services)."}),"\n",(0,s.jsx)(n.p,{children:'??? example "Configuring the router to accept HTTPS requests only"'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\nhttp:\n  routers:\n    Router-1:\n      rule: "Host(`foo-domain`) && Path(`/foo-path/`)"\n      service: service-id\n      # will terminate the TLS request\n      tls: {}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[http.routers]\n  [http.routers.Router-1]\n    rule = "Host(`foo-domain`) && Path(`/foo-path/`)"\n    service = "service-id"\n    # will terminate the TLS request\n    [http.routers.Router-1.tls]\n'})}),"\n",(0,s.jsx)(n.p,{children:'!!! important "Routers for HTTP & HTTPS"'}),"\n",(0,s.jsx)(n.p,{children:"If you need to define the same route for both HTTP and HTTPS requests, you will need to define two different routers:\none with the tls section, one without."}),"\n",(0,s.jsx)(n.p,{children:'??? example "HTTP & HTTPS routes"'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\nhttp:\n  routers:\n    my-https-router:\n      rule: "Host(`foo-domain`) && Path(`/foo-path/`)"\n      service: service-id\n      # will terminate the TLS request\n      tls: {}\n\n    my-http-router:\n      rule: "Host(`foo-domain`) && Path(`/foo-path/`)"\n      service: service-id\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[http.routers]\n  [http.routers.my-https-router]\n    rule = "Host(`foo-domain`) && Path(`/foo-path/`)"\n    service = "service-id"\n    # will terminate the TLS request\n    [http.routers.my-https-router.tls]\n\n  [http.routers.my-http-router]\n    rule = "Host(`foo-domain`) && Path(`/foo-path/`)"\n    service = "service-id"\n'})}),"\n",(0,s.jsx)(n.h4,{id:"options",children:(0,s.jsx)(n.code,{children:"options"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"options"})," field enables fine-grained control of the TLS parameters.\nIt refers to a ",(0,s.jsx)(n.a,{href:"/doc/docs/https/tls#tls-options",children:"TLS Options"})," and will be applied only if a ",(0,s.jsx)(n.code,{children:"Host"})," rule is defined."]}),"\n",(0,s.jsx)(n.p,{children:'!!! info "Server Name Association"'}),"\n",(0,s.jsxs)(n.p,{children:["Even though one might get the impression that a TLS options reference is mapped to a router, or a router rule,\none should realize that it is actually mapped only to the host name found in the ",(0,s.jsx)(n.code,{children:"Host"})," part of the rule.\nOf course, there could also be several ",(0,s.jsx)(n.code,{children:"Host"})," parts in a rule, in which case the TLS options reference would be mapped to as many host names."]}),"\n",(0,s.jsx)(n.p,{children:"Another thing to keep in mind is:\nthe TLS option is picked from the mapping mentioned above and based on the server name provided during the TLS handshake,\nand it all happens before routing actually occurs."}),"\n",(0,s.jsx)(n.p,{children:'!!! info "Domain Fronting"'}),"\n",(0,s.jsxs)(n.p,{children:["In the case of domain fronting,\nif the TLS options associated with the Host Header and the SNI are different then Mesh will respond with a status code ",(0,s.jsx)(n.code,{children:"421"}),"."]}),"\n",(0,s.jsx)(n.p,{children:'??? example "Configuring the TLS options"'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\nhttp:\n  routers:\n    Router-1:\n      rule: "Host(`foo-domain`) && Path(`/foo-path/`)"\n      service: service-id\n      # will terminate the TLS request\n      tls:\n        options: foo\n\ntls:\n  options:\n    foo:\n      minVersion: VersionTLS12\n      cipherSuites:\n        - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n        - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n        - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n        - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n        - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[http.routers]\n  [http.routers.Router-1]\n    rule = "Host(`foo-domain`) && Path(`/foo-path/`)"\n    service = "service-id"\n    # will terminate the TLS request\n    [http.routers.Router-1.tls]\n      options = "foo"\n\n[tls.options]\n  [tls.options.foo]\n    minVersion = "VersionTLS12"\n    cipherSuites = [\n      "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",\n      "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256",\n      "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256",\n      "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",\n      "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",\n    ]\n'})}),"\n",(0,s.jsx)(n.p,{children:'!!! important "Conflicting TLS Options"'}),"\n",(0,s.jsxs)(n.p,{children:["Since a TLS options reference is mapped to a host name,\nif a configuration introduces a situation where the same host name (from a ",(0,s.jsx)(n.code,{children:"Host"})," rule) gets matched with two TLS options references,\na conflict occurs, such as in the example below:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\nhttp:\n  routers:\n    routerfoo:\n      rule: "Host(`snitest.com`) && Path(`/foo`)"\n      tls:\n        options: foo\n\n    routerbar:\n      rule: "Host(`snitest.com`) && Path(`/bar`)"\n      tls:\n        options: bar\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[http.routers]\n  [http.routers.routerfoo]\n    rule = "Host(`snitest.com`) && Path(`/foo`)"\n    [http.routers.routerfoo.tls]\n      options = "foo"\n\n[http.routers]\n  [http.routers.routerbar]\n    rule = "Host(`snitest.com`) && Path(`/bar`)"\n    [http.routers.routerbar.tls]\n      options = "bar"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["If that happens, both mappings are discarded, and the host name (",(0,s.jsx)(n.code,{children:"snitest.com"})," in this case) for these routers gets associated with the default TLS options instead."]}),"\n",(0,s.jsx)(n.h4,{id:"certresolver",children:(0,s.jsx)(n.code,{children:"certResolver"})}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.code,{children:"certResolver"})," is defined, Mesh will try to generate certificates based on routers ",(0,s.jsx)(n.code,{children:"Host"})," & ",(0,s.jsx)(n.code,{children:"HostSNI"})," rules."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\nhttp:\n  routers:\n    routerfoo:\n      rule: "Host(`snitest.com`) && Path(`/foo`)"\n      tls:\n        certResolver: foo\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[http.routers]\n  [http.routers.routerfoo]\n    rule = "Host(`snitest.com`) && Path(`/foo`)"\n    [http.routers.routerfoo.tls]\n      certResolver = "foo"\n'})}),"\n",(0,s.jsxs)(n.p,{children:['!!! info "Multiple Hosts in a Rule"\nThe rule ',(0,s.jsx)(n.code,{children:"Host(`test1.example.com`) || Host(`test2.example.com`)"})," will request a certificate with the main domain ",(0,s.jsx)(n.code,{children:"test1.example.com"})," and SAN ",(0,s.jsx)(n.code,{children:"test2.example.com"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"domains",children:(0,s.jsx)(n.code,{children:"domains"})}),"\n",(0,s.jsx)(n.p,{children:"You can set SANs (alternative domains) for each main domain.\nEvery domain must have A/AAAA records pointing to Mesh.\nEach domain & SAN will lead to a certificate request."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\nhttp:\n  routers:\n    routerbar:\n      rule: "Host(`snitest.com`) && Path(`/bar`)"\n      tls:\n        certResolver: "bar"\n        domains:\n          - main: "snitest.com"\n            sans:\n              - "*.snitest.com"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[http.routers]\n  [http.routers.routerbar]\n    rule = "Host(`snitest.com`) && Path(`/bar`)"\n    [http.routers.routerbar.tls]\n      certResolver = "bar"\n      [[http.routers.routerbar.tls.domains]]\n        main = "snitest.com"\n        sans = ["*.snitest.com"]\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://community.letsencrypt.org/t/acme-v2-and-wildcard-certificate-support-is-live/55579",children:"ACME v2"})," supports wildcard certificates.\nAs described in ",(0,s.jsx)(n.a,{href:"https://community.letsencrypt.org/t/staging-endpoint-for-acme-v2/49605",children:"Let's Encrypt's post"})," wildcard certificates can only be generated through a ",(0,s.jsxs)(n.a,{href:"/doc/docs/https/acme#dnschallenge",children:[(0,s.jsx)(n.code,{children:"DNS-01"})," challenge"]}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Most likely the root domain should receive a certificate too, so it needs to be specified as SAN and 2 ",(0,s.jsx)(n.code,{children:"DNS-01"})," challenges are executed.\nIn this case the generated DNS TXT record for both domains is the same.\nEven though this behavior is ",(0,s.jsx)(n.a,{href:"https://community.letsencrypt.org/t/wildcard-issuance-two-txt-records-for-the-same-name/54528/2",children:"DNS RFC"})," compliant,\nit can lead to problems as all DNS providers keep DNS records cached for a given time (TTL) and this TTL can be greater than the challenge timeout making the ",(0,s.jsx)(n.code,{children:"DNS-01"})," challenge fail."]}),"\n",(0,s.jsxs)(n.p,{children:["The Mesh ACME client library ",(0,s.jsx)(n.a,{href:"https://github.com/go-acme/lego",children:"lego"})," supports some but not all DNS providers to work around this issue.\nThe ",(0,s.jsxs)(n.a,{href:"/doc/docs/https/acme#providers",children:["supported ",(0,s.jsx)(n.code,{children:"provider"})," table"]})," indicates if they allow generating certificates for a wildcard domain and its root domain."]}),"\n",(0,s.jsxs)(n.p,{children:['!!! important "Wildcard certificates can only be verified through a ',(0,s.jsxs)(n.a,{href:"/doc/docs/https/acme#dnschallenge",children:[(0,s.jsx)(n.code,{children:"DNS-01"})," challenge"]}),'."']}),"\n",(0,s.jsxs)(n.p,{children:['!!! warning "Double Wildcard Certificates"\nIt is not possible to request a double wildcard certificate for a domain (for example ',(0,s.jsx)(n.code,{children:"*.*.local.com"}),")."]}),"\n",(0,s.jsx)(n.h3,{id:"observability",children:"Observability"}),"\n",(0,s.jsx)(n.p,{children:"The Observability section defines a per router behavior regarding access-logs, metrics or tracing."}),"\n",(0,s.jsxs)(n.p,{children:["The default router observability configuration is inherited from the attached EntryPoints and can be configured with the observability ",(0,s.jsx)(n.a,{href:"/doc/docs/routing/entrypoints#observability-options",children:"options"}),".\nHowever, a router defining its own observability configuration will opt-out from these defaults."]}),"\n",(0,s.jsx)(n.p,{children:'!!! info "Note that to enable router-level observability, you must first enable access-logs, tracing, and/or metrics."'}),"\n",(0,s.jsx)(n.p,{children:'!!! warning "AddInternals option"'}),"\n",(0,s.jsxs)(n.p,{children:["By default, and for any type of signals (access-logs, metrics and tracing),\nMesh disables observability for internal resources.\nThe observability options described below cannot interfere with the ",(0,s.jsx)(n.code,{children:"AddInternals"})," ones,\nand will be ignored."]}),"\n",(0,s.jsxs)(n.p,{children:["For instance, if a router exposes the ",(0,s.jsx)(n.code,{children:"api@internal"})," service and ",(0,s.jsx)(n.code,{children:"metrics.AddInternals"})," is false,\nit will never produces metrics, even if the router observability configuration enables metrics."]}),"\n",(0,s.jsx)(n.h4,{id:"accesslogs",children:(0,s.jsx)(n.code,{children:"accessLogs"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Optional"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"accessLogs"})," option controls whether the router will produce access-logs."]}),"\n",(0,s.jsxs)(n.p,{children:['??? example "Disable access-logs for a router using the ',(0,s.jsx)(n.a,{href:"/doc/docs/providers/file",children:"File Provider"}),'"']}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="YAML"',children:'## Dynamic configuration\nhttp:\n  routers:\n    my-router:\n      rule: "Path(`/foo`)"\n      service: service-foo\n      observability:\n        accessLogs: false\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="TOML"',children:'## Dynamic configuration\n[http.routers]\n  [http.routers.my-router]\n    rule = "Path(`/foo`)"\n    service = "service-foo"\n    [http.routers.my-router.observability]\n      accessLogs = false\n'})}),"\n",(0,s.jsx)(n.h4,{id:"metrics",children:(0,s.jsx)(n.code,{children:"metrics"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Optional"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"metrics"})," option controls whether the router will produce metrics."]}),"\n",(0,s.jsx)(n.p,{children:'!!! warning "Metrics layers"'}),"\n",(0,s.jsxs)(n.p,{children:["When metrics layers are not enabled with the ",(0,s.jsx)(n.code,{children:"addEntryPointsLabels"}),", ",(0,s.jsx)(n.code,{children:"addRoutersLabels"})," and/or ",(0,s.jsx)(n.code,{children:"addServicesLabels"})," options,\nenabling metrics for a router will not enable them."]}),"\n",(0,s.jsxs)(n.p,{children:['??? example "Disable metrics for a router using the ',(0,s.jsx)(n.a,{href:"/doc/docs/providers/file",children:"File Provider"}),'"']}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="YAML"',children:'## Dynamic configuration\nhttp:\n  routers:\n    my-router:\n      rule: "Path(`/foo`)"\n      service: service-foo\n      observability:\n        metrics: false\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="TOML"',children:'## Dynamic configuration\n[http.routers]\n  [http.routers.my-router]\n    rule = "Path(`/foo`)"\n    service = "service-foo"\n    [http.routers.my-router.observability]\n      metrics = false\n'})}),"\n",(0,s.jsx)(n.h4,{id:"tracing",children:(0,s.jsx)(n.code,{children:"tracing"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Optional"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"tracing"})," option controls whether the router will produce traces."]}),"\n",(0,s.jsxs)(n.p,{children:['??? example "Disable tracing for a router using the ',(0,s.jsx)(n.a,{href:"/doc/docs/providers/file",children:"File Provider"}),'"']}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="YAML"',children:'## Dynamic configuration\nhttp:\n  routers:\n    my-router:\n      rule: "Path(`/foo`)"\n      service: service-foo\n      observability:\n        tracing: false\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="TOML"',children:'## Dynamic configuration\n[http.routers]\n  [http.routers.my-router]\n    rule = "Path(`/foo`)"\n    service = "service-foo"\n    [http.routers.my-router.observability]\n      tracing = false\n'})}),"\n",(0,s.jsx)(n.h2,{id:"configuring-tcp-routers",children:"Configuring TCP Routers"}),"\n",(0,s.jsxs)(n.p,{children:['!!! warning "The character ',(0,s.jsx)(n.code,{children:"@"}),' is not authorized in the router name"']}),"\n",(0,s.jsx)(n.h3,{id:"general-1",children:"General"}),"\n",(0,s.jsxs)(n.p,{children:["If both HTTP routers and TCP routers listen to the same EntryPoint, the TCP routers will apply ",(0,s.jsx)(n.em,{children:"before"})," the HTTP routers.\nIf no matching route is found for the TCP routers, then the HTTP routers will take over."]}),"\n",(0,s.jsx)(n.h3,{id:"entrypoints-1",children:"EntryPoints"}),"\n",(0,s.jsxs)(n.p,{children:["If not specified, TCP routers will accept requests from all EntryPoints in the ",(0,s.jsx)(n.a,{href:"/doc/docs/routing/entrypoints#asdefault",children:"list of default EntryPoints"}),".\nIf you want to limit the router scope to a set of entry points, set the entry points option."]}),"\n",(0,s.jsx)(n.p,{children:'??? info "How to handle Server First protocols?"'}),"\n",(0,s.jsx)(n.p,{children:"To correctly handle a request, Mesh needs to wait for the first few bytes to arrive before it can decide what to do with it."}),"\n",(0,s.jsx)(n.p,{children:"For protocols where the server is expected to send first, such as SMTP, if no specific setup is in place,\nwe could end up in a situation where both sides are waiting for data and the connection appears to have hanged."}),"\n",(0,s.jsx)(n.p,{children:"The only way that Mesh can deal with such a case, is to make sure that on the concerned entry point,\nthere is no TLS router whatsoever (neither TCP nor HTTP),\nand there is at least one non-TLS TCP router that leads to the server in question."}),"\n",(0,s.jsx)(n.p,{children:'??? example "Listens to Every Entry Point"'}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Dynamic Configuration"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\n\ntcp:\n  routers:\n    Router-1:\n      # By default, routers listen to every EntryPoints.\n      rule: "HostSNI(`example.com`)"\n      service: "service-1"\n      # will route TLS requests (and ignore non tls requests)\n      tls: {}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n\n[tcp.routers]\n  [tcp.routers.Router-1]\n    # By default, routers listen to every EntryPoints.\n    rule = "HostSNI(`example.com`)"\n    service = "service-1"\n    # will route TLS requests (and ignore non tls requests)\n    [tcp.routers.Router-1.tls]\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Static Configuration"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\n\nentryPoints:\n  web:\n    address: ":80"\n  websecure:\n    address: ":443"\n  other:\n    address: ":9090"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n\n[entryPoints]\n  [entryPoints.web]\n    address = ":80"\n  [entryPoints.websecure]\n    address = ":443"\n  [entryPoints.other]\n    address = ":9090"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--entryPoints.web.address=:80\n--entryPoints.websecure.address=:443\n--entryPoints.other.address=:9090\n"})}),"\n",(0,s.jsx)(n.p,{children:'??? example "Listens to Specific EntryPoints"'}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Dynamic Configuration"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\ntcp:\n  routers:\n    Router-1:\n      # won\'t listen to entry point web\n      entryPoints:\n        - "websecure"\n        - "other"\n      rule: "HostSNI(`example.com`)"\n      service: "service-1"\n      # will route TLS requests (and ignore non tls requests)\n      tls: {}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[tcp.routers]\n  [tcp.routers.Router-1]\n    # won\'t listen to entry point web\n    entryPoints = ["websecure", "other"]\n    rule = "HostSNI(`example.com`)"\n    service = "service-1"\n    # will route TLS requests (and ignore non tls requests)\n    [tcp.routers.Router-1.tls]\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Static Configuration"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\n\nentryPoints:\n  web:\n    address: ":80"\n  websecure:\n    address: ":443"\n  other:\n    address: ":9090"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n\n[entryPoints]\n  [entryPoints.web]\n    address = ":80"\n  [entryPoints.websecure]\n    address = ":443"\n  [entryPoints.other]\n    address = ":9090"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--entryPoints.web.address=:80\n--entryPoints.websecure.address=:443\n--entryPoints.other.address=:9090\n"})}),"\n",(0,s.jsx)(n.h3,{id:"rule-1",children:"Rule"}),"\n",(0,s.jsx)(n.p,{children:"Rules are a set of matchers configured with values, that determine if a particular connection matches specific criteria.\nIf the rule is verified, the router becomes active, calls middlewares, and then forwards the request to the service."}),"\n",(0,s.jsx)(n.p,{children:"The table below lists all the available matchers:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Rule"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#hostsni-and-hostsniregexp",children:(0,s.jsx)(n.code,{children:"HostSNI(`domain`)"})})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Checks if the connection's Server Name Indication is equal to ",(0,s.jsx)(n.code,{children:"domain"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#hostsni-and-hostsniregexp",children:(0,s.jsx)(n.code,{children:"HostSNIRegexp(`regexp`)"})})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Checks if the connection's Server Name Indication matches ",(0,s.jsx)(n.code,{children:"regexp"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#clientip_1",children:(0,s.jsx)(n.code,{children:"ClientIP(`ip`)"})})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Checks if the connection's client IP correspond to ",(0,s.jsx)(n.code,{children:"ip"}),". It accepts IPv4, IPv6 and CIDR formats."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#alpn",children:(0,s.jsx)(n.code,{children:"ALPN(`protocol`)"})})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Checks if the connection's ALPN protocol equals ",(0,s.jsx)(n.code,{children:"protocol"}),"."]})]})]})]}),"\n",(0,s.jsx)(n.p,{children:'!!! tip "Backticks or Quotes?"'}),"\n",(0,s.jsxs)(n.p,{children:["To set the value of a rule, use ",(0,s.jsx)(n.a,{href:"https://en.wiktionary.org/wiki/backtick",children:"backticks"})," ",(0,s.jsx)(n.code,{children:"`"})," or escaped double-quotes ",(0,s.jsx)(n.code,{children:'\\"'}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Single quotes ",(0,s.jsx)(n.code,{children:"'"})," are not accepted since the values are ",(0,s.jsx)(n.a,{href:"https://golang.org/ref/spec#String_literals",children:"Go's String Literals"}),"."]}),"\n",(0,s.jsx)(n.p,{children:'!!! important "Regexp Syntax"'}),"\n",(0,s.jsxs)(n.p,{children:["Matchers that accept a regexp as their value use a ",(0,s.jsx)(n.a,{href:"https://golang.org/pkg/regexp/",children:"Go"})," flavored syntax."]}),"\n",(0,s.jsx)(n.p,{children:'!!! info "Expressing Complex Rules Using Operators and Parenthesis"'}),"\n",(0,s.jsxs)(n.p,{children:["The usual AND (",(0,s.jsx)(n.code,{children:"&&"}),") and OR (",(0,s.jsx)(n.code,{children:"||"}),") logical operators can be used, with the expected precedence rules,\nas well as parentheses."]}),"\n",(0,s.jsxs)(n.p,{children:["One can invert a matcher by using the NOT (",(0,s.jsx)(n.code,{children:"!"}),") operator."]}),"\n",(0,s.jsx)(n.p,{children:"The following rule matches connections where:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["either Server Name Indication is ",(0,s.jsx)(n.code,{children:"example.com"})," OR,"]}),"\n",(0,s.jsxs)(n.li,{children:["Server Name Indication is ",(0,s.jsx)(n.code,{children:"example.org"})," AND ALPN protocol is NOT ",(0,s.jsx)(n.code,{children:"h2"})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"HostSNI(`example.com`) || (HostSNI(`example.org`) && !ALPN(`h2`))\n"})}),"\n",(0,s.jsx)(n.h4,{id:"hostsni-and-hostsniregexp",children:"HostSNI and HostSNIRegexp"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"HostSNI"})," and ",(0,s.jsx)(n.code,{children:"HostSNIRegexp"})," matchers allow to match connections targeted to a given domain."]}),"\n",(0,s.jsxs)(n.p,{children:["These matchers do not support non-ASCII characters, use punycode encoded values (",(0,s.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc3492",children:"rfc 3492"}),") to match such domains."]}),"\n",(0,s.jsx)(n.p,{children:'!!! important "HostSNI & TLS"'}),"\n",(0,s.jsxs)(n.p,{children:["It is important to note that the Server Name Indication is an extension of the TLS protocol.\nHence, only TLS routers will be able to specify a domain name with that rule.\nHowever, there is one special use case for HostSNI with non-TLS routers:\nwhen one wants a non-TLS router that matches all (non-TLS) requests,\none should use the specific ",(0,s.jsx)(n.code,{children:"HostSNI(`*`)"})," syntax."]}),"\n",(0,s.jsx)(n.p,{children:'!!! example "Examples"'}),"\n",(0,s.jsx)(n.p,{children:"Match all connections:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="HostSNI"',children:"HostSNI(`*`)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="HostSNIRegexp"',children:"HostSNIRegexp(`^.*$`)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Match TCP connections sent to ",(0,s.jsx)(n.code,{children:"example.com"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"HostSNI(`example.com`)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Match TCP connections openned on any subdomain of ",(0,s.jsx)(n.code,{children:"example.com"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"HostSNIRegexp(`^.+\\.example\\.com$`)\n"})}),"\n",(0,s.jsx)(n.h4,{id:"clientip-1",children:"ClientIP"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"ClientIP"})," matcher allows matching connections opened by a client with the given IP."]}),"\n",(0,s.jsx)(n.p,{children:'!!! example "Examples"'}),"\n",(0,s.jsx)(n.p,{children:"Match connections opened by a given IP:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="IPv4"',children:"ClientIP(`10.76.105.11`)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="IPv6"',children:"ClientIP(`::1`)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Match connections coming from a given subnet:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="IPv4"',children:"ClientIP(`192.168.1.0/24`)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="IPv6"',children:"ClientIP(`fe80::/10`)\n"})}),"\n",(0,s.jsx)(n.h4,{id:"alpn",children:"ALPN"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"ALPN"})," matcher allows matching connections the given protocol."]}),"\n",(0,s.jsxs)(n.p,{children:["It would be a security issue to let a user-defined router catch the response to\nan ACME TLS challenge previously initiated by Mesh.\nFor this reason, the ",(0,s.jsx)(n.code,{children:"ALPN"})," matcher is not allowed to match the ",(0,s.jsx)(n.code,{children:"ACME-TLS/1"}),"\nprotocol, and Mesh returns an error if this is attempted."]}),"\n",(0,s.jsx)(n.p,{children:'!!! example "Example"'}),"\n",(0,s.jsxs)(n.p,{children:["Match connections using the ALPN protocol ",(0,s.jsx)(n.code,{children:"h2"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"ALPN(`h2`)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"priority-1",children:"Priority"}),"\n",(0,s.jsx)(n.p,{children:"To avoid path overlap, routes are sorted, by default, in descending order using rules length.\nThe priority is directly equal to the length of the rule, and so the longest length has the highest priority."}),"\n",(0,s.jsxs)(n.p,{children:["A value of ",(0,s.jsx)(n.code,{children:"0"})," for the priority is ignored: ",(0,s.jsx)(n.code,{children:"priority = 0"})," means that the default rules length sorting is used."]}),"\n",(0,s.jsx)(n.p,{children:'??? warning "Maximum Value"'}),"\n",(0,s.jsx)(n.p,{children:"Mesh reserves a range of priorities for its internal routers,\nthe maximum user-defined router priority value is:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"(MaxInt32 - 1000)"})," for 32-bit platforms,"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"(MaxInt64 - 1000)"})," for 64-bit platforms."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:'??? info "How default priorities are computed"'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\ntcp:\n  routers:\n    Router-1:\n      rule: "ClientIP(`192.168.0.12`)"\n      # ...\n    Router-2:\n      rule: "ClientIP(`192.168.0.0/24`)"\n      # ...\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[tcp.routers]\n  [tcp.routers.Router-1]\n    rule = "ClientIP(`192.168.0.12`)"\n    # ...\n  [tcp.routers.Router-2]\n    rule = "ClientIP(`192.168.0.0/24`)"\n    # ...\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The table below shows that ",(0,s.jsx)(n.code,{children:"Router-2"})," has a higher computed priority than ",(0,s.jsx)(n.code,{children:"Router-1"}),"."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Rule"}),(0,s.jsx)(n.th,{children:"Priority"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Router-1"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ClientIP(`192.168.0.12`)"})}),(0,s.jsx)(n.td,{children:"24"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Router-2"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ClientIP(`192.168.0.0/24`)"})}),(0,s.jsx)(n.td,{children:"26"})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["Which means that requests from ",(0,s.jsx)(n.code,{children:"192.168.0.12"})," would go to Router-2 even though Router-1 is intended to specifically handle them.\nTo achieve this intention, a priority (greater than 26) should be set on Router-1."]}),"\n",(0,s.jsxs)(n.p,{children:['??? example "Setting priorities -- using the ',(0,s.jsx)(n.a,{href:"/doc/docs/providers/file",children:"File Provider"}),'"']}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\ntcp:\n  routers:\n    Router-1:\n      rule: "ClientIP(`192.168.0.12`)"\n      entryPoints:\n      - "web"\n      service: service-1\n      priority: 2\n    Router-2:\n      rule: "ClientIP(`192.168.0.0/24`)"\n      entryPoints:\n      - "web"\n      priority: 1\n      service: service-2\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[tcp.routers]\n  [tcp.routers.Router-1]\n    rule = "ClientIP(`192.168.0.12`)"\n    entryPoints = ["web"]\n    service = "service-1"\n    priority = 2\n  [tcp.routers.Router-2]\n    rule = "ClientIP(`192.168.0.0/24`)"\n    entryPoints = ["web"]\n    priority = 1\n    service = "service-2"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In this configuration, the priority is configured so that ",(0,s.jsx)(n.code,{children:"Router-1"})," will handle requests from ",(0,s.jsx)(n.code,{children:"192.168.0.12"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"rulesyntax-1",children:"RuleSyntax"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:'Optional, Default=""'})}),"\n",(0,s.jsxs)(n.p,{children:["In Mesh v3 a new rule syntax has been introduced (",(0,s.jsx)(n.a,{href:"../../migration/v2-to-v3.md#router-rule-matchers",children:"migration guide"}),").\n",(0,s.jsx)(n.code,{children:"ruleSyntax"})," option allows to configure the rule syntax to be used for parsing the rule on a per-router basis.\nThis allows to have heterogeneous router configurations and ease migration."]}),"\n",(0,s.jsxs)(n.p,{children:["The default value of the ",(0,s.jsx)(n.code,{children:"ruleSyntax"})," option is inherited from the ",(0,s.jsx)(n.code,{children:"defaultRuleSyntax"})," option in the static configuration.\nBy default, the ",(0,s.jsx)(n.code,{children:"defaultRuleSyntax"})," static option is ",(0,s.jsx)(n.code,{children:"v3"}),", meaning that the default rule syntax is also ",(0,s.jsx)(n.code,{children:"v3"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:['??? example "Set rule syntax -- using the ',(0,s.jsx)(n.a,{href:"/doc/docs/providers/file",children:"File Provider"}),'"']}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"## Dynamic configuration\ntcp:\n  routers:\n    Router-v3:\n      rule: ClientIP(`192.168.0.11`) || ClientIP(`192.168.0.12`)\n      ruleSyntax: v3\n    Router-v2:\n      rule: ClientIP(`192.168.0.11`, `192.168.0.12`)\n      ruleSyntax: v2\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[tcp.routers]\n  [tcp.routers.Router-v3]\n    rule = "ClientIP(`192.168.0.11`) || ClientIP(`192.168.0.12`)"\n    ruleSyntax = v3\n  [tcp.routers.Router-v2]\n    rule = "ClientIP(`192.168.0.11`, `192.168.0.12`)"\n    ruleSyntax = v2\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="Kubernetes Mesh.io/v1alpha1"',children:"apiVersion: Mesh.io/v1alpha1\nkind: IngressRouteTCP\nmetadata:\n  name: test.route\n  namespace: default\n\nspec:\n  routes:\n    # route v3\n    - match: ClientIP(`192.168.0.11`) || ClientIP(`192.168.0.12`)\n      syntax: v3\n      kind: Rule\n\n    # route v2\n    - match: ClientIP(`192.168.0.11`, `192.168.0.12`)\n      syntax: v2\n      kind: Rule\n"})}),"\n",(0,s.jsxs)(n.p,{children:["In this configuration, the ruleSyntax is configured to allow ",(0,s.jsx)(n.code,{children:"Router-v2"})," to use v2 syntax,\nwhile for ",(0,s.jsx)(n.code,{children:"Router-v3"})," it is configured to use v3 syntax."]}),"\n",(0,s.jsx)(n.h3,{id:"middlewares-1",children:"Middlewares"}),"\n",(0,s.jsxs)(n.p,{children:["You can attach a list of ",(0,s.jsx)(n.a,{href:"/doc/docs/middlewares/overview",children:"middlewares"})," to each TCP router.\nThe middlewares will take effect only if the rule matches, and before connecting to the service."]}),"\n",(0,s.jsxs)(n.p,{children:['!!! warning "The character ',(0,s.jsx)(n.code,{children:"@"}),' is not allowed to be used in the middleware name."']}),"\n",(0,s.jsx)(n.p,{children:'!!! tip "Middlewares order"'}),"\n",(0,s.jsxs)(n.p,{children:["Middlewares are applied in the same order as their declaration in ",(0,s.jsx)(n.strong,{children:"router"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:['??? example "With a ',(0,s.jsx)(n.a,{href:"/doc/docs/middlewares/tcp/overview",children:"middleware"})," -- using the ",(0,s.jsx)(n.a,{href:"/doc/docs/providers/file",children:"File Provider"}),'"']}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="TOML"',children:'## Dynamic configuration\n[tcp.routers]\n  [tcp.routers.my-router]\n    rule = "HostSNI(`*`)"\n    # declared elsewhere\n    middlewares = ["ipallowlist"]\n    service = "service-foo"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="YAML"',children:'## Dynamic configuration\ntcp:\n  routers:\n    my-router:\n      rule: "HostSNI(`*`)"\n      # declared elsewhere\n      middlewares:\n      - ipallowlist\n      service: service-foo\n'})}),"\n",(0,s.jsx)(n.h3,{id:"services",children:"Services"}),"\n",(0,s.jsxs)(n.p,{children:["You must attach a TCP ",(0,s.jsx)(n.a,{href:"/doc/docs/routing/services/",children:"service"})," per TCP router.\nServices are the target for the router."]}),"\n",(0,s.jsx)(n.p,{children:'!!! important "TCP routers can only target TCP services (not HTTP services)."'}),"\n",(0,s.jsx)(n.h3,{id:"tls-1",children:"TLS"}),"\n",(0,s.jsx)(n.h4,{id:"general-2",children:"General"}),"\n",(0,s.jsx)(n.p,{children:"When a TLS section is specified,\nit instructs Mesh that the current router is dedicated to TLS requests only (and that the router should ignore non-TLS requests)."}),"\n",(0,s.jsx)(n.p,{children:"By default, a router with a TLS section will terminate the TLS connections, meaning that it will send decrypted data to the services."}),"\n",(0,s.jsx)(n.p,{children:'??? example "Router for TLS requests"'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\ntcp:\n  routers:\n    Router-1:\n      rule: "HostSNI(`foo-domain`)"\n      service: service-id\n      # will terminate the TLS request by default\n      tls: {}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[tcp.routers]\n  [tcp.routers.Router-1]\n    rule = "HostSNI(`foo-domain`)"\n    service = "service-id"\n    # will terminate the TLS request by default\n    [tcp.routers.Router-1.tls]\n'})}),"\n",(0,s.jsx)(n.p,{children:'??? info "Postgres STARTTLS"'}),"\n",(0,s.jsx)(n.p,{children:"Mesh supports the Postgres STARTTLS protocol,\nwhich allows TLS routing for Postgres connections."}),"\n",(0,s.jsx)(n.p,{children:"To do so, Mesh reads the first bytes sent by a Postgres client,\nidentifies if they correspond to the message of a STARTTLS negotiation,\nand, if so, acknowledges and signals the client that it can start the TLS handshake."}),"\n",(0,s.jsxs)(n.p,{children:["Please note/remember that there are subtleties inherent to STARTTLS in whether the connection ends up being a TLS one or not.\nThese subtleties depend on the ",(0,s.jsx)(n.code,{children:"sslmode"})," value in the client configuration (and on the server authentication rules).\nTherefore, it is recommended to use the ",(0,s.jsx)(n.code,{children:"require"})," value for the ",(0,s.jsx)(n.code,{children:"sslmode"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Afterwards, the TLS handshake, and routing based on TLS, can proceed as expected."}),"\n",(0,s.jsx)(n.p,{children:'!!! warning "Postgres STARTTLS with TCP TLS PassThrough routers"'}),"\n",(0,s.jsxs)(n.p,{children:["As mentioned above, the ",(0,s.jsx)(n.code,{children:"sslmode"})," configuration parameter does have an impact on whether a STARTTLS session will succeed.\nIn particular in the context of TCP TLS PassThrough, some of the values (such as ",(0,s.jsx)(n.code,{children:"allow"}),") do not even make sense.\nWhich is why, once more it is recommended to use the ",(0,s.jsx)(n.code,{children:"require"})," value."]}),"\n",(0,s.jsx)(n.h4,{id:"passthrough",children:(0,s.jsx)(n.code,{children:"passthrough"})}),"\n",(0,s.jsxs)(n.p,{children:["As seen above, a TLS router will terminate the TLS connection by default.\nHowever, the ",(0,s.jsx)(n.code,{children:"passthrough"}),' option can be specified to set whether the requests should be forwarded "as is", keeping all data encrypted.']}),"\n",(0,s.jsxs)(n.p,{children:["It defaults to ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsx)(n.p,{children:'??? example "Configuring passthrough"'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\ntcp:\n  routers:\n    Router-1:\n      rule: "HostSNI(`foo-domain`)"\n      service: service-id\n      tls:\n        passthrough: true\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[tcp.routers]\n  [tcp.routers.Router-1]\n    rule = "HostSNI(`foo-domain`)"\n    service = "service-id"\n    [tcp.routers.Router-1.tls]\n      passthrough = true\n'})}),"\n",(0,s.jsx)(n.h4,{id:"options-1",children:(0,s.jsx)(n.code,{children:"options"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"options"})," field enables fine-grained control of the TLS parameters.\nIt refers to a ",(0,s.jsx)(n.a,{href:"/doc/docs/https/tls#tls-options",children:"TLS Options"})," and will be applied only if a ",(0,s.jsx)(n.code,{children:"HostSNI"})," rule is defined."]}),"\n",(0,s.jsx)(n.p,{children:'!!! example "Configuring the tls options"'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\ntcp:\n  routers:\n    Router-1:\n      rule: "HostSNI(`foo-domain`)"\n      service: service-id\n      # will terminate the TLS request\n      tls:\n        options: foo\n\ntls:\n  options:\n    foo:\n      minVersion: VersionTLS12\n      cipherSuites:\n        - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n        - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n        - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n        - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n        - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[tcp.routers]\n  [tcp.routers.Router-1]\n    rule = "HostSNI(`foo-domain`)"\n    service = "service-id"\n    # will terminate the TLS request\n    [tcp.routers.Router-1.tls]\n      options = "foo"\n\n[tls.options]\n  [tls.options.foo]\n    minVersion = "VersionTLS12"\n    cipherSuites = [\n      "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",\n      "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256",\n      "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256",\n      "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",\n      "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",\n    ]\n'})}),"\n",(0,s.jsx)(n.h4,{id:"certresolver-1",children:(0,s.jsx)(n.code,{children:"certResolver"})}),"\n",(0,s.jsxs)(n.p,{children:["See ",(0,s.jsxs)(n.a,{href:"/doc/docs/routing/routers/#certresolver",children:[(0,s.jsx)(n.code,{children:"certResolver"})," for HTTP router"]})," for more information."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\ntcp:\n  routers:\n    routerfoo:\n      rule: "HostSNI(`snitest.com`)"\n      tls:\n        certResolver: foo\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[tcp.routers]\n  [tcp.routers.routerfoo]\n    rule = "HostSNI(`snitest.com`)"\n    [tcp.routers.routerfoo.tls]\n      certResolver = "foo"\n'})}),"\n",(0,s.jsx)(n.h4,{id:"domains-1",children:(0,s.jsx)(n.code,{children:"domains"})}),"\n",(0,s.jsxs)(n.p,{children:["See ",(0,s.jsxs)(n.a,{href:"/doc/docs/routing/routers/#domains",children:[(0,s.jsx)(n.code,{children:"domains"})," for HTTP router"]})," for more information."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\ntcp:\n  routers:\n    routerbar:\n      rule: "HostSNI(`snitest.com`)"\n      tls:\n        certResolver: "bar"\n        domains:\n          - main: "snitest.com"\n            sans:\n              - "*.snitest.com"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[tcp.routers]\n  [tcp.routers.routerbar]\n    rule = "HostSNI(`snitest.com`)"\n    [tcp.routers.routerbar.tls]\n      certResolver = "bar"\n      [[tcp.routers.routerbar.tls.domains]]\n        main = "snitest.com"\n        sans = ["*.snitest.com"]\n'})}),"\n",(0,s.jsx)(n.h2,{id:"configuring-udp-routers",children:"Configuring UDP Routers"}),"\n",(0,s.jsxs)(n.p,{children:['!!! warning "The character ',(0,s.jsx)(n.code,{children:"@"}),' is not allowed in the router name"']}),"\n",(0,s.jsx)(n.h3,{id:"general-3",children:"General"}),"\n",(0,s.jsx)(n.p,{children:'Similarly to TCP, as UDP is the transport layer, there is no concept of a request,\nso there is no notion of an URL path prefix to match an incoming UDP packet with.\nFurthermore, as there is no good TLS support at the moment for multiple hosts,\nthere is no Host SNI notion to match against either.\nTherefore, there is no criterion that could be used as a rule to match incoming packets in order to route them.\nSo UDP "routers" at this time are pretty much only load-balancers in one form or another.'}),"\n",(0,s.jsx)(n.p,{children:'!!! important "Sessions and timeout"'}),"\n",(0,s.jsxs)(n.p,{children:["Even though UDP is connectionless (and because of that),\nthe implementation of an UDP router in Mesh relies on what we (and a couple of other implementations) call a ",(0,s.jsx)(n.code,{children:"session"}),".\nIt basically means that some state is kept about an ongoing communication between a client and a backend,\nnotably so that the proxy knows where to forward a response packet from a backend.\nAs expected, a ",(0,s.jsx)(n.code,{children:"timeout"})," is associated to each of these sessions,\nso that they get cleaned out if they go through a period of inactivity longer than a given duration.\nTimeout can be configured using the ",(0,s.jsx)(n.code,{children:"entryPoints.name.udp.timeout"})," option as described under ",(0,s.jsx)(n.a,{href:"../entrypoints/#udp-options",children:"EntryPoints"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"entrypoints-2",children:"EntryPoints"}),"\n",(0,s.jsxs)(n.p,{children:["If not specified, UDP routers will accept packets from all defined (UDP) EntryPoints.\nIf one wants to limit the router scope to a set of EntryPoints, one should set the ",(0,s.jsx)(n.code,{children:"entryPoints"})," option."]}),"\n",(0,s.jsx)(n.p,{children:'??? example "Listens to Every Entry Point"'}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Dynamic Configuration"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\n\nudp:\n  routers:\n    Router-1:\n      # By default, routers listen to all UDP entrypoints\n      # i.e. "other", and "streaming".\n      service: "service-1"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n\n[udp.routers]\n  [udp.routers.Router-1]\n    # By default, routers listen to all UDP entrypoints,\n    # i.e. "other", and "streaming".\n    service = "service-1"\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Static Configuration"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\n\nentryPoints:\n  # not used by UDP routers\n  web:\n    address: ":80"\n  # used by UDP routers\n  other:\n    address: ":9090/udp"\n  streaming:\n    address: ":9191/udp"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n\n[entryPoints]\n  # not used by UDP routers\n  [entryPoints.web]\n    address = ":80"\n  # used by UDP routers\n  [entryPoints.other]\n    address = ":9090/udp"\n  [entryPoints.streaming]\n    address = ":9191/udp"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:'## Static configuration\n--entryPoints.web.address=":80"\n--entryPoints.other.address=":9090/udp"\n--entryPoints.streaming.address=":9191/udp"\n'})}),"\n",(0,s.jsx)(n.p,{children:'??? example "Listens to Specific EntryPoints"'}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Dynamic Configuration"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\nudp:\n  routers:\n    Router-1:\n      # does not listen on "other" entry point\n      entryPoints:\n        - "streaming"\n      service: "service-1"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[udp.routers]\n  [udp.routers.Router-1]\n    # does not listen on "other" entry point\n    entryPoints = ["streaming"]\n    service = "service-1"\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Static Configuration"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\n\nentryPoints:\n  web:\n    address: ":80"\n  other:\n    address: ":9090/udp"\n  streaming:\n    address: ":9191/udp"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n\n[entryPoints]\n  [entryPoints.web]\n    address = ":80"\n  [entryPoints.other]\n    address = ":9090/udp"\n  [entryPoints.streaming]\n    address = ":9191/udp"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:'## Static configuration\n--entryPoints.web.address=":80"\n--entryPoints.other.address=":9090/udp"\n--entryPoints.streaming.address=":9191/udp"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"services-1",children:"Services"}),"\n",(0,s.jsxs)(n.p,{children:["There must be one (and only one) UDP ",(0,s.jsx)(n.a,{href:"/doc/docs/routing/services/",children:"service"})," referenced per UDP router.\nServices are the target for the router."]}),"\n",(0,s.jsx)(n.p,{children:'!!! important "UDP routers can only target UDP services (and not HTTP or TCP services)."'})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},2101:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/routers-3158549aee80e7d78ffd53edf9c601b5.png"},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(6540);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);