"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[3873],{1720:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"user-guides/docker-compose/acme-dns/index","title":"Mesh Docker DNS Challenge Documentation","description":"Learn how to create a certificate with the Let\'s Encrypt DNS challenge to use HTTPS on a Service exposed with Mesh Proxy. Read the technical documentation.","source":"@site/docs/user-guides/docker-compose/acme-dns/index.md","sourceDirName":"user-guides/docker-compose/acme-dns","slug":"/user-guides/docker-compose/acme-dns/","permalink":"/doc/docs/user-guides/docker-compose/acme-dns/","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/user-guides/docker-compose/acme-dns/index.md","tags":[],"version":"current","frontMatter":{"title":"Mesh Docker DNS Challenge Documentation","description":"Learn how to create a certificate with the Let\'s Encrypt DNS challenge to use HTTPS on a Service exposed with Mesh Proxy. Read the technical documentation."},"sidebar":"tutorialSidebar","previous":{"title":"Mesh CRD TLS Documentation","permalink":"/doc/docs/user-guides/crd-acme/"},"next":{"title":"Mesh Docker HTTP Challenge Documentation","permalink":"/doc/docs/user-guides/docker-compose/acme-http/"}}');var t=s(4848),i=s(8453);const o={title:"Mesh Docker DNS Challenge Documentation",description:"Learn how to create a certificate with the Let's Encrypt DNS challenge to use HTTPS on a Service exposed with Mesh Proxy. Read the technical documentation."},c="Docker-compose with Let's Encrypt: DNS Challenge",l={},a=[{value:"Prerequisite",id:"prerequisite",level:2},{value:"Setup",id:"setup",level:2},{value:"Explanation",id:"explanation",level:2},{value:"Use Secrets",id:"use-secrets",level:2}];function d(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"docker-compose-with-lets-encrypt-dns-challenge",children:"Docker-compose with Let's Encrypt: DNS Challenge"})}),"\n",(0,t.jsxs)(n.p,{children:["This guide aims to demonstrate how to create a certificate with the Let's Encrypt DNS challenge to use https on a simple service exposed with Mesh.",(0,t.jsx)(n.br,{}),"\n","Please also read the ",(0,t.jsx)(n.a,{href:"../basic-example",children:"basic example"})," for details on how to expose such a service."]}),"\n",(0,t.jsx)(n.h2,{id:"prerequisite",children:"Prerequisite"}),"\n",(0,t.jsx)(n.p,{children:"For the DNS challenge, you'll need:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["A working ",(0,t.jsx)(n.a,{href:"/doc/docs/https/acme#providers",children:"provider"})," along with the credentials allowing to create and remove DNS records."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:['!!! info "Variables may vary depending on the Provider."\nPlease note this guide may vary depending on the provider you use.\nThe only things changing are the names of the variables you will need to define in order to configure your provider so it can create DNS records.',(0,t.jsx)(n.br,{}),"\n","Please refer the ",(0,t.jsx)(n.a,{href:"/doc/docs/https/acme#providers",children:"list of providers"})," given right above and replace all the environment variables with the ones described in this documentation."]}),"\n",(0,t.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Create a ",(0,t.jsx)(n.code,{children:"docker-compose.yml"})," file with the following content:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'--8<-- "content/user-guides/docker-compose/acme-dns/docker-compose.yml"\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Replace the environment variables by your own:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'environment:\n  - "OVH_ENDPOINT=[YOUR_OWN_VALUE]"\n  - "OVH_APPLICATION_KEY=[YOUR_OWN_VALUE]"\n  - "OVH_APPLICATION_SECRET=[YOUR_OWN_VALUE]"\n  - "OVH_CONSUMER_KEY=[YOUR_OWN_VALUE]"\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Replace ",(0,t.jsx)(n.code,{children:"postmaster@example.com"})," by your ",(0,t.jsx)(n.strong,{children:"own email"})," within the ",(0,t.jsx)(n.code,{children:"certificatesresolvers.myresolver.acme.email"})," command line argument of the ",(0,t.jsx)(n.code,{children:"Mesh"})," service."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Replace ",(0,t.jsx)(n.code,{children:"whoami.example.com"})," by your ",(0,t.jsx)(n.strong,{children:"own domain"})," within the ",(0,t.jsx)(n.code,{children:"Mesh.http.routers.whoami.rule"})," label of the ",(0,t.jsx)(n.code,{children:"whoami"})," service."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Optionally uncomment the following lines if you want to test/debug:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'#- "--log.level=DEBUG"\n#- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Run ",(0,t.jsx)(n.code,{children:"docker compose up -d"})," within the folder where you created the previous file."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Wait a bit and visit ",(0,t.jsx)(n.code,{children:"https://your_own_domain"})," to confirm everything went fine."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"!!! Note"}),"\n",(0,t.jsxs)(n.p,{children:["If you uncommented the ",(0,t.jsx)(n.code,{children:"acme.caserver"})," line, you will get an SSL error, but if you display the certificate and see it was emitted by ",(0,t.jsx)(n.code,{children:"Fake LE Intermediate X1"})," then it means all is good.\n(It is the staging environment intermediate certificate used by Let's Encrypt).\nYou can now safely comment the ",(0,t.jsx)(n.code,{children:"acme.caserver"})," line, remove the ",(0,t.jsx)(n.code,{children:"letsencrypt/acme.json"})," file and restart Mesh to issue a valid certificate."]}),"\n",(0,t.jsx)(n.h2,{id:"explanation",children:"Explanation"}),"\n",(0,t.jsx)(n.p,{children:"What changed between the initial setup:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"We configure a second entry point for the https traffic:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'command:\n  # Mesh will listen to incoming request on the port 443 (https)\n  - "--entryPoints.websecure.address=:443"\nports:\n  - "443:443"\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"We configure the DNS Let's Encrypt challenge:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'command:\n  # Enable a dns challenge named "myresolver"\n  - "--certificatesresolvers.myresolver.acme.dnschallenge=true"\n  # Tell which provider to use\n  - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=ovh"\n  # The email to provide to Let\'s Encrypt\n  - "--certificatesresolvers.myresolver.acme.email=postmaster@example.com"\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"We provide the required configuration to our provider via environment variables:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'environment:\n  - "OVH_ENDPOINT=xxx"\n  - "OVH_APPLICATION_KEY=xxx"\n  - "OVH_APPLICATION_SECRET=xxx"\n  - "OVH_CONSUMER_KEY=xxx"\n'})}),"\n",(0,t.jsx)(n.p,{children:"!!! Note"}),"\n",(0,t.jsx)(n.p,{children:"This is the step that may vary depending on the provider you use.\nJust define the variables required by your provider.\n(see the prerequisite for a list)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"We add a volume to store our certificates:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'volumes:\n  # Create a letsencrypt dir within the folder where the docker-compose file is\n  - "./letsencrypt:/letsencrypt"\n\ncommand:\n  # Tell to store the certificate on a path under our volume\n  - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["We configure the ",(0,t.jsx)(n.code,{children:"whoami"})," service to tell Mesh to use the certificate resolver named ",(0,t.jsx)(n.code,{children:"myresolver"})," we just configured:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'labels:\n\t- "Mesh.http.routers.whoami.tls.certresolver=myresolver" # Uses the Host rule to define which certificate to issue\n'})}),"\n",(0,t.jsx)(n.h2,{id:"use-secrets",children:"Use Secrets"}),"\n",(0,t.jsxs)(n.p,{children:["To configure the provider, and avoid having the secrets exposed in plaintext within the docker-compose environment section,\nyou could use docker secrets.",(0,t.jsx)(n.br,{}),"\n","The point is to manage those secret files by another mean, and read them from the ",(0,t.jsx)(n.code,{children:"docker-compose.yml"})," file making the docker-compose file itself less sensitive."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Create a directory named ",(0,t.jsx)(n.code,{children:"secrets"}),", and create a file for each parameters required to configure you provider containing the value of the parameter:",(0,t.jsx)(n.br,{}),"\n","for example, the ",(0,t.jsx)(n.code,{children:"ovh_endpoint.secret"})," file contain ",(0,t.jsx)(n.code,{children:"ovh-eu"})]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"./secrets\n\u251c\u2500\u2500 ovh_application_key.secret\n\u251c\u2500\u2500 ovh_application_secret.secret\n\u251c\u2500\u2500 ovh_consumer_key.secret\n\u2514\u2500\u2500 ovh_endpoint.secret\n"})}),"\n",(0,t.jsx)(n.p,{children:"!!! Note"}),"\n",(0,t.jsxs)(n.p,{children:["You could store those secrets anywhere on the server,\njust make sure to use the proper path for the ",(0,t.jsx)(n.code,{children:"file"})," directive for the secrets definition in the ",(0,t.jsx)(n.code,{children:"docker-compose.yml"})," file."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Use this ",(0,t.jsx)(n.code,{children:"docker-compose.yml"})," file:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'--8<-- "content/user-guides/docker-compose/acme-dns/docker-compose_secrets.yml"\n'})}),"\n",(0,t.jsx)(n.p,{children:"!!! Note"}),"\n",(0,t.jsxs)(n.p,{children:["Still think about changing ",(0,t.jsx)(n.code,{children:"postmaster@example.com"})," & ",(0,t.jsx)(n.code,{children:"whoami.example.com"})," by your own values."]}),"\n",(0,t.jsx)(n.p,{children:"Let's explain a bit what we just did:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The following section allow to read files on the docker host, and expose those file under ",(0,t.jsx)(n.code,{children:"/run/secrets/[NAME_OF_THE_SECRET]"})," within the container:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'secrets:\n  # secret name also used to name the file exposed within the container\n  ovh_endpoint:\n     # path on the host\n    file: "./secrets/ovh_endpoint.secret"\n  ovh_application_key:\n    file: "./secrets/ovh_application_key.secret"\n  ovh_application_secret:\n    file: "./secrets/ovh_application_secret.secret"\n  ovh_consumer_key:\n    file: "./secrets/ovh_consumer_key.secret"\n\nservices:\n  Mesh:\n    # expose the predefined secret to the container by name\n    secrets:\n      - "ovh_endpoint"\n      - "ovh_application_key"\n      - "ovh_application_secret"\n      - "ovh_consumer_key"\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The environment variable within our ",(0,t.jsx)(n.code,{children:"Mesh"})," service are suffixed by ",(0,t.jsx)(n.code,{children:"_FILE"})," which allow us to point to files containing the value, instead of exposing the value itself.",(0,t.jsx)(n.br,{}),"\n","The acme client will read the content of those file to get the required configuration values."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'environment:\n  # expose the path to file provided by docker containing the value we want for OVH_ENDPOINT.\n  - "OVH_ENDPOINT_FILE=/run/secrets/ovh_endpoint"\n  - "OVH_APPLICATION_KEY_FILE=/run/secrets/ovh_application_key"\n  - "OVH_APPLICATION_SECRET_FILE=/run/secrets/ovh_application_secret"\n  - "OVH_CONSUMER_KEY_FILE=/run/secrets/ovh_consumer_key"\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var r=s(6540);const t={},i=r.createContext(t);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);