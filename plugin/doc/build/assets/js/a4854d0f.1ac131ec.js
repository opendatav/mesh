"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[2371],{814:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>m});const o=JSON.parse('{"id":"https/include-acme-multiple-domains-from-rule-example","title":"include-acme-multiple-domains-from-rule-example","description":"","source":"@site/docs/https/include-acme-multiple-domains-from-rule-example.md","sourceDirName":"https","slug":"/https/include-acme-multiple-domains-from-rule-example","permalink":"/doc/docs/https/include-acme-multiple-domains-from-rule-example","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/https/include-acme-multiple-domains-from-rule-example.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"include-acme-multiple-domains-example","permalink":"/doc/docs/https/include-acme-multiple-domains-example"},"next":{"title":"include-acme-single-domain-example","permalink":"/doc/docs/https/include-acme-single-domain-example"}}');var l=n(4848),r=n(8453);const s={},a=void 0,c={},m=[];function i(e){const t={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-yaml",metastring:'tab="Docker & Swarm"',children:"## Dynamic configuration\nlabels:\n  - Mesh.http.routers.blog.rule=(Host(`example.com`) && Path(`/blog`)) || Host(`blog.example.org`)\n  - Mesh.http.routers.blog.tls=true\n  - Mesh.http.routers.blog.tls.certresolver=myresolver\n"})}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-yaml",metastring:'tab="Docker (Swarm)"',children:'## Dynamic configuration\ndeploy:\n  labels:\n    - Mesh.http.routers.blog.rule=(Host(`example.com`) && Path(`/blog`)) || Host(`blog.example.org`)\n    - Mesh.http.routers.blog.tls=true\n    - Mesh.http.routers.blog.tls.certresolver=myresolver\n    - Mesh.http.services.blog-svc.loadbalancer.server.port=8080"\n'})}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-yaml",metastring:'tab="Kubernetes"',children:"apiVersion: Mesh.io/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: blogtls\nspec:\n  entryPoints:\n    - websecure\n  routes:\n  - match: (Host(`example.com`) && Path(`/blog`)) || Host(`blog.example.org`)\n    kind: Rule\n    services:\n    - name: blog\n      port: 8080\n  tls:\n    certResolver: myresolver\n"})}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\nhttp:\n  routers:\n    blog:\n      rule: "(Host(`example.com`) && Path(`/blog`)) || Host(`blog.example.org`)"\n      tls:\n        certResolver: myresolver\n'})}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[http.routers]\n  [http.routers.blog]\n    rule = "(Host(`example.com`) && Path(`/blog`)) || Host(`blog.example.org`)"\n    [http.routers.blog.tls]\n      certResolver = "myresolver"\n'})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(i,{...e})}):i(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var o=n(6540);const l={},r=o.createContext(l);function s(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);