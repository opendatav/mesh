"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[8601],{6695:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>r});const o=JSON.parse('{"id":"middlewares/http/contenttype","title":"Mesh ContentType Documentation","description":"Mesh Proxy\'s HTTP middleware automatically sets the `Content-Type` header value when it is not set by the backend. Read the technical documentation.","source":"@site/docs/middlewares/http/contenttype.md","sourceDirName":"middlewares/http","slug":"/middlewares/http/contenttype","permalink":"/doc/docs/middlewares/http/contenttype","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/middlewares/http/contenttype.md","tags":[],"version":"current","frontMatter":{"title":"Mesh ContentType Documentation","description":"Mesh Proxy\'s HTTP middleware automatically sets the `Content-Type` header value when it is not set by the backend. Read the technical documentation."},"sidebar":"tutorialSidebar","previous":{"title":"Mesh Compress Documentation","permalink":"/doc/docs/middlewares/http/compress"},"next":{"title":"Mesh DigestAuth Documentation","permalink":"/doc/docs/middlewares/http/digestauth"}}');var a=n(4848),s=n(8453);const i={title:"Mesh ContentType Documentation",description:"Mesh Proxy's HTTP middleware automatically sets the `Content-Type` header value when it is not set by the backend. Read the technical documentation."},d="ContentType",c={},r=[{value:"Configuration Examples",id:"configuration-examples",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"<code>autoDetect</code>",id:"autodetect",level:3}];function l(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"contenttype",children:"ContentType"})}),"\n",(0,a.jsx)(t.p,{children:"Handling Content-Type auto-detection"}),"\n",(0,a.jsxs)(t.p,{children:["The Content-Type middleware sets the ",(0,a.jsx)(t.code,{children:"Content-Type"})," header value to the media type detected from the response content,\nwhen it is not set by the backend."]}),"\n",(0,a.jsx)(t.p,{children:"!!! info"}),"\n",(0,a.jsxs)(t.p,{children:["The scope of the Content-Type middleware is the MIME type detection done by the core of Mesh (the server part).\nTherefore, it has no effect against any other ",(0,a.jsx)(t.code,{children:"Content-Type"})," header modifications (e.g.: in another middleware such as compress)."]}),"\n",(0,a.jsx)(t.h2,{id:"configuration-examples",children:"Configuration Examples"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-yaml",metastring:'tab="Docker & Swarm"',children:'# Enable auto-detection\nlabels:\n  - "Mesh.http.middlewares.autodetect.contenttype=true"\n'})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-yaml",metastring:'tab="Kubernetes"',children:"# Enable auto-detection\napiVersion: Mesh.io/v1alpha1\nkind: Middleware\nmetadata:\n  name: autodetect\nspec:\n  contentType: {}\n"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-yaml",metastring:'tab="Consul Catalog"',children:'# Enable auto-detection\n- "Mesh.http.middlewares.autodetect.contenttype=true"\n'})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"# Enable auto-detection\nhttp:\n  middlewares:\n    autodetect:\n      contentType: {}\n"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"# Enable auto-detection\n[http.middlewares]\n  [http.middlewares.autodetect.contentType]\n"})}),"\n",(0,a.jsx)(t.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,a.jsx)(t.h3,{id:"autodetect",children:(0,a.jsx)(t.code,{children:"autoDetect"})}),"\n",(0,a.jsx)(t.p,{children:"!!! warning"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"autoDetect"})," option is deprecated and should not be used.\nMoreover, it is redundant with an empty ContentType middleware declaration."]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"autoDetect"})," specifies whether to let the ",(0,a.jsx)(t.code,{children:"Content-Type"})," header,\nif it has not been set by the backend,\nbe automatically set to a value derived from the contents of the response."]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>d});var o=n(6540);const a={},s=o.createContext(a);function i(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);