"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[1275],{566:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"providers/nomad","title":"Nomad Service Discovery","description":"Learn how to use Nomad as a provider for configuration discovery in Mesh Proxy. Read the technical documentation.","source":"@site/docs/providers/nomad.md","sourceDirName":"providers","slug":"/providers/nomad","permalink":"/doc/docs/providers/nomad","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/providers/nomad.md","tags":[],"version":"current","frontMatter":{"title":"Nomad Service Discovery","description":"Learn how to use Nomad as a provider for configuration discovery in Mesh Proxy. Read the technical documentation."},"sidebar":"tutorialSidebar","previous":{"title":"Mesh Kubernetes Ingress Documentation","permalink":"/doc/docs/providers/kubernetes-ingress"},"next":{"title":"Mesh Configuration Discovery Overview","permalink":"/doc/docs/providers/overview"}}');var r=s(4848),i=s(8453);const t={title:"Nomad Service Discovery",description:"Learn how to use Nomad as a provider for configuration discovery in Mesh Proxy. Read the technical documentation."},o="Mesh & Nomad Service Discovery",d={},c=[{value:"Configuration Examples",id:"configuration-examples",level:2},{value:"Routing Configuration",id:"routing-configuration",level:2},{value:"Provider Configuration",id:"provider-configuration",level:2},{value:"<code>refreshInterval</code>",id:"refreshinterval",level:3},{value:"<code>watch</code>",id:"watch",level:3},{value:"<code>throttleDuration</code>",id:"throttleduration",level:3},{value:"<code>prefix</code>",id:"prefix",level:3},{value:"<code>stale</code>",id:"stale",level:3},{value:"<code>endpoint</code>",id:"endpoint",level:3},{value:"<code>address</code>",id:"address",level:4},{value:"<code>token</code>",id:"token",level:4},{value:"<code>endpointWaitTime</code>",id:"endpointwaittime",level:4},{value:"<code>tls</code>",id:"tls",level:4},{value:"<code>ca</code>",id:"ca",level:5},{value:"<code>cert</code>",id:"cert",level:5},{value:"<code>key</code>",id:"key",level:5},{value:"<code>insecureSkipVerify</code>",id:"insecureskipverify",level:5},{value:"<code>exposedByDefault</code>",id:"exposedbydefault",level:3},{value:"<code>defaultRule</code>",id:"defaultrule",level:3},{value:"<code>constraints</code>",id:"constraints",level:3},{value:"<code>namespaces</code>",id:"namespaces",level:3},{value:"<code>namespaces</code>",id:"namespaces-1",level:3},{value:"<code>allowEmptyServices</code>",id:"allowemptyservices",level:3}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"mesh--nomad-service-discovery",children:"Mesh & Nomad Service Discovery"})}),"\n",(0,r.jsx)(n.p,{children:"A Story of Tags, Services & Nomads"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Nomad Service Discovery",src:s(8561).A+"",width:"1028",height:"418"})}),"\n",(0,r.jsx)(n.p,{children:"Attach tags to your Nomad services and let Mesh do the rest!"}),"\n",(0,r.jsx)(n.h2,{id:"configuration-examples",children:"Configuration Examples"}),"\n",(0,r.jsx)(n.p,{children:'??? example "Configuring Nomad & Deploying Services"'}),"\n",(0,r.jsx)(n.p,{children:"Enabling the nomad provider"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  nomad: {}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.nomad]\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.nomad=true\n"})}),"\n",(0,r.jsx)(n.p,{children:"Attaching tags to services:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'...\nservice {\n  name = "myService"\n  tags = [\n    "Mesh.http.routers.my-router.rule=Host(`example.com`)",\n  ]\n}\n...\n'})}),"\n",(0,r.jsx)(n.h2,{id:"routing-configuration",children:"Routing Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["See the dedicated section in ",(0,r.jsx)(n.a,{href:"/doc/docs/routing/providers/nomad",children:"routing"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"provider-configuration",children:"Provider Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"refreshinterval",children:(0,r.jsx)(n.code,{children:"refreshInterval"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=15s"})}),"\n",(0,r.jsx)(n.p,{children:"Defines the polling interval."}),"\n",(0,r.jsxs)(n.p,{children:['!!! note "This option is ignored when the ',(0,r.jsx)(n.a,{href:"#watch",children:"watch"}),' mode is enabled."']}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  nomad:\n    refreshInterval: 30s\n    # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.nomad]\n  refreshInterval = "30s"\n  # ...\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.nomad.refreshInterval=30s\n# ...\n"})}),"\n",(0,r.jsx)(n.h3,{id:"watch",children:(0,r.jsx)(n.code,{children:"watch"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=false"})}),"\n",(0,r.jsx)(n.p,{children:"Enables the watch mode to refresh the configuration on a per-event basis."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  nomad:\n    watch: true\n    # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.nomad]\n  watch = true\n  # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.nomad.watch\n# ...\n"})}),"\n",(0,r.jsx)(n.h3,{id:"throttleduration",children:(0,r.jsx)(n.code,{children:"throttleDuration"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=0s"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"throttleDuration"})," option defines how often the provider is allowed to handle service events from Nomad.\nThis prevents a Nomad cluster that updates many times per second from continuously changing your Mesh configuration."]}),"\n",(0,r.jsx)(n.p,{children:"If left empty, the provider does not apply any throttling and does not drop any Nomad service events."}),"\n",(0,r.jsxs)(n.p,{children:["The value of ",(0,r.jsx)(n.code,{children:"throttleDuration"})," should be provided in seconds or as a valid duration format,\nsee ",(0,r.jsx)(n.a,{href:"https://golang.org/pkg/time/#ParseDuration",children:"time.ParseDuration"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:['!!! warning "This option is only compatible with the ',(0,r.jsx)(n.a,{href:"#watch",children:"watch"}),' mode."']}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  nomad:\n    throttleDuration: 2s\n    # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.nomad]\n  throttleDuration = "2s"\n  # ...\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.nomad.throttleDuration=2s\n# ...\n"})}),"\n",(0,r.jsx)(n.h3,{id:"prefix",children:(0,r.jsx)(n.code,{children:"prefix"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:'required, Default="Mesh"'})}),"\n",(0,r.jsx)(n.p,{children:"The prefix for Nomad service tags defining Mesh labels."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  nomad:\n    prefix: test\n    # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.nomad]\n  prefix = "test"\n  # ...\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.nomad.prefix=test\n# ...\n"})}),"\n",(0,r.jsx)(n.h3,{id:"stale",children:(0,r.jsx)(n.code,{children:"stale"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=false"})}),"\n",(0,r.jsx)(n.p,{children:"Use stale consistency for Nomad service API reads."}),"\n",(0,r.jsx)(n.p,{children:'!!! note ""'}),"\n",(0,r.jsx)(n.p,{children:"This makes reads very fast and scalable at the cost of a higher likelihood of stale values."}),"\n",(0,r.jsxs)(n.p,{children:["For more information, see the Nomad ",(0,r.jsx)(n.a,{href:"https://www.nomadproject.io/api-docs#consistency-modes",children:"documentation on consistency"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  nomad:\n    stale: true\n    # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.nomad]\n  stale = true\n  # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.nomad.stale=true\n# ...\n"})}),"\n",(0,r.jsx)(n.h3,{id:"endpoint",children:(0,r.jsx)(n.code,{children:"endpoint"})}),"\n",(0,r.jsx)(n.p,{children:"Defines the Nomad server endpoint."}),"\n",(0,r.jsx)(n.h4,{id:"address",children:(0,r.jsx)(n.code,{children:"address"})}),"\n",(0,r.jsx)(n.p,{children:"Defines the address of the Nomad server."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:['Optional, Default="',(0,r.jsx)(n.a,{href:"http://127.0.0.1:4646",children:"http://127.0.0.1:4646"}),'"']})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  nomad:\n    endpoint:\n      address: http://127.0.0.1:4646\n    # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.nomad]\n  [providers.nomad.endpoint]\n    address = "http://127.0.0.1:4646"\n    # ...\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.nomad.endpoint.address=http://127.0.0.1:4646\n# ...\n"})}),"\n",(0,r.jsx)(n.h4,{id:"token",children:(0,r.jsx)(n.code,{children:"token"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:'Optional, Default=""'})}),"\n",(0,r.jsxs)(n.p,{children:["Token is used to provide a per-request ACL token, if Nomad ACLs are enabled.\nThe appropriate ACL privilege for this token is 'read-job', as outlined in the ",(0,r.jsx)(n.a,{href:"https://developer.hashicorp.com/nomad/tutorials/access-control/access-control-policies",children:"Nomad documentation on ACL"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  nomad:\n    endpoint:\n      token: test\n    # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.nomad]\n  [providers.nomad.endpoint]\n    token = "test"\n    # ...\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.nomad.endpoint.token=test\n# ...\n"})}),"\n",(0,r.jsx)(n.h4,{id:"endpointwaittime",children:(0,r.jsx)(n.code,{children:"endpointWaitTime"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:'Optional, Default=""'})}),"\n",(0,r.jsx)(n.p,{children:"Limits the duration for which a Watch can block.\nIf not provided, the agent default values will be used."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  nomad:\n    endpoint:\n      endpointWaitTime: 15s\n    # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.nomad]\n  [providers.nomad.endpoint]\n    endpointWaitTime = "15s"\n    # ...\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.nomad.endpoint.endpointwaittime=15s\n# ...\n"})}),"\n",(0,r.jsx)(n.h4,{id:"tls",children:(0,r.jsx)(n.code,{children:"tls"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional"})}),"\n",(0,r.jsx)(n.p,{children:"Defines the TLS configuration used for the secure connection to the Nomad API."}),"\n",(0,r.jsx)(n.h5,{id:"ca",children:(0,r.jsx)(n.code,{children:"ca"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"ca"})," is the path to the certificate authority used for the secure connection to Nomad,\nit defaults to the system bundle."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  nomad:\n    endpoint:\n      tls:\n        ca: path/to/ca.crt\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.nomad.endpoint.tls]\n  ca = "path/to/ca.crt"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.nomad.endpoint.tls.ca=path/to/ca.crt\n"})}),"\n",(0,r.jsx)(n.h5,{id:"cert",children:(0,r.jsx)(n.code,{children:"cert"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"cert"})," is the path to the public certificate used for the secure connection to the Nomad API.\nWhen using this option, setting the ",(0,r.jsx)(n.code,{children:"key"})," option is required."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  nomad:\n    endpoint:\n      tls:\n        cert: path/to/foo.cert\n        key: path/to/foo.key\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.nomad.endpoint.tls]\n  cert = "path/to/foo.cert"\n  key = "path/to/foo.key"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.nomad.endpoint.tls.cert=path/to/foo.cert\n--providers.nomad.endpoint.tls.key=path/to/foo.key\n"})}),"\n",(0,r.jsx)(n.h5,{id:"key",children:(0,r.jsx)(n.code,{children:"key"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"key"})," is the path to the private key used for the secure connection to the Nomad API.\nWhen using this option, setting the ",(0,r.jsx)(n.code,{children:"cert"})," option is required."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  nomad:\n    endpoint:\n      tls:\n        cert: path/to/foo.cert\n        key: path/to/foo.key\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.nomad.endpoint.tls]\n  cert = "path/to/foo.cert"\n  key = "path/to/foo.key"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.nomad.endpoint.tls.cert=path/to/foo.cert\n--providers.nomad.endpoint.tls.key=path/to/foo.key\n"})}),"\n",(0,r.jsx)(n.h5,{id:"insecureskipverify",children:(0,r.jsx)(n.code,{children:"insecureSkipVerify"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=false"})}),"\n",(0,r.jsxs)(n.p,{children:["If ",(0,r.jsx)(n.code,{children:"insecureSkipVerify"})," is ",(0,r.jsx)(n.code,{children:"true"}),", the TLS connection to Nomad accepts any certificate presented by the server regardless of the hostnames it covers."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  nomad:\n    endpoint:\n      tls:\n        insecureSkipVerify: true\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.nomad.endpoint.tls]\n  insecureSkipVerify = true\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.nomad.endpoint.tls.insecureskipverify=true\n"})}),"\n",(0,r.jsx)(n.h3,{id:"exposedbydefault",children:(0,r.jsx)(n.code,{children:"exposedByDefault"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=true"})}),"\n",(0,r.jsxs)(n.p,{children:["Expose Nomad services by default in Mesh.\nIf set to ",(0,r.jsx)(n.code,{children:"false"}),", services that do not have a ",(0,r.jsx)(n.code,{children:"Mesh.enable=true"})," tag will be ignored from the resulting routing configuration."]}),"\n",(0,r.jsxs)(n.p,{children:["For additional information, refer to ",(0,r.jsx)(n.a,{href:"/doc/docs/providers/overview#restrict-the-scope-of-service-discovery",children:"Restrict the Scope of Service Discovery"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  nomad:\n    exposedByDefault: false\n    # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.nomad]\n  exposedByDefault = false\n  # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.nomad.exposedByDefault=false\n# ...\n"})}),"\n",(0,r.jsx)(n.h3,{id:"defaultrule",children:(0,r.jsx)(n.code,{children:"defaultRule"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["Optional, Default=",(0,r.jsx)(n.code,{children:"Host(`{{ normalize .Name }}`)"})]})}),"\n",(0,r.jsx)(n.p,{children:"The default host rule for all services."}),"\n",(0,r.jsxs)(n.p,{children:["For a given service, if no routing rule was defined by a tag, it is defined by this ",(0,r.jsx)(n.code,{children:"defaultRule"})," instead.\nThe ",(0,r.jsx)(n.code,{children:"defaultRule"})," must be set to a valid ",(0,r.jsx)(n.a,{href:"https://pkg.go.dev/text/template/",children:"Go template"}),",\nand can include ",(0,r.jsx)(n.a,{href:"https://masterminds.github.io/sprig/",children:"sprig template functions"}),".\nThe service name can be accessed with the ",(0,r.jsx)(n.code,{children:"Name"})," identifier,\nand the template has access to all the labels (i.e. tags beginning with the ",(0,r.jsx)(n.code,{children:"prefix"}),") defined on this service."]}),"\n",(0,r.jsxs)(n.p,{children:["The option can be overridden on an instance basis with the ",(0,r.jsx)(n.code,{children:"Mesh.http.routers.{name-of-your-choice}.rule"})," tag."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'providers:\n  nomad:\n    defaultRule: "Host(`{{ .Name }}.{{ index .Labels \\"customLabel\\"}}`)"\n    # ...\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.nomad]\n  defaultRule = "Host(`{{ .Name }}.{{ index .Labels \\"customLabel\\"}}`)"\n  # ...\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.nomad.defaultRule='Host(`{{ .Name }}.{{ index .Labels \"customLabel\"}}`)'\n# ...\n"})}),"\n",(0,r.jsx)(n.p,{children:'??? info "Default rule and Mesh service"'}),"\n",(0,r.jsx)(n.p,{children:"The exposure of the Mesh container, combined with the default rule mechanism,\ncan lead to create a router targeting itself in a loop.\nIn this case, to prevent an infinite loop,\nMesh adds an internal middleware to refuse the request if it comes from the same router."}),"\n",(0,r.jsx)(n.h3,{id:"constraints",children:(0,r.jsx)(n.code,{children:"constraints"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:'Optional, Default=""'})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"constraints"})," option can be set to an expression that Mesh matches against the service tags to determine whether\nto create any route for that service. If none of the service tags match the expression, no route for that service is\ncreated. If the expression is empty, all detected services are included."]}),"\n",(0,r.jsxs)(n.p,{children:["The expression syntax is based on the ",(0,r.jsx)(n.code,{children:"Tag(`tag`)"}),", and ",(0,r.jsx)(n.code,{children:"TagRegex(`tag`)"})," functions,\nas well as the usual boolean logic, as shown in examples below."]}),"\n",(0,r.jsx)(n.p,{children:'??? example "Constraints Expression Examples"'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# Includes only services having the tag `a.tag.name=foo`\nconstraints = "Tag(`a.tag.name=foo`)"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# Excludes services having any tag `a.tag.name=foo`\nconstraints = "!Tag(`a.tag.name=foo`)"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# With logical AND.\nconstraints = "Tag(`a.tag.name`) && Tag(`another.tag.name`)"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# With logical OR.\nconstraints = "Tag(`a.tag.name`) || Tag(`another.tag.name`)"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# With logical AND and OR, with precedence set by parentheses.\nconstraints = "Tag(`a.tag.name`) && (Tag(`another.tag.name`) || Tag(`yet.another.tag.name`))"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# Includes only services having a tag matching the `a\\.tag\\.t.+` regular expression.\nconstraints = "TagRegex(`a\\.tag\\.t.+`)"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'providers:\n  nomad:\n    constraints: "Tag(`a.tag.name`)"\n    # ...\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.nomad]\n  constraints = "Tag(`a.tag.name`)"\n  # ...\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:'--providers.nomad.constraints="Tag(`a.tag.name`)"\n# ...\n'})}),"\n",(0,r.jsxs)(n.p,{children:["For additional information, refer to ",(0,r.jsx)(n.a,{href:"/doc/docs/providers/overview#restrict-the-scope-of-service-discovery",children:"Restrict the Scope of Service Discovery"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"namespaces",children:(0,r.jsx)(n.code,{children:"namespaces"})}),"\n",(0,r.jsxs)(n.p,{children:['??? warning "Deprecated in favor of the ',(0,r.jsx)(n.a,{href:"#namespaces",children:(0,r.jsx)(n.code,{children:"namespaces"})}),' option."']}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:'Optional, Default=""'})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"namespace"})," option defines the namespace in which the Nomad services will be discovered."]}),"\n",(0,r.jsx)(n.p,{children:"!!! warning"}),"\n",(0,r.jsxs)(n.p,{children:["One should only define either the ",(0,r.jsx)(n.code,{children:"namespaces"})," option or the ",(0,r.jsx)(n.code,{children:"namespace"})," option."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'providers:\n  nomad:\n    namespace: "production"\n    # ...\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.nomad]\n  namespace = "production"\n  # ...\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.nomad.namespace=production\n# ...\n"})}),"\n",(0,r.jsx)(n.h3,{id:"namespaces-1",children:(0,r.jsx)(n.code,{children:"namespaces"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:'Optional, Default=""'})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"namespaces"})," option defines the namespaces in which the nomad services will be discovered.\nWhen using the ",(0,r.jsx)(n.code,{children:"namespaces"})," option, the discovered object names will be suffixed as shown below:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"<resource-name>@nomad-<namespace>\n"})}),"\n",(0,r.jsx)(n.p,{children:"!!! warning"}),"\n",(0,r.jsxs)(n.p,{children:["One should only define either the ",(0,r.jsx)(n.code,{children:"namespaces"})," option or the ",(0,r.jsx)(n.code,{children:"namespace"})," option."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'providers:\n  nomad:\n    namespaces:\n      - "ns1"\n      - "ns2"\n    # ...\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.nomad]\n  namespaces = ["ns1", "ns2"]\n  # ...\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.nomad.namespaces=ns1,ns2\n# ...\n"})}),"\n",(0,r.jsx)(n.h3,{id:"allowemptyservices",children:(0,r.jsx)(n.code,{children:"allowEmptyServices"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default: false"})}),"\n",(0,r.jsxs)(n.p,{children:["If the parameter is set to ",(0,r.jsx)(n.code,{children:"true"}),",\nit allows the creation of an empty ",(0,r.jsx)(n.a,{href:"/doc/docs/routing/services/#servers-load-balancer",children:"servers load balancer"})," if the targeted Nomad service has no endpoints available. This results in a ",(0,r.jsx)(n.code,{children:"503"})," HTTP response instead of a ",(0,r.jsx)(n.code,{children:"404"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  nomad:\n    allowEmptyServices: true\n    # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.nomad]\n  allowEmptyServices = true\n  # ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.nomad.allowEmptyServices=true\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var a=s(6540);const r={},i=a.createContext(r);function t(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),a.createElement(i.Provider,{value:n},e.children)}},8561:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/nomad-e4b9963f4cc1b6e63633fa12722fd40f.png"}}]);