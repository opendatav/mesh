"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[3183],{8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var r=n(6540);const i={},d=r.createContext(i);function a(e){const t=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(d.Provider,{value:t},e.children)}},8898:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"middlewares/http/redirectregex","title":"Mesh RedirectRegex Documentation","description":"In Mesh Proxy\'s HTTP middleware, RedirectRegex redirecting clients to different locations. Read the technical documentation.","source":"@site/docs/middlewares/http/redirectregex.md","sourceDirName":"middlewares/http","slug":"/middlewares/http/redirectregex","permalink":"/doc/docs/middlewares/http/redirectregex","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/middlewares/http/redirectregex.md","tags":[],"version":"current","frontMatter":{"title":"Mesh RedirectRegex Documentation","description":"In Mesh Proxy\'s HTTP middleware, RedirectRegex redirecting clients to different locations. Read the technical documentation."},"sidebar":"tutorialSidebar","previous":{"title":"Mesh RateLimit Documentation","permalink":"/doc/docs/middlewares/http/ratelimit"},"next":{"title":"Mesh RedirectScheme Documentation","permalink":"/doc/docs/middlewares/http/redirectscheme"}}');var i=n(4848),d=n(8453);const a={title:"Mesh RedirectRegex Documentation",description:"In Mesh Proxy's HTTP middleware, RedirectRegex redirecting clients to different locations. Read the technical documentation."},c="RedirectRegex",s={},o=[{value:"Configuration Examples",id:"configuration-examples",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"<code>permanent</code>",id:"permanent",level:3},{value:"<code>regex</code>",id:"regex",level:3},{value:"<code>replacement</code>",id:"replacement",level:3}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"redirectregex",children:"RedirectRegex"})}),"\n",(0,i.jsx)(t.p,{children:"Redirecting the Client to a Different Location"}),"\n",(0,i.jsx)(t.p,{children:"The RedirectRegex redirects a request using regex matching and replacement."}),"\n",(0,i.jsx)(t.h2,{id:"configuration-examples",children:"Configuration Examples"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",metastring:'tab="Docker & Swarm"',children:'# Redirect with domain replacement\n# Note: all dollar signs need to be doubled for escaping.\nlabels:\n  - "Mesh.http.middlewares.test-redirectregex.redirectregex.regex=^http://localhost/(.*)"\n  - "Mesh.http.middlewares.test-redirectregex.redirectregex.replacement=http://mydomain/$${1}"\n'})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",metastring:'tab="Kubernetes"',children:"# Redirect with domain replacement\napiVersion: Mesh.io/v1alpha1\nkind: Middleware\nmetadata:\n  name: test-redirectregex\nspec:\n  redirectRegex:\n    regex: ^http://localhost/(.*)\n    replacement: http://mydomain/${1}\n"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",metastring:'tab="Consul Catalog"',children:'# Redirect with domain replacement\n# Note: all dollar signs need to be doubled for escaping.\n- "Mesh.http.middlewares.test-redirectregex.redirectregex.regex=^http://localhost/(.*)"\n- "Mesh.http.middlewares.test-redirectregex.redirectregex.replacement=http://mydomain/$${1}"\n'})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'# Redirect with domain replacement\nhttp:\n  middlewares:\n    test-redirectregex:\n      redirectRegex:\n        regex: "^http://localhost/(.*)"\n        replacement: "http://mydomain/${1}"\n'})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'# Redirect with domain replacement\n[http.middlewares]\n  [http.middlewares.test-redirectregex.redirectRegex]\n    regex = "^http://localhost/(.*)"\n    replacement = "http://mydomain/${1}"\n'})}),"\n",(0,i.jsx)(t.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,i.jsx)(t.h3,{id:"permanent",children:(0,i.jsx)(t.code,{children:"permanent"})}),"\n",(0,i.jsxs)(t.p,{children:["Set the ",(0,i.jsx)(t.code,{children:"permanent"})," option to ",(0,i.jsx)(t.code,{children:"true"})," to apply a permanent redirection."]}),"\n",(0,i.jsx)(t.h3,{id:"regex",children:(0,i.jsx)(t.code,{children:"regex"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"regex"})," option is the regular expression to match and capture elements from the request URL."]}),"\n",(0,i.jsx)(t.p,{children:"!!! tip"}),"\n",(0,i.jsxs)(t.p,{children:["Regular expressions and replacements can be tested using online tools such as ",(0,i.jsx)(t.a,{href:"https://play.golang.org/p/mWU9p-wk2ru",children:"Go Playground"})," or the ",(0,i.jsx)(t.a,{href:"https://regex101.com/r/58sIgx/2",children:"Regex101"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["When defining a regular expression within YAML, any escaped character needs to be escaped twice: ",(0,i.jsx)(t.code,{children:"example\\.com"})," needs to be written as ",(0,i.jsx)(t.code,{children:"example\\\\.com"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"replacement",children:(0,i.jsx)(t.code,{children:"replacement"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"replacement"})," option defines how to modify the URL to have the new target URL."]}),"\n",(0,i.jsx)(t.p,{children:"!!! warning"}),"\n",(0,i.jsxs)(t.p,{children:["Care should be taken when defining replacement expand variables: ",(0,i.jsx)(t.code,{children:"$1x"})," is equivalent to ",(0,i.jsx)(t.code,{children:"${1x}"}),", not ",(0,i.jsx)(t.code,{children:"${1}x"})," (see ",(0,i.jsx)(t.a,{href:"https://golang.org/pkg/regexp/#Regexp.Expand",children:"Regexp.Expand"}),"), so use ",(0,i.jsx)(t.code,{children:"${1}"})," syntax."]})]})}function h(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);