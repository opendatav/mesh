"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[2641],{7336:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"observability/tracing/overview","title":"Mesh Tracing Overview","description":"The Mesh Proxy tracing system allows developers to visualize call flows in their infrastructure. Read the full documentation.","source":"@site/docs/observability/tracing/overview.md","sourceDirName":"observability/tracing","slug":"/observability/tracing/overview","permalink":"/doc/docs/observability/tracing/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/observability/tracing/overview.md","tags":[],"version":"current","frontMatter":{"title":"Mesh Tracing Overview","description":"The Mesh Proxy tracing system allows developers to visualize call flows in their infrastructure. Read the full documentation."},"sidebar":"tutorialSidebar","previous":{"title":"Mesh OpenTelemetry Documentation","permalink":"/doc/docs/observability/tracing/opentelemetry"},"next":{"title":"Mesh API Documentation","permalink":"/doc/docs/operations/api"}}');var s=n(4848),t=n(8453);const i={title:"Mesh Tracing Overview",description:"The Mesh Proxy tracing system allows developers to visualize call flows in their infrastructure. Read the full documentation."},c="Tracing",l={},d=[{value:"Configuration",id:"configuration",level:2},{value:"Common Options",id:"common-options",level:3},{value:"<code>addInternals</code>",id:"addinternals",level:4},{value:"<code>serviceName</code>",id:"servicename",level:4},{value:"<code>sampleRate</code>",id:"samplerate",level:4},{value:"<code>resourceAttributes</code>",id:"resourceattributes",level:4},{value:"<code>capturedRequestHeaders</code>",id:"capturedrequestheaders",level:4},{value:"<code>capturedResponseHeaders</code>",id:"capturedresponseheaders",level:4},{value:"<code>safeQueryParams</code>",id:"safequeryparams",level:4}];function o(e){const a={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.header,{children:(0,s.jsx)(a.h1,{id:"tracing",children:"Tracing"})}),"\n",(0,s.jsx)(a.p,{children:"Visualize the Requests Flow"}),"\n",(0,s.jsx)(a.p,{children:"The tracing system allows developers to visualize call flows in their infrastructure."}),"\n",(0,s.jsxs)(a.p,{children:["Mesh uses ",(0,s.jsx)(a.a,{href:"https://opentelemetry.io/",title:"Link to website of OTel",children:"OpenTelemetry"}),", an open standard designed for distributed tracing."]}),"\n",(0,s.jsxs)(a.p,{children:["Please check our dedicated ",(0,s.jsx)(a.a,{href:"/doc/docs/observability/tracing/opentelemetry",children:"OTel docs"})," to learn more."]}),"\n",(0,s.jsx)(a.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(a.p,{children:"To enable the tracing:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"tracing: {}\n"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[tracing]\n"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",metastring:'tab="CLI"',children:"--tracing=true\n"})}),"\n",(0,s.jsx)(a.h3,{id:"common-options",children:"Common Options"}),"\n",(0,s.jsx)(a.h4,{id:"addinternals",children:(0,s.jsx)(a.code,{children:"addInternals"})}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.em,{children:'Optional, Default="false"'})}),"\n",(0,s.jsxs)(a.p,{children:["Enables tracing for internal resources (e.g.: ",(0,s.jsx)(a.code,{children:"ping@internal"}),")."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"tracing:\n  addInternals: true\n"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[tracing]\n  addInternals = true\n"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",metastring:'tab="CLI"',children:"--tracing.addinternals\n"})}),"\n",(0,s.jsx)(a.h4,{id:"servicename",children:(0,s.jsx)(a.code,{children:"serviceName"})}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.em,{children:'Required, Default="Mesh"'})}),"\n",(0,s.jsx)(a.p,{children:"Service name used in selected backend."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"tracing:\n  serviceName: Mesh\n"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[tracing]\n  serviceName = "Mesh"\n'})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",metastring:'tab="CLI"',children:"--tracing.serviceName=Mesh\n"})}),"\n",(0,s.jsx)(a.h4,{id:"samplerate",children:(0,s.jsx)(a.code,{children:"sampleRate"})}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.em,{children:"Optional, Default=1.0"})}),"\n",(0,s.jsx)(a.p,{children:"The proportion of requests to trace, specified between 0.0 and 1.0."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"tracing:\n  sampleRate: 0.2\n"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[tracing]\n  sampleRate = 0.2\n"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",metastring:'tab="CLI"',children:"--tracing.sampleRate=0.2\n"})}),"\n",(0,s.jsx)(a.h4,{id:"resourceattributes",children:(0,s.jsx)(a.code,{children:"resourceAttributes"})}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.em,{children:"Optional, Default=empty"})}),"\n",(0,s.jsx)(a.p,{children:"Defines additional resource attributes to be sent to the collector."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"tracing:\n  resourceAttributes:\n    attr1: foo\n    attr2: bar\n"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[tracing]\n  [tracing.resourceAttributes]\n    attr1 = "foo"\n    attr2 = "bar"\n'})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",metastring:'tab="CLI"',children:"--tracing.resourceAttributes.attr1=foo\n--tracing.resourceAttributes.attr2=bar\n"})}),"\n",(0,s.jsx)(a.h4,{id:"capturedrequestheaders",children:(0,s.jsx)(a.code,{children:"capturedRequestHeaders"})}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.em,{children:"Optional, Default=empty"})}),"\n",(0,s.jsx)(a.p,{children:"Defines the list of request headers to add as attributes.\nIt applies to client and server kind spans."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"tracing:\n  capturedRequestHeaders:\n    - X-CustomHeader\n    - X-OtherHeader\n"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[tracing]\n  capturedRequestHeaders = ["X-CustomHeader", "X-OtherHeader"]\n'})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",metastring:'tab="CLI"',children:'--tracing.capturedRequestHeaders="X-CustomHeader,X-OtherHeader"\n'})}),"\n",(0,s.jsx)(a.h4,{id:"capturedresponseheaders",children:(0,s.jsx)(a.code,{children:"capturedResponseHeaders"})}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.em,{children:"Optional, Default=empty"})}),"\n",(0,s.jsx)(a.p,{children:"Defines the list of response headers to add as attributes.\nIt applies to client and server kind spans."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"tracing:\n  capturedResponseHeaders:\n    - X-CustomHeader\n    - X-OtherHeader\n"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[tracing]\n  capturedResponseHeaders = ["X-CustomHeader", "X-OtherHeader"]\n'})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",metastring:'tab="CLI"',children:'--tracing.capturedResponseHeaders="X-CustomHeader,X-OtherHeader"\n'})}),"\n",(0,s.jsx)(a.h4,{id:"safequeryparams",children:(0,s.jsx)(a.code,{children:"safeQueryParams"})}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.em,{children:"Optional, Default=[]"})}),"\n",(0,s.jsx)(a.p,{children:"By default, all query parameters are redacted.\nDefines the list of query parameters to not redact."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"tracing:\n  safeQueryParams:\n    - bar\n    - buz\n"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[tracing]\n  safeQueryParams = ["bar", "buz"]\n'})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",metastring:'tab="CLI"',children:"--tracing.safeQueryParams=bar,buz\n"})})]})}function h(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>c});var r=n(6540);const s={},t=r.createContext(s);function i(e){const a=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(t.Provider,{value:a},e.children)}}}]);