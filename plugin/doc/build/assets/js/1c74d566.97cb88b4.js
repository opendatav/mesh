"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[3387],{4221:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"reference/routing-configuration/tcp/router/rules-and-priority","title":"Mesh TCP Routers Rules & Priority Documentation","description":"In Mesh Proxy, a router is in charge of connecting incoming requests to the Services that can handle them. Read the technical documentation.","source":"@site/docs/reference/routing-configuration/tcp/router/rules-and-priority.md","sourceDirName":"reference/routing-configuration/tcp/router","slug":"/reference/routing-configuration/tcp/router/rules-and-priority","permalink":"/doc/docs/reference/routing-configuration/tcp/router/rules-and-priority","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/reference/routing-configuration/tcp/router/rules-and-priority.md","tags":[],"version":"current","frontMatter":{"title":"Mesh TCP Routers Rules & Priority Documentation","description":"In Mesh Proxy, a router is in charge of connecting incoming requests to the Services that can handle them. Read the technical documentation."},"sidebar":"tutorialSidebar","previous":{"title":"Mesh Proxy TCP Middleware Overview","permalink":"/doc/docs/reference/routing-configuration/tcp/middlewares/overview"},"next":{"title":"ServersTransport TCP","permalink":"/doc/docs/reference/routing-configuration/tcp/serverstransport"}}');var s=r(4848),i=r(8453);const o={title:"Mesh TCP Routers Rules & Priority Documentation",description:"In Mesh Proxy, a router is in charge of connecting incoming requests to the Services that can handle them. Read the technical documentation."},c=void 0,l={},a=[{value:"General",id:"general",level:2},{value:"Rules",id:"rules",level:2},{value:"Expressing Complex Rules Using Operators and Parenthesis",id:"expressing-complex-rules-using-operators-and-parenthesis",level:3},{value:"HostSNI and HostSNIRegexp",id:"hostsni-and-hostsniregexp",level:3},{value:"Examples",id:"examples",level:4},{value:"ClientIP",id:"clientip",level:3},{value:"Examples",id:"examples-1",level:4},{value:"ALPN",id:"alpn",level:3},{value:"Example",id:"example",level:4},{value:"Priority Calculation",id:"priority-calculation",level:2}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"general",children:"General"}),"\n",(0,s.jsx)(n.p,{children:"!!! note"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The character @ is not authorized in the router name"}),"\n",(0,s.jsxs)(n.li,{children:["If both HTTP routers and TCP routers listen to the same ",(0,s.jsx)(n.a,{href:"/doc/docs/reference/install-configuration/entrypoints",children:"EntryPoint"}),", the TCP routers will apply before the HTTP routers. If no matching route is found for the TCP routers, then the HTTP routers will take over."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"rules",children:"Rules"}),"\n",(0,s.jsx)(n.p,{children:"Rules are a set of matchers configured with values, that determine if a particular connection matches specific criteria. If the rule is verified, the router becomes active, calls middlewares, and then forwards the request to the service."}),"\n",(0,s.jsx)(n.p,{children:"The table below lists all the available matchers:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Rule"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#hostsni-and-hostsniregexp",children:(0,s.jsx)(n.code,{children:"HostSNI(`domain`)"})})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Checks if the connection's Server Name Indication is equal to ",(0,s.jsx)(n.code,{children:"domain"}),".",(0,s.jsx)("br",{})," More information ",(0,s.jsx)(n.a,{href:"#hostsni-and-hostsniregexp",children:"here"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#hostsni-and-hostsniregexp",children:(0,s.jsx)(n.code,{children:"HostSNIRegexp(`regexp`)"})})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Checks if the connection's Server Name Indication matches ",(0,s.jsx)(n.code,{children:"regexp"}),".",(0,s.jsx)("br",{}),"Use a ",(0,s.jsx)(n.a,{href:"https://golang.org/pkg/regexp/",children:"Go"})," flavored syntax.",(0,s.jsx)("br",{})," More information ",(0,s.jsx)(n.a,{href:"#hostsni-and-hostsniregexp",children:"here"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#clientip",children:(0,s.jsx)(n.code,{children:"ClientIP(`ip`)"})})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Checks if the connection's client IP correspond to ",(0,s.jsx)(n.code,{children:"ip"}),". It accepts IPv4, IPv6 and CIDR formats.",(0,s.jsx)("br",{})," More information ",(0,s.jsx)(n.a,{href:"#clientip",children:"here"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#alpn",children:(0,s.jsx)(n.code,{children:"ALPN(`protocol`)"})})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["Checks if the connection's ALPN protocol equals ",(0,s.jsx)(n.code,{children:"protocol"}),".",(0,s.jsx)("br",{})," More information ",(0,s.jsx)(n.a,{href:"#alpn",children:"here"}),"."]})]})]})]}),"\n",(0,s.jsx)(n.p,{children:'!!! tip "Backticks or Quotes?"'}),"\n",(0,s.jsxs)(n.p,{children:["To set the value of a rule, use ",(0,s.jsx)(n.a,{href:"https://en.wiktionary.org/wiki/backtick",children:"backticks"})," ",(0,s.jsx)(n.code,{children:"`"})," or escaped double-quotes ",(0,s.jsx)(n.code,{children:'\\"'}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Single quotes ",(0,s.jsx)(n.code,{children:"'"})," are not accepted since the values are ",(0,s.jsx)(n.a,{href:"https://golang.org/ref/spec#String_literals",children:"Go's String Literals"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"expressing-complex-rules-using-operators-and-parenthesis",children:"Expressing Complex Rules Using Operators and Parenthesis"}),"\n",(0,s.jsxs)(n.p,{children:["The usual AND (",(0,s.jsx)(n.code,{children:"&&"}),") and OR (",(0,s.jsx)(n.code,{children:"||"}),") logical operators can be used, with the expected precedence rules,\nas well as parentheses."]}),"\n",(0,s.jsxs)(n.p,{children:["One can invert a matcher by using the NOT (",(0,s.jsx)(n.code,{children:"!"}),") operator."]}),"\n",(0,s.jsx)(n.p,{children:"The following rule matches connections where:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Either Server Name Indication is ",(0,s.jsx)(n.code,{children:"example.com"})," OR,"]}),"\n",(0,s.jsxs)(n.li,{children:["Server Name Indication is ",(0,s.jsx)(n.code,{children:"example.org"})," AND ALPN protocol is NOT ",(0,s.jsx)(n.code,{children:"h2"})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"HostSNI(`example.com`) || (HostSNI(`example.org`) && !ALPN(`h2`))\n"})}),"\n",(0,s.jsx)(n.h3,{id:"hostsni-and-hostsniregexp",children:"HostSNI and HostSNIRegexp"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"HostSNI"})," and ",(0,s.jsx)(n.code,{children:"HostSNIRegexp"})," matchers allow to match connections targeted to a given domain."]}),"\n",(0,s.jsxs)(n.p,{children:["These matchers do not support non-ASCII characters, use punycode encoded values (",(0,s.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc3492",children:"rfc 3492"}),") to match such domains."]}),"\n",(0,s.jsx)(n.p,{children:'!!! note "HostSNI & TLS"'}),"\n",(0,s.jsxs)(n.p,{children:["It is important to note that the Server Name Indication is an extension of the TLS protocol.\nHence, only TLS routers will be able to specify a domain name with that rule.\nHowever, there is one special use case for ",(0,s.jsx)(n.code,{children:"HostSNI"})," with non-TLS routers:\nwhen one wants a non-TLS router that matches all (non-TLS) requests,\none should use the specific ",(0,s.jsx)(n.code,{children:"HostSNI(`*`)"})," syntax."]}),"\n",(0,s.jsx)(n.h4,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.p,{children:"Match all connections:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="HostSNI"',children:"HostSNI(`*`)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="HostSNIRegexp"',children:"HostSNIRegexp(`^.*$`)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Match TCP connections sent to ",(0,s.jsx)(n.code,{children:"example.com"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"HostSNI(`example.com`)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Match TCP connections opened on any subdomain of ",(0,s.jsx)(n.code,{children:"example.com"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"HostSNIRegexp(`^.+\\.example\\.com$`)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"clientip",children:"ClientIP"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"ClientIP"})," matcher allows matching connections opened by a client with the given IP."]}),"\n",(0,s.jsx)(n.h4,{id:"examples-1",children:"Examples"}),"\n",(0,s.jsx)(n.p,{children:"Match connections opened by a given IP:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="IPv4"',children:"ClientIP(`10.76.105.11`)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="IPv6"',children:"ClientIP(`::1`)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Match connections coming from a given subnet:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="IPv4"',children:"ClientIP(`192.168.1.0/24`)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="IPv6"',children:"ClientIP(`fe80::/10`)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"alpn",children:"ALPN"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"ALPN"})," matcher allows matching connections the given protocol."]}),"\n",(0,s.jsxs)(n.p,{children:["It would be a security issue to let a user-defined router catch the response to\nan ACME TLS challenge previously initiated by Mesh.\nFor this reason, the ",(0,s.jsx)(n.code,{children:"ALPN"})," matcher is not allowed to match the ",(0,s.jsx)(n.code,{children:"ACME-TLS/1"}),"\nprotocol, and Mesh returns an error if this is attempted."]}),"\n",(0,s.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,s.jsxs)(n.p,{children:["Match connections using the ALPN protocol ",(0,s.jsx)(n.code,{children:"h2"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"ALPN(`h2`)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"priority-calculation",children:"Priority Calculation"}),"\n",(0,s.jsx)(n.p,{children:'???+ info "How default priorities are computed"'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="Structured (YAML)"',children:'  tcp:\n    routers:\n      Router-1:\n        rule: "ClientIP(`192.168.0.12`)"\n        entryPoints:\n        - "web"\n        service: service-1\n        priority: 2\n      Router-2:\n        rule: "ClientIP(`192.168.0.0/24`)"\n        entryPoints:\n        - "web"\n        priority: 1\n        service: service-2\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",metastring:'tab="Structured (TOML)"',children:'[tcp.routers]\n  [tcp.routers.Router-1]\n    rule = "ClientIP(`192.168.0.12`)"\n    entryPoints = ["web"]\n    service = "service-1"\n    priority = 2\n  [tcp.routers.Router-2]\n    rule = "ClientIP(`192.168.0.0/24`)"\n    entryPoints = ["web"]\n    priority = 1\n    service = "service-2\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'tab="Labels"',children:'   labels:\n    - "Mesh.tcp.routers.Router-1.rule="ClientIP(`192.168.0.12`)"\n    - "Mesh.tcp.routers.Router-1.entryPoints=web"\n    - "Mesh.tcp.routers.Router-1.service=service-1"\n    - "Mesh.tcp.routers.Router-1.priority=2"\n    - "Mesh.tcp.routers.Router-2.rule="ClientIP(`192.168.0.0/24`)"\n    - "Mesh.tcp.routers.Router-2.entryPoints=web"\n    - "Mesh.tcp.routers.Router-2.service=service-2"\n    - "Mesh.tcp.routers.Router-2.priority=1"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'tab="Tags"',children:'  {\n    //...\n    "Tags": [\n      "Mesh.tcp.routers.Router-1.rule=ClientIP(`192.168.0.12`)",\n      "Mesh.tcp.routers.Router-1.entryPoints=web",\n      "Mesh.tcp.routers.Router-1.service=service-1",\n      "Mesh.tcp.routers.Router-1.priority=2",\n      "Mesh.tcp.routers.Router-2.rule=ClientIP(`192.168.0.0/24`)",\n      "Mesh.tcp.routers.Router-2.entryPoints=web",\n      "Mesh.tcp.routers.Router-2.service=service-2",\n      "Mesh.tcp.routers.Router-2.priority=1"\n    ]\n  }\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In the example above, the priority is configured so that ",(0,s.jsx)(n.code,{children:"Router-1"})," will handle requests from ",(0,s.jsx)(n.code,{children:"192.168.0.12"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["To avoid path overlap, routes are sorted, by default, in descending order using rules length.\nThe priority is directly equal to the length of the rule, and so the longest length has the highest priority.\nA value of ",(0,s.jsx)(n.code,{children:"0"})," for the priority is ignored: ",(0,s.jsx)(n.code,{children:"priority: 0"})," means that the default rules length sorting is used."]}),"\n",(0,s.jsx)(n.p,{children:"Mesh reserves a range of priorities for its internal routers, the maximum user-defined router priority value is:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"(MaxInt32 - 1000)"})," for 32-bit platforms,"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"(MaxInt64 - 1000)"})," for 64-bit platforms."]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>c});var t=r(6540);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);