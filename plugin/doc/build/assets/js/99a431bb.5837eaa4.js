"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[2158],{8453:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>o});var i=t(6540);const s={},n=i.createContext(s);function a(e){const r=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(n.Provider,{value:r},e.children)}},9352:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"middlewares/http/stripprefixregex","title":"Mesh StripPrefixRegex Documentation","description":"In Mesh Proxy\'s HTTP middleware, StripPrefixRegex removes prefixes from paths before forwarding requests, using regex. Read the technical documentation.","source":"@site/docs/middlewares/http/stripprefixregex.md","sourceDirName":"middlewares/http","slug":"/middlewares/http/stripprefixregex","permalink":"/doc/docs/middlewares/http/stripprefixregex","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/middlewares/http/stripprefixregex.md","tags":[],"version":"current","frontMatter":{"title":"Mesh StripPrefixRegex Documentation","description":"In Mesh Proxy\'s HTTP middleware, StripPrefixRegex removes prefixes from paths before forwarding requests, using regex. Read the technical documentation."},"sidebar":"tutorialSidebar","previous":{"title":"Mesh StripPrefix Documentation","permalink":"/doc/docs/middlewares/http/stripprefix"},"next":{"title":"Mesh Proxy Middleware Overview","permalink":"/doc/docs/middlewares/overview"}}');var s=t(4848),n=t(8453);const a={title:"Mesh StripPrefixRegex Documentation",description:"In Mesh Proxy's HTTP middleware, StripPrefixRegex removes prefixes from paths before forwarding requests, using regex. Read the technical documentation."},o="StripPrefixRegex",d={},c=[{value:"Configuration Examples",id:"configuration-examples",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"General",id:"general",level:3},{value:"<code>regex</code>",id:"regex",level:3}];function l(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"stripprefixregex",children:"StripPrefixRegex"})}),"\n",(0,s.jsx)(r.p,{children:"Removing Prefixes From the Path Before Forwarding the Request (Using a Regex)"}),"\n",(0,s.jsx)(r.p,{children:"Remove the matching prefixes from the URL path."}),"\n",(0,s.jsx)(r.h2,{id:"configuration-examples",children:"Configuration Examples"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-yaml",metastring:'tab="Docker & Swarm"',children:'labels:\n  - "Mesh.http.middlewares.test-stripprefixregex.stripprefixregex.regex=/foo/[a-z0-9]+/[0-9]+/"\n'})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-yaml",metastring:'tab="Kubernetes"',children:'apiVersion: Mesh.io/v1alpha1\nkind: Middleware\nmetadata:\n  name: test-stripprefixregex\nspec:\n  stripPrefixRegex:\n    regex:\n      - "/foo/[a-z0-9]+/[0-9]+/"\n'})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-yaml",metastring:'tab="Consul Catalog"',children:'- "Mesh.http.middlewares.test-stripprefixregex.stripprefixregex.regex=/foo/[a-z0-9]+/[0-9]+/"\n'})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'http:\n  middlewares:\n    test-stripprefixregex:\n      stripPrefixRegex:\n        regex:\n          - "/foo/[a-z0-9]+/[0-9]+/"\n'})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[http.middlewares]\n  [http.middlewares.test-stripprefixregex.stripPrefixRegex]\n    regex = ["/foo/[a-z0-9]+/[0-9]+/"]\n'})}),"\n",(0,s.jsx)(r.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,s.jsx)(r.h3,{id:"general",children:"General"}),"\n",(0,s.jsxs)(r.p,{children:["The StripPrefixRegex middleware strips the matching path prefix and stores it in a ",(0,s.jsx)(r.code,{children:"X-Forwarded-Prefix"})," header."]}),"\n",(0,s.jsx)(r.p,{children:"!!! tip"}),"\n",(0,s.jsxs)(r.p,{children:["Use a ",(0,s.jsx)(r.code,{children:"stripPrefixRegex"})," middleware if your backend listens on the root path (",(0,s.jsx)(r.code,{children:"/"}),") but should be exposed on a specific prefix."]}),"\n",(0,s.jsx)(r.h3,{id:"regex",children:(0,s.jsx)(r.code,{children:"regex"})}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"regex"})," option is the regular expression to match the path prefix from the request URL."]}),"\n",(0,s.jsxs)(r.p,{children:["For instance, ",(0,s.jsx)(r.code,{children:"/products"})," also matches ",(0,s.jsx)(r.code,{children:"/products/shoes"})," and ",(0,s.jsx)(r.code,{children:"/products/shirts"}),"."]}),"\n",(0,s.jsxs)(r.p,{children:["If your backend is serving assets (e.g., images or JavaScript files), it can use the ",(0,s.jsx)(r.code,{children:"X-Forwarded-Prefix"})," header to properly construct relative URLs.\nUsing the previous example, the backend should return ",(0,s.jsx)(r.code,{children:"/products/shoes/image.png"})," (and not ",(0,s.jsx)(r.code,{children:"/images.png"}),", which Mesh would likely not be able to associate with the same backend)."]}),"\n",(0,s.jsx)(r.p,{children:"!!! tip"}),"\n",(0,s.jsxs)(r.p,{children:["Regular expressions and replacements can be tested using online tools such as ",(0,s.jsx)(r.a,{href:"https://play.golang.org/p/mWU9p-wk2ru",children:"Go Playground"})," or the ",(0,s.jsx)(r.a,{href:"https://regex101.com/r/58sIgx/2",children:"Regex101"}),"."]}),"\n",(0,s.jsxs)(r.p,{children:["When defining a regular expression within YAML, any escaped character needs to be escaped twice: ",(0,s.jsx)(r.code,{children:"example\\.com"})," needs to be written as ",(0,s.jsx)(r.code,{children:"example\\\\.com"}),"."]})]})}function p(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);