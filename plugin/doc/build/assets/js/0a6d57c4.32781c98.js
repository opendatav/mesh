"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[2365],{2017:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>r});const i=JSON.parse('{"id":"middlewares/tcp/inflightconn","title":"InFlightConn","description":"Limiting the Number of Simultaneous connections.","source":"@site/docs/middlewares/tcp/inflightconn.md","sourceDirName":"middlewares/tcp","slug":"/middlewares/tcp/inflightconn","permalink":"/doc/docs/middlewares/tcp/inflightconn","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/middlewares/tcp/inflightconn.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Mesh Proxy Middleware Overview","permalink":"/doc/docs/middlewares/overview"},"next":{"title":"Mesh TCP Middlewares IPAllowList","permalink":"/doc/docs/middlewares/tcp/ipallowlist"}}');var o=t(4848),s=t(8453);const a={},c="InFlightConn",l={},r=[{value:"Configuration Examples",id:"configuration-examples",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"<code>amount</code>",id:"amount",level:3}];function d(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"inflightconn",children:"InFlightConn"})}),"\n",(0,o.jsx)(e.p,{children:"Limiting the Number of Simultaneous connections."}),"\n",(0,o.jsx)(e.p,{children:"To proactively prevent services from being overwhelmed with high load, the number of allowed simultaneous connections by IP can be limited."}),"\n",(0,o.jsx)(e.h2,{id:"configuration-examples",children:"Configuration Examples"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",metastring:'tab="Docker & Swarm"',children:'labels:\n  - "Mesh.tcp.middlewares.test-inflightconn.inflightconn.amount=10"\n'})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",metastring:'tab="Kubernetes"',children:"apiVersion: Mesh.io/v1alpha1\nkind: MiddlewareTCP\nmetadata:\n  name: test-inflightconn\nspec:\n  inFlightConn:\n    amount: 10\n"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",metastring:'tab="Consul Catalog"',children:'# Limiting to 10 simultaneous connections\n- "Mesh.tcp.middlewares.test-inflightconn.inflightconn.amount=10"\n'})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"# Limiting to 10 simultaneous connections.\ntcp:\n  middlewares:\n    test-inflightconn:\n      inFlightConn:\n        amount: 10\n"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"# Limiting to 10 simultaneous connections\n[tcp.middlewares]\n  [tcp.middlewares.test-inflightconn.inFlightConn]\n    amount = 10\n"})}),"\n",(0,o.jsx)(e.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,o.jsx)(e.h3,{id:"amount",children:(0,o.jsx)(e.code,{children:"amount"})}),"\n",(0,o.jsxs)(e.p,{children:["The ",(0,o.jsx)(e.code,{children:"amount"})," option defines the maximum amount of allowed simultaneous connections.\nThe middleware closes the connection if there are already ",(0,o.jsx)(e.code,{children:"amount"})," connections opened."]})]})}function m(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>c});var i=t(6540);const o={},s=i.createContext(o);function a(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:a(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);