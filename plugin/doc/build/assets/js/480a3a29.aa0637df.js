"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[3993],{8453:(e,t,s)=>{s.d(t,{R:()=>l,x:()=>c});var r=s(6540);const n={},i=r.createContext(n);function l(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),r.createElement(i.Provider,{value:t},e.children)}},9769:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>x,frontMatter:()=>l,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"reference/routing-configuration/kubernetes/crd/http/traefikservice","title":"Mesh Kubernetes Services Documentation","description":"Learn how to configure routing and load balancing in Mesh Proxy to reach Services, which handle incoming requests. Read the technical documentation.","source":"@site/docs/reference/routing-configuration/kubernetes/crd/http/traefikservice.md","sourceDirName":"reference/routing-configuration/kubernetes/crd/http","slug":"/reference/routing-configuration/kubernetes/crd/http/traefikservice","permalink":"/doc/docs/reference/routing-configuration/kubernetes/crd/http/traefikservice","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/reference/routing-configuration/kubernetes/crd/http/traefikservice.md","tags":[],"version":"current","frontMatter":{"title":"Mesh Kubernetes Services Documentation","description":"Learn how to configure routing and load balancing in Mesh Proxy to reach Services, which handle incoming requests. Read the technical documentation."},"sidebar":"tutorialSidebar","previous":{"title":"TLSStore","permalink":"/doc/docs/reference/routing-configuration/kubernetes/crd/http/tlsstore"},"next":{"title":"Kubernetes IngressRouteTCP","permalink":"/doc/docs/reference/routing-configuration/kubernetes/crd/tcp/ingressroutetcp"}}');var n=s(4848),i=s(8453);const l={title:"Mesh Kubernetes Services Documentation",description:"Learn how to configure routing and load balancing in Mesh Proxy to reach Services, which handle incoming requests. Read the technical documentation."},c=void 0,d={},h=[{value:"Weighted Round Robin",id:"weighted-round-robin",level:2},{value:"Configuration Example",id:"configuration-example",level:3},{value:"Configuration Options",id:"configuration-options",level:3},{value:"Stickiness on multiple levels",id:"stickiness-on-multiple-levels",level:4},{value:"Mirroring",id:"mirroring",level:2},{value:"Configuration Example",id:"configuration-example-1",level:3},{value:"Configuration Options",id:"configuration-options-1",level:3}];function o(e){const t={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["A ",(0,n.jsx)(t.code,{children:"MeshService"})," is a custom resource that sits on top of the Kubernetes Services. It enables advanced load-balancing features such as a ",(0,n.jsx)(t.a,{href:"#weighted-round-robin",children:"Weighted Round Robin"})," load balancing or a ",(0,n.jsx)(t.a,{href:"#mirroring",children:"Mirroring"})," between your Kubernetes Services."]}),"\n",(0,n.jsxs)(t.p,{children:["Services configure how to reach the actual endpoints that will eventually handle incoming requests. In Mesh, the target service can be either a standard ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"}),"\u2014which exposes a pod\u2014or a MeshService. The latter allows you to combine advanced load-balancing options like:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"#weighted-round-robin",children:"Weighted Round Robin load balancing"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"#mirroring",children:"Mirroring"}),"."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"weighted-round-robin",children:"Weighted Round Robin"}),"\n",(0,n.jsxs)(t.p,{children:["The WRR is able to load balance the requests between multiple services based on weights. The WRR ",(0,n.jsx)(t.code,{children:"MeshService"})," allows you to load balance the traffic between Kubernetes Services and other instances of ",(0,n.jsx)(t.code,{children:"MeshService"})," (another WRR service -, or a mirroring service)."]}),"\n",(0,n.jsx)(t.h3,{id:"configuration-example",children:"Configuration Example"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="IngressRoute"',children:"apiVersion: Mesh.io/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: test-name\n  namespace: apps\n\nspec:\n  entryPoints:\n  - websecure\n  routes:\n  - match: Host(`example.com`) && PathPrefix(`/foo`)\n    kind: Rule\n    services:\n    # Set a WRR MeshService\n    - name: wrr1\n      namespace: apps\n      kind: MeshService\n  tls:\n    # Add a TLS certificate from a Kubernetes Secret\n    secretName: supersecret\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="MeshService WRR Level#1"',children:"apiVersion: Mesh.io/v1alpha1\nkind: MeshService\nmetadata:\n  name: wrr1\n  namespace: apps\n\nspec:\n  weighted:\n    services:\n        # Kubernetes Service\n      - name: svc1\n        namespace: apps\n        port: 80\n        weight: 1\n        # Second level WRR service\n      - name: wrr2\n        namespace: apps\n        kind: MeshService\n        weight: 1\n        # Mirroring service\n        # The service is described in the Mirroring example\n      - name: mirror1\n        namespace: apps\n        kind: MeshService\n        weight: 1\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="MeshService WRR Level#2"',children:"apiVersion: Mesh.io/v1alpha1\nkind: MeshService\nmetadata:\n  name: wrr2\n  namespace: apps\n\nspec:\n  weighted:\n    services:\n      # Kubernetes Service\n      - name: svc2\n        namespace: apps\n        port: 80\n        weight: 1\n      # Kubernetes Service\n      - name: svc3\n        namespace: apps\n        port: 80\n        weight: 1\n\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="Kubernetes Services"',children:"apiVersion: v1\nkind: Service\nmetadata:\n  name: svc1\n  namespace: apps\n\nspec:\n  ports:\n  - name: http\n      port: 80\n  selector:\n    app: Meshlabs\n    task: app1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: svc2\n  namespace: apps\n\nspec:\n  ports:\n  - name: http\n    port: 80\n  selector:\n    app: Meshlabs\n    task: app2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: svc3\n  namespace: apps\n\nspec:\n  ports:\n  - name: http\n    port: 80\n  selector:\n    app: Meshlabs\n    task: app3\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="Secret"',children:"apiVersion: v1\nkind: Secret\nmetadata:\n  name: supersecret\n  namespace: apps\n\ndata:\n  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=\n  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=\n"})}),"\n",(0,n.jsx)(t.h3,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Field"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Default"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Required"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"services"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["List of any combination of MeshService and ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"}),". ",(0,n.jsx)("br",{}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"}}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"kind"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Kind of the service targeted.",(0,n.jsx)("br",{}),"Two values allowed:",(0,n.jsx)("br",{}),"- ",(0,n.jsx)(t.strong,{children:"Service"}),": Kubernetes Service",(0,n.jsx)("br",{})," - ",(0,n.jsx)(t.strong,{children:"MeshService"}),": Mesh Service."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"name"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Service name.",(0,n.jsx)("br",{}),"The character ",(0,n.jsx)(t.code,{children:"@"})," is not authorized."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"namespace"})]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Service namespace."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"port"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Service port (number or port name).",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"responseForwarding."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"flushInterval"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Interval, in milliseconds, in between flushes to the client while copying the response body.",(0,n.jsx)("br",{}),"A negative value means to flush immediately after each write to the client.",(0,n.jsx)("br",{}),"This configuration is ignored when a response is a streaming response; for such responses, writes are flushed to the client immediately.",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"100ms"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"scheme"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Scheme to use for the request to the upstream Kubernetes Service.",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:['"http"',(0,n.jsx)("br",{}),'"https" if ',(0,n.jsx)(t.code,{children:"port"})," is 443 or contains the string ",(0,n.jsx)(t.em,{children:"https"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"serversTransport"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Name of ServersTransport resource to use to configure the transport between Mesh and your servers.",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"passHostHeader"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Forward client Host header to server.",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"true"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.scheme"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Server URL scheme for the health check endpoint.",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.code,{children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.mode"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Health check mode.",(0,n.jsx)("br",{})," If defined to grpc, will use the gRPC health check protocol to probe the server.",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.code,{children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'"http"'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.path"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Server URL path for the health check endpoint.",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.code,{children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.interval"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Frequency of the health check calls for healthy targets.",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type [ExternalName]",(0,n.jsx)(t.code,{children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'"100ms"'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.unhealthyInterval"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Frequency of the health check calls for unhealthy targets.",(0,n.jsx)("br",{}),"When not defined, it defaults to the ",(0,n.jsx)(t.code,{children:"interval"})," value.",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type [ExternalName]",(0,n.jsx)(t.code,{children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'"100ms"'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.method"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["HTTP method for the health check endpoint.",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.code,{children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'"GET"'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.status"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Expected HTTP status code of the response to the health check request.",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ExternalName.",(0,n.jsx)("br",{}),"If not set, expect a status between 200 and 399.",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"}}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.port"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["URL port for the health check endpoint.",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.code,{children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"}}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.timeout"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Maximum duration to wait before considering the server unhealthy.",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.code,{children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'"5s"'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.hostname"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Value in the Host header of the health check request.",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.code,{children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"followRedirect"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Follow the redirections during the healtchcheck.",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.code,{children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"true"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.headers"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Map of header to send to the health check endpoint",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.code,{children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"}}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"sticky."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"cookie.name"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Name of the cookie used for the stickiness.",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Abbreviation of a sha1",(0,n.jsx)("br",{}),"(ex: ",(0,n.jsx)(t.code,{children:"_1d52e"}),")."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"sticky."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"cookie.httpOnly"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Allow the cookie can be accessed by client-side APIs, such as JavaScript.",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"sticky."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"cookie.secure"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Allow the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"sticky."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"cookie.sameSite"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite",children:"SameSite"})," policy.",(0,n.jsx)("br",{}),"Allowed values:",(0,n.jsx)("br",{}),"-",(0,n.jsx)(t.code,{children:"none"}),(0,n.jsx)("br",{}),"-",(0,n.jsx)(t.code,{children:"lax"}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"strict"}),(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"sticky."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"cookie.maxAge"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Number of seconds until the cookie expires.",(0,n.jsx)("br",{}),"Negative number, the cookie expires immediately.",(0,n.jsx)("br",{}),"0, the cookie never expires.",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"0"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"strategy"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Load balancing strategy between the servers.",(0,n.jsx)("br",{}),"RoundRobin is the only supported value yet.",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'"RoundRobin"'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"weight"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Service weight.",(0,n.jsx)("br",{}),"To use only to refer to WRR MeshService"]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"nativeLB"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Allow using the Kubernetes Service load balancing between the pods instead of the one provided by Mesh.",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"services[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"nodePortLB"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Use the nodePort IP address when the service type is NodePort.",(0,n.jsx)("br",{}),"It allows services to be reachable when Mesh runs externally from the Kubernetes cluster but within the same network of the nodes.",(0,n.jsx)("br",{}),"Evaluated only if the kind is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"sticky."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"cookie.name"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Name of the cookie used for the stickiness at the WRR service level.",(0,n.jsx)("br",{}),"When sticky sessions are enabled, a ",(0,n.jsx)(t.code,{children:"Set-Cookie"})," header is set on the initial response to let the client know which server handles the first response.",(0,n.jsx)("br",{}),"On subsequent requests, to keep the session alive with the same server, the client should send the cookie with the value set.",(0,n.jsx)("br",{}),"If the server pecified in the cookie becomes unhealthy, the request will be forwarded to a new server (and the cookie will keep track of the new server).",(0,n.jsx)("br",{}),"More information about WRR stickiness ",(0,n.jsx)(t.a,{href:"#stickiness-on-multiple-levels",children:"here"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Abbreviation of a sha1",(0,n.jsx)("br",{}),"(ex: ",(0,n.jsx)(t.code,{children:"_1d52e"}),")."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"sticky."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"cookie.httpOnly"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Allow the cookie used for the stickiness at the WRR service level to be accessed by client-side APIs, such as JavaScript.",(0,n.jsx)("br",{}),"More information about WRR stickiness ",(0,n.jsx)(t.a,{href:"#stickiness-on-multiple-levels",children:"here"})]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"sticky."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"cookie.secure"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Allow the cookie used for the stickiness at the WRR service level to be only transmitted over an encrypted connection (i.e. HTTPS).",(0,n.jsx)("br",{}),"More information about WRR stickiness ",(0,n.jsx)(t.a,{href:"#stickiness-on-multiple-levels",children:"here"})]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"sticky."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"cookie.sameSite"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite",children:"SameSite"})," policy for the cookie used for the stickiness at the WRR service level.",(0,n.jsx)("br",{}),"Allowed values:",(0,n.jsx)("br",{}),"-",(0,n.jsx)(t.code,{children:"none"}),(0,n.jsx)("br",{}),"-",(0,n.jsx)(t.code,{children:"lax"}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"strict"}),(0,n.jsx)("br",{}),"More information about WRR stickiness ",(0,n.jsx)(t.a,{href:"#stickiness-on-multiple-levels",children:"here"})]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"sticky."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"cookie.maxAge"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Number of seconds until the cookie used for the stickiness at the WRR service level expires.",(0,n.jsx)("br",{}),"Negative number, the cookie expires immediately.",(0,n.jsx)("br",{}),"0, the cookie never expires."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"0"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]})]})]}),"\n",(0,n.jsx)(t.h4,{id:"stickiness-on-multiple-levels",children:"Stickiness on multiple levels"}),"\n",(0,n.jsx)(t.p,{children:'When chaining or mixing load-balancers (e.g. a load-balancer of servers is one of the "children" of a load-balancer of services),\nfor stickiness to work all the way, the option needs to be specified at all required levels.\nWhich means the client needs to send a cookie with as many key/value pairs as there are sticky levels.'}),"\n",(0,n.jsx)(t.p,{children:"Sticky sessions, for stickiness to work all the way, must be specified at each load-balancing level."}),"\n",(0,n.jsxs)(t.p,{children:["For instance, in the example below, there is a first level of load-balancing because there is a (Weighted Round Robin) load-balancing of the two ",(0,n.jsx)(t.code,{children:"whoami"})," services,\nand there is a second level because each whoami service is a ",(0,n.jsx)(t.code,{children:"replicaset"})," and is thus handled as a load-balancer of servers."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="IngressRoute"',children:"apiVersion: Mesh.io/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: ingressroutebar\n  namespace: apps\n\nspec:\n  entryPoints:\n  - web\n  routes:\n  - match: Host(`example.com`) && PathPrefix(`/foo`)\n    kind: Rule\n    services:\n    - name: wrr1\n      namespace: apps\n      kind: MeshService\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="MeshService WRR with 2 level of stickiness"',children:"apiVersion: Mesh.io/v1alpha1\nkind: MeshService\nmetadata:\n  name: wrr1\n  namespace: apps\n  \nspec:\n  weighted:\n    services:\n    - name: whoami1\n      kind: Service\n      port: 80\n      weight: 1\n      # Stickiness level2 (on the Kubernetes service)\n      sticky:\n        cookie:\n        name: lvl2\n    - name: whoami2\n      kind: Service\n      weight: 1\n      port: 80\n      # Stickiness level2 (on the Kubernetes service)\n      sticky:\n        cookie:\n        name: lvl2\n  # Stickiness level2 (on the WRR service)\n  sticky:\n    cookie:\n    name: lvl1\n"})}),"\n",(0,n.jsx)(t.p,{children:"In the example above, to keep a session open with the same server, the client would then need to specify the two levels within the cookie for each request, e.g. with curl:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'# Assuming `10.42.0.6` is the IP address of one of the replicas (a pod then) of the `whoami1` service.\ncurl -H Host:example.com -b "lvl1=default-whoami1-80; lvl2=http://10.42.0.6:80" http://localhost:8000/foo\n'})}),"\n",(0,n.jsx)(t.h2,{id:"mirroring",children:"Mirroring"}),"\n",(0,n.jsx)(t.p,{children:"The mirroring is able to mirror requests sent to a service to other services."}),"\n",(0,n.jsx)(t.p,{children:"A mirroring service allows you to send the trafiic to many services together:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["The ",(0,n.jsx)(t.strong,{children:"main"})," service receives 100% of the traffic,"]}),"\n",(0,n.jsxs)(t.li,{children:["The ",(0,n.jsx)(t.strong,{children:"mirror"})," services receive a percentage of the traffic."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["For example, to upgrade the version of your application. You can set the service that targets current version as the ",(0,n.jsx)(t.strong,{children:"main"})," service, and the service of the new version a ",(0,n.jsx)(t.strong,{children:"mirror"})," service.\nThus you can start testing the behavior of the new version keeping the current version reachable."]}),"\n",(0,n.jsxs)(t.p,{children:["The mirroring ",(0,n.jsx)(t.code,{children:"MeshService"})," allows you to reference Kubernetes Services and other instances of ",(0,n.jsx)(t.code,{children:"MeshService"})," (another WRR service -, or a mirroring service)."]}),"\n",(0,n.jsxs)(t.p,{children:["Please note that by default the whole request is buffered in memory while it is being mirrored.\nSee the ",(0,n.jsx)(t.code,{children:"maxBodySize"})," option in the example below for how to modify this behavior."]}),"\n",(0,n.jsx)(t.h3,{id:"configuration-example-1",children:"Configuration Example"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="IngressRoute"',children:"apiVersion: Mesh.io/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: ingressroutebar\n  namespace: default\n\nspec:\n  entryPoints:\n    - web\n  routes:\n  - match: Host(`example.com`) && PathPrefix(`/foo`)\n    kind: Rule\n    services:\n    - name: mirror1\n      namespace: default\n      kind: MeshService\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="Mirroring from a Kubernetes Service"',children:"# Mirroring from a k8s Service\napiVersion: Mesh.io/v1alpha1\nkind: MeshService\nmetadata:\n  name: mirror1\n  namespace: default\n\nspec:\n  mirroring:\n    name: svc1                      # svc1 receives 100% of the traffic\n    port: 80\n    mirrors:\n      - name: svc2                  # svc2 receives a copy of 20% of this traffic\n        port: 80\n        percent: 20\n      - name: svc3                  # svc3 receives a copy of 15% of this traffic\n        kind: MeshService\n        percent: 15\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="Mirroring from a MeshService (WRR)"',children:"# Mirroring from a Mesh Service\napiVersion: Mesh.io/v1alpha1\nkind: MeshService\nmetadata:\n  name: mirror1\n  namespace: default\n\nspec:\n  mirroring:\n    name: wrr1                      # wrr1 receives 100% of the traffic\n    kind: MeshService\n    mirrors:\n      - name: svc2                  # svc2 receives a copy of 20% of this traffic\n        port: 80\n        percent: 20\n      - name: svc3                  # svc3 receives a copy of 10% of this traffic\n        kind: MeshService\n        percent: 10\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="Kubernetes Services"',children:"apiVersion: v1\nkind: Service\nmetadata:\n  name: svc1\n  namespace: default\n\nspec:\n  ports:\n    - name: http\n      port: 80\n  selector:\n    app: Meshlabs\n    task: app1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: svc2\n  namespace: default\n\nspec:\n  ports:\n    - name: http\n      port: 80\n  selector:\n    app: Meshlabs\n    task: app2\n"})}),"\n",(0,n.jsx)(t.h3,{id:"configuration-options-1",children:"Configuration Options"}),"\n",(0,n.jsx)(t.p,{children:'!!!note "Main and mirrored services"'}),"\n",(0,n.jsx)(t.p,{children:"The main service properties are set as the option root level."}),"\n",(0,n.jsxs)(t.p,{children:["The mirrored services properties are set in the ",(0,n.jsx)(t.code,{children:"mirrors"})," list."]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Field"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Default"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Required"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"kind"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Kind of the main service.",(0,n.jsx)("br",{}),"Two values allowed:",(0,n.jsx)("br",{}),"- ",(0,n.jsx)(t.strong,{children:"Service"}),": Kubernetes Service",(0,n.jsx)("br",{}),"- ",(0,n.jsx)(t.strong,{children:"MeshService"}),": Mesh Service.",(0,n.jsx)("br",{}),"More information ",(0,n.jsx)(t.a,{href:"#services",children:"here"})]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"name"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Main service name.",(0,n.jsx)("br",{}),"The character ",(0,n.jsx)(t.code,{children:"@"})," is not authorized."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"namespace"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Main service namespace.",(0,n.jsx)("br",{}),"More information ",(0,n.jsx)(t.a,{href:"#services",children:"here"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"port"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Main service port (number or port name).",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"responseForwarding."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"flushInterval"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Interval, in milliseconds, in between flushes to the client while copying the response body.",(0,n.jsx)("br",{}),"A negative value means to flush immediately after each write to the client.",(0,n.jsx)("br",{}),"This configuration is ignored when a response is a streaming response; for such responses, writes are flushed to the client immediately.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"100ms"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"scheme"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Scheme to use for the request to the upstream Kubernetes Service.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:['"http"',(0,n.jsx)("br",{}),'"https" if ',(0,n.jsx)(t.code,{children:"port"})," is 443 or contains the string ",(0,n.jsx)(t.em,{children:"https"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"serversTransport"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Name of ServersTransport resource to use to configure the transport between Mesh and the main service's servers.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"passHostHeader"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Forward client Host header to main service's server.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"true"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"healthCheck.scheme"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Server URL scheme for the health check endpoint.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"healthCheck.mode"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Health check mode.",(0,n.jsx)("br",{})," If defined to grpc, will use the gRPC health check protocol to probe the server.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'"http"'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"healthCheck.path"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Server URL path for the health check endpoint.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"healthCheck.interval"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Frequency of the health check calls for healthy targets.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'"100ms"'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"healthCheck.unhealthyInterval"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Frequency of the health check calls for unhealthy targets.",(0,n.jsx)("br",{}),"When not defined, it defaults to the ",(0,n.jsx)(t.code,{children:"interval"})," value.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'"100ms"'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"healthCheck.method"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["HTTP method for the health check endpoint.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'"GET"'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"healthCheck.status"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Expected HTTP status code of the response to the health check request.",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ExternalName.",(0,n.jsx)("br",{}),"If not set, expect a status between 200 and 399.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"}}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"healthCheck.port"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["URL port for the health check endpoint.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"}}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"healthCheck.timeout"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Maximum duration to wait before considering the server unhealthy.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'"5s"'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"healthCheck.hostname"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Value in the Host header of the health check request.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"healthCheck."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"followRedirect"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Follow the redirections during the healtchcheck.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"true"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"healthCheck.headers"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Map of header to send to the health check endpoint",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"}}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"sticky."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"cookie.name"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Name of the cookie used for the stickiness on the main service.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Abbreviation of a sha1",(0,n.jsx)("br",{}),"(ex: ",(0,n.jsx)(t.code,{children:"_1d52e"}),")."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"sticky."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"cookie.httpOnly"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Allow the cookie can be accessed by client-side APIs, such as JavaScript.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"sticky."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"cookie.secure"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Allow the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"sticky."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"cookie.sameSite"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite",children:"SameSite"})," policy.",(0,n.jsx)("br",{}),"Allowed values:",(0,n.jsx)("br",{}),"-",(0,n.jsx)(t.code,{children:"none"}),(0,n.jsx)("br",{}),"-",(0,n.jsx)(t.code,{children:"lax"}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"strict"}),(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"sticky."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"cookie.maxAge"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Number of seconds until the cookie expires.",(0,n.jsx)("br",{}),"Negative number, the cookie expires immediately.",(0,n.jsx)("br",{}),"0, the cookie never expires.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"0"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"strategy"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Load balancing strategy between the main service's servers.",(0,n.jsx)("br",{}),"RoundRobin is the only supported value yet.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'"RoundRobin"'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"weight"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Service weight.",(0,n.jsx)("br",{}),"To use only to refer to WRR MeshService"]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"nativeLB"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Allow using the Kubernetes Service load balancing between the pods instead of the one provided by Mesh.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"nodePortLB"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Use the nodePort IP address when the service type is NodePort.",(0,n.jsx)("br",{}),"It allows services to be reachable when Mesh runs externally from the Kubernetes cluster but within the same network of the nodes.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the main service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"maxBodySize"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Maximum size allowed for the body of the request.",(0,n.jsx)("br",{}),"If the body is larger, the request is not mirrored.",(0,n.jsx)("br",{}),"-1 means unlimited size."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"-1"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"mirrors"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["List of mirrored services to target.",(0,n.jsx)("br",{})," It can be any combination of MeshService and ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"}),". ",(0,n.jsx)("br",{}),"More information ",(0,n.jsx)(t.a,{href:"#services",children:"here"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"}}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"kind"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Kind of the mirrored service targeted.",(0,n.jsx)("br",{}),"Two values allowed:",(0,n.jsx)("br",{}),"- ",(0,n.jsx)(t.strong,{children:"Service"}),": Kubernetes Service",(0,n.jsx)("br",{}),"- ",(0,n.jsx)(t.strong,{children:"MeshService"}),": Mesh Service.",(0,n.jsx)("br",{}),"More information ",(0,n.jsx)(t.a,{href:"#services",children:"here"})]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"name"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Mirrored service name.",(0,n.jsx)("br",{}),"The character ",(0,n.jsx)(t.code,{children:"@"})," is not authorized."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"namespace"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Mirrored service namespace.",(0,n.jsx)("br",{}),"More information ",(0,n.jsx)(t.a,{href:"#services",children:"here"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"port"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Mirrored service port (number or port name).",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"percent"})]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Part of the traffic to mirror in percent (from 0 to 100)"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"0"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"responseForwarding."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"flushInterval"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Interval, in milliseconds, in between flushes to the client while copying the response body.",(0,n.jsx)("br",{}),"A negative value means to flush immediately after each write to the client.",(0,n.jsx)("br",{}),"This configuration is ignored when a response is a streaming response; for such responses, writes are flushed to the client immediately.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"100ms"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"scheme"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Scheme to use for the request to the mirrored service.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:['"http"',(0,n.jsx)("br",{}),'"https" if ',(0,n.jsx)(t.code,{children:"port"})," is 443 or contains the string ",(0,n.jsx)(t.em,{children:"https"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"serversTransport"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Name of ServersTransport resource to use to configure the transport between Mesh and the mirrored service servers.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"passHostHeader"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Forward client Host header to the mirrored service servers.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"true"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.scheme"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Server URL scheme for the health check endpoint.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.mode"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Health check mode.",(0,n.jsx)("br",{})," If defined to grpc, will use the gRPC health check protocol to probe the server.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'"http"'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.path"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Server URL path for the health check endpoint.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.interval"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Frequency of the health check calls.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'"100ms"'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.unhealthyInterval"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Frequency of the health check calls for unhealthy targets.",(0,n.jsx)("br",{}),"When not defined, it defaults to the ",(0,n.jsx)(t.code,{children:"interval"})," value.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'"100ms"'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.method"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["HTTP method for the health check endpoint.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'"GET"'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.status"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Expected HTTP status code of the response to the health check request.",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ExternalName.",(0,n.jsx)("br",{}),"If not set, expect a status between 200 and 399.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"}}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.port"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["URL port for the health check endpoint.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"}}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.timeout"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Maximum duration to wait before considering the server unhealthy.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'"5s"'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.hostname"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Value in the Host header of the health check request.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"followRedirect"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Follow the redirections during the healtchcheck.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"true"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"healthCheck.headers"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Map of header to send to the health check endpoint",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),".",(0,n.jsx)("br",{}),"Only for ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Kubernetes service"})," of type ",(0,n.jsx)(t.a,{href:"#services",children:"ExternalName"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"}}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"sticky."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"cookie.name"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Name of the cookie used for the stickiness.",(0,n.jsx)("br",{}),"When sticky sessions are enabled, a ",(0,n.jsx)(t.code,{children:"Set-Cookie"})," header is set on the initial response to let the client know which server handles the first response.",(0,n.jsx)("br",{}),"On subsequent requests, to keep the session alive with the same server, the client should send the cookie with the value set.",(0,n.jsx)("br",{}),"If the server pecified in the cookie becomes unhealthy, the request will be forwarded to a new server (and the cookie will keep track of the new server).",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"sticky."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"cookie.httpOnly"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Allow the cookie can be accessed by client-side APIs, such as JavaScript.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"sticky."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"cookie.secure"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Allow the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"sticky."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"cookie.sameSite"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite",children:"SameSite"})," policy.",(0,n.jsx)("br",{}),"Allowed values:",(0,n.jsx)("br",{}),"-",(0,n.jsx)(t.code,{children:"none"}),(0,n.jsx)("br",{}),"-",(0,n.jsx)(t.code,{children:"lax"}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"strict"}),(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"sticky."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"cookie.maxAge"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Number of seconds until the cookie expires.",(0,n.jsx)("br",{}),"Negative number, the cookie expires immediately.",(0,n.jsx)("br",{}),"0, the cookie never expires.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"0"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"strategy"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Load balancing strategy between the servers.",(0,n.jsx)("br",{}),"RoundRobin is the only supported value yet.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'"RoundRobin"'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"weight"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Service weight.",(0,n.jsx)("br",{}),"To use only to refer to WRR MeshService"]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'""'}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"nativeLB"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Allow using the Kubernetes Service load balancing between the pods instead of the one provided by Mesh.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"mirrors[m]."}),(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:"nodePortLB"})]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Use the nodePort IP address when the service type is NodePort.",(0,n.jsx)("br",{}),"It allows services to be reachable when Mesh runs externally from the Kubernetes cluster but within the same network of the nodes.",(0,n.jsx)("br",{}),"Evaluated only if the kind of the mirrored service is ",(0,n.jsx)(t.strong,{children:"Service"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"mirrorBody"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Defines whether the request body should be mirrored."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"true"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]})]})]})]})}function x(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}}}]);