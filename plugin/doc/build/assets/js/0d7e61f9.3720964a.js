"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[3723],{8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>o});var i=n(6540);const s={},r=i.createContext(s);function l(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:t},e.children)}},9443:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>a,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"reference/routing-configuration/kubernetes/crd/http/tlsoption","title":"TLSOption","description":"TLS Options in Mesh Proxy","source":"@site/docs/reference/routing-configuration/kubernetes/crd/http/tlsoption.md","sourceDirName":"reference/routing-configuration/kubernetes/crd/http","slug":"/reference/routing-configuration/kubernetes/crd/http/tlsoption","permalink":"/doc/docs/reference/routing-configuration/kubernetes/crd/http/tlsoption","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/reference/routing-configuration/kubernetes/crd/http/tlsoption.md","tags":[],"version":"current","frontMatter":{"title":"TLSOption","description":"TLS Options in Mesh Proxy"},"sidebar":"tutorialSidebar","previous":{"title":"Kubernetes serversTransport","permalink":"/doc/docs/reference/routing-configuration/kubernetes/crd/http/serverstransport"},"next":{"title":"TLSStore","permalink":"/doc/docs/reference/routing-configuration/kubernetes/crd/http/tlsstore"}}');var s=n(4848),r=n(8453);const l={title:"TLSOption",description:"TLS Options in Mesh Proxy"},o=void 0,c={},d=[{value:"Configuration Example",id:"configuration-example",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Client Authentication (mTLS)",id:"client-authentication-mtls",level:3},{value:"Default TLS Option",id:"default-tls-option",level:3}];function h(e){const t={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"The TLS options allow you to configure some parameters of the TLS connection in Mesh."}),"\n",(0,s.jsxs)(t.p,{children:["Before creating ",(0,s.jsx)(t.code,{children:"TLSOption"})," objects or referencing TLS options in the ",(0,s.jsx)(t.a,{href:"/doc/docs/reference/routing-configuration/kubernetes/crd/http/ingressroute",children:(0,s.jsx)(t.code,{children:"IngressRoute"})})," / ",(0,s.jsx)(t.a,{href:"/doc/docs/reference/routing-configuration/kubernetes/crd/tcp/ingressroutetcp",children:(0,s.jsx)(t.code,{children:"IngressRouteTCP"})})," objects, you need to apply the ",(0,s.jsx)(t.a,{href:"https://doc.Mesh.io/Mesh/reference/dynamic-configuration/kubernetes-crd/#definitions",children:"Mesh Kubernetes CRDs"})," to your Kubernetes cluster."]}),"\n",(0,s.jsxs)(t.p,{children:['!!! tip "References and namespaces"\nIf the optional namespace attribute is not set, the configuration will be applied with the namespace of the ',(0,s.jsx)(t.code,{children:"IngressRoute"}),"/",(0,s.jsx)(t.code,{children:"IngressRouteTCP"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["Additionally, when the definition of the TLS option is from another provider, the cross-provider ",(0,s.jsx)(t.a,{href:"/doc/docs/reference/install-configuration/providers/overview#provider-namespace",children:"syntax"})," (",(0,s.jsx)(t.code,{children:"middlewarename@provider"}),") should be used to refer to the TLS option. Specifying a namespace attribute in this case would not make any sense, and will be ignored."]}),"\n",(0,s.jsx)(t.p,{children:'!!! important "TLSOption in Kubernetes"'}),"\n",(0,s.jsxs)(t.p,{children:["When using the ",(0,s.jsx)(t.code,{children:"TLSOption"})," resource in Kubernetes, one might setup a default set of options that,\nif not explicitly overwritten, should apply to all ingresses.",(0,s.jsx)(t.br,{}),"\n","To achieve that, you'll have to create a ",(0,s.jsx)(t.code,{children:"TLSOption"})," resource with the name ",(0,s.jsx)(t.code,{children:"default"}),".\nThere may exist only one ",(0,s.jsx)(t.code,{children:"TLSOption"})," with the name ",(0,s.jsx)(t.code,{children:"default"})," (across all namespaces) - otherwise they will be dropped.",(0,s.jsx)(t.br,{}),"\n","To explicitly use a different ",(0,s.jsx)(t.code,{children:"TLSOption"})," (and using the Kubernetes Ingress resources)\nyou'll have to add an annotation to the Ingress in the following form:\n",(0,s.jsx)(t.code,{children:"Mesh.ingress.kubernetes.io/router.tls.options: <resource-namespace>-<resource-name>@kubernetescrd"})]}),"\n",(0,s.jsx)(t.h2,{id:"configuration-example",children:"Configuration Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'tab="TLSOption"',children:"apiVersion: Mesh.io/v1alpha1\nkind: TLSOption\nmetadata:\n  name: mytlsoption\n  namespace: default\n\nspec:\n  minVersion: VersionTLS12\n  sniStrict: true\n  cipherSuites:\n    - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n    - TLS_RSA_WITH_AES_256_GCM_SHA384\n  clientAuth:\n    secretNames:\n      - secret-ca1\n      - secret-ca2\n    clientAuthType: VerifyClientCertIfGiven\n"})}),"\n",(0,s.jsx)(t.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Field"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Default"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Required"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"minVersion"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Minimum TLS version that is acceptable."}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:'"VersionTLS12"'}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"maxVersion"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Maximum TLS version that is acceptable.",(0,s.jsx)("br",{}),"We do not recommend setting this option to disable TLS 1.3."]}),(0,s.jsx)(t.td,{style:{textAlign:"left"}}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"cipherSuites"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["List of supported ",(0,s.jsx)(t.a,{href:"https://godoc.org/crypto/tls#pkg-constants",children:"cipher suites"})," for TLS versions up to TLS 1.2.",(0,s.jsx)("br",{}),(0,s.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc8446",children:"Cipher suites defined for TLS 1.2 and below cannot be used in TLS 1.3, and vice versa."}),(0,s.jsx)("br",{}),"With TLS 1.3, ",(0,s.jsx)(t.a,{href:"https://golang.org/doc/go1.12#tls_1_3",children:"the cipher suites are not configurable"})," (all supported cipher suites are safe in this case)."]}),(0,s.jsx)(t.td,{style:{textAlign:"left"}}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"curvePreferences"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["List of the elliptic curves references that will be used in an ECDHE handshake, in preference order.",(0,s.jsx)("br",{}),"Use curves names from ",(0,s.jsx)(t.a,{href:"https://godoc.org/crypto/tls#CurveID",children:(0,s.jsx)(t.code,{children:"crypto"})})," or the ",(0,s.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc8446#section-4.2.7",children:"RFC"}),".",(0,s.jsx)("br",{}),"See ",(0,s.jsx)(t.a,{href:"https://godoc.org/crypto/tls#CurveID",children:"CurveID"})," for more information."]}),(0,s.jsx)(t.td,{style:{textAlign:"left"}}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"clientAuth.secretNames"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Client Authentication (mTLS) option.",(0,s.jsx)("br",{}),"List of names of the referenced Kubernetes ",(0,s.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/configuration/secret/",children:"Secrets"})," (in TLSOption namespace).",(0,s.jsx)("br",{})," The secret must contain a certificate under either a ",(0,s.jsx)(t.code,{children:"tls.ca"})," or a ",(0,s.jsx)(t.code,{children:"ca.crt"})," key."]}),(0,s.jsx)(t.td,{style:{textAlign:"left"}}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"clientAuth.clientAuthType"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Client Authentication (mTLS) option.",(0,s.jsx)("br",{}),"Client authentication type to apply. Available values ",(0,s.jsx)(t.a,{href:"#client-authentication-mtls",children:"here"}),"."]}),(0,s.jsx)(t.td,{style:{textAlign:"left"}}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"sniStrict"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Allow rejecting connections from clients connections that do not specify a server_name extension.",(0,s.jsx)("br",{}),"The ",(0,s.jsx)(t.a,{href:"/doc/docs/reference/routing-configuration/http/tls/tls-certificates#default-certificate",children:"default certificate"})," is never served is the option is enabled."]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"alpnProtocols"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["List of supported application level protocols for the TLS handshake, in order of preference.",(0,s.jsx)("br",{}),"If the client supports ALPN, the selected protocol will be one from this list, and the connection will fail if there is no mutually supported protocol."]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:'"h2, http/1.1, acme-tls/1"'}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"disableSessiontTickets"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Allow disabling the use of session tickets, forcing every client to perform a full TLS handshake instead of resuming sessions."}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"No"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"client-authentication-mtls",children:"Client Authentication (mTLS)"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"clientAuth.clientAuthType"})," option governs the behaviour as follows:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"NoClientCert"}),": disregards any client certificate."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"RequestClientCert"}),": asks for a certificate but proceeds anyway if none is provided."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"RequireAnyClientCert"}),": requires a certificate but does not verify if it is signed by a CA listed in ",(0,s.jsx)(t.code,{children:"clientAuth.caFiles"})," or in ",(0,s.jsx)(t.code,{children:"clientAuth.secretNames"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"VerifyClientCertIfGiven"}),": if a certificate is provided, verifies if it is signed by a CA listed in ",(0,s.jsx)(t.code,{children:"clientAuth.caFiles"})," or in ",(0,s.jsx)(t.code,{children:"clientAuth.secretNames"}),". Otherwise proceeds without any certificate."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"RequireAndVerifyClientCert"}),": requires a certificate, which must be signed by a CA listed in ",(0,s.jsx)(t.code,{children:"clientAuth.caFiles"})," or in ",(0,s.jsx)(t.code,{children:"clientAuth.secretNames"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:['!!! note "CA Secret"\nThe CA secret must contain a base64 encoded certificate under either a ',(0,s.jsx)(t.code,{children:"tls.ca"})," or a ",(0,s.jsx)(t.code,{children:"ca.crt"})," key."]}),"\n",(0,s.jsx)(t.h3,{id:"default-tls-option",children:"Default TLS Option"}),"\n",(0,s.jsxs)(t.p,{children:["When no TLS options are specified in an ",(0,s.jsx)(t.code,{children:"IngressRoute"}),"/",(0,s.jsx)(t.code,{children:"IngressRouteTCP"}),", the ",(0,s.jsx)(t.code,{children:"default"})," option is used.\nThe default behavior is summed up in the table below:"]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Configuration"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Behavior"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["No ",(0,s.jsx)(t.code,{children:"default"})," TLS Option"]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Default internal set of TLS Options by default."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["One ",(0,s.jsx)(t.code,{children:"default"})," TLS Option"]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Custom TLS Options applied by default."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Many ",(0,s.jsx)(t.code,{children:"default"})," TLS Option"]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Error log + Default internal set of TLS Options by default."})]})]})]})]})}function a(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);