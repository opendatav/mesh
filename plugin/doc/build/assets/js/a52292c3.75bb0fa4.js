"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[4606],{8453:(e,t,s)=>{s.d(t,{R:()=>d,x:()=>r});var i=s(6540);const n={},l=i.createContext(n);function d(e){const t=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),i.createElement(l.Provider,{value:t},e.children)}},9383:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"middlewares/http/ipallowlist","title":"Mesh HTTP Middlewares IPAllowList","description":"Learn how to use IPAllowList in HTTP middleware for limiting clients to specific IPs in Mesh Proxy. Read the technical documentation.","source":"@site/docs/middlewares/http/ipallowlist.md","sourceDirName":"middlewares/http","slug":"/middlewares/http/ipallowlist","permalink":"/doc/docs/middlewares/http/ipallowlist","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/middlewares/http/ipallowlist.md","tags":[],"version":"current","frontMatter":{"title":"Mesh HTTP Middlewares IPAllowList","description":"Learn how to use IPAllowList in HTTP middleware for limiting clients to specific IPs in Mesh Proxy. Read the technical documentation."},"sidebar":"tutorialSidebar","previous":{"title":"Mesh InFlightReq Documentation","permalink":"/doc/docs/middlewares/http/inflightreq"},"next":{"title":"Mesh HTTP Middlewares IPWhiteList","permalink":"/doc/docs/middlewares/http/ipwhitelist"}}');var n=s(4848),l=s(8453);const d={title:"Mesh HTTP Middlewares IPAllowList",description:"Learn how to use IPAllowList in HTTP middleware for limiting clients to specific IPs in Mesh Proxy. Read the technical documentation."},r="IPAllowList",a={},c=[{value:"Configuration Examples",id:"configuration-examples",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"<code>sourceRange</code>",id:"sourcerange",level:3},{value:"<code>ipStrategy</code>",id:"ipstrategy",level:3},{value:"<code>ipStrategy.depth</code>",id:"ipstrategydepth",level:4},{value:"<code>ipStrategy.excludedIPs</code>",id:"ipstrategyexcludedips",level:4},{value:"<code>ipStrategy.ipv6Subnet</code>",id:"ipstrategyipv6subnet",level:4}];function o(e){const t={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"ipallowlist",children:"IPAllowList"})}),"\n",(0,n.jsx)(t.p,{children:"Limiting Clients to Specific IPs"}),"\n",(0,n.jsx)(t.p,{children:"IPAllowList limits allowed requests based on the client IP."}),"\n",(0,n.jsx)(t.h2,{id:"configuration-examples",children:"Configuration Examples"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="Docker"',children:'# Accepts request from defined IP\nlabels:\n  - "Mesh.http.middlewares.test-ipallowlist.ipallowlist.sourcerange=127.0.0.1/32, 192.168.1.7"\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="Kubernetes"',children:"apiVersion: Mesh.io/v1alpha1\nkind: Middleware\nmetadata:\n  name: test-ipallowlist\nspec:\n  ipAllowList:\n    sourceRange:\n      - 127.0.0.1/32\n      - 192.168.1.7\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="Consul Catalog"',children:'# Accepts request from defined IP\n- "Mesh.http.middlewares.test-ipallowlist.ipallowlist.sourcerange=127.0.0.1/32, 192.168.1.7"\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'# Accepts request from defined IP\nhttp:\n  middlewares:\n    test-ipallowlist:\n      ipAllowList:\n        sourceRange:\n          - "127.0.0.1/32"\n          - "192.168.1.7"\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'# Accepts request from defined IP\n[http.middlewares]\n  [http.middlewares.test-ipallowlist.ipAllowList]\n    sourceRange = ["127.0.0.1/32", "192.168.1.7"]\n'})}),"\n",(0,n.jsx)(t.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,n.jsx)(t.h3,{id:"sourcerange",children:(0,n.jsx)(t.code,{children:"sourceRange"})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:"Required"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"sourceRange"})," option sets the allowed IPs (or ranges of allowed IPs by using CIDR notation)."]}),"\n",(0,n.jsx)(t.h3,{id:"ipstrategy",children:(0,n.jsx)(t.code,{children:"ipStrategy"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"ipStrategy"})," option defines two parameters that set how Mesh determines the client IP: ",(0,n.jsx)(t.code,{children:"depth"}),", and ",(0,n.jsx)(t.code,{children:"excludedIPs"}),".",(0,n.jsx)(t.br,{}),"\n","If no strategy is set, the default behavior is to match ",(0,n.jsx)(t.code,{children:"sourceRange"})," against the Remote address found in the request."]}),"\n",(0,n.jsxs)(t.p,{children:['!!! important "As a middleware, whitelisting happens before the actual proxying to the backend takes place. In addition, the previous network hop only gets appended to ',(0,n.jsx)(t.code,{children:"X-Forwarded-For"})," during the last stages of proxying, i.e. after it has already passed through whitelisting. Therefore, during whitelisting, as the previous network hop is not yet present in ",(0,n.jsx)(t.code,{children:"X-Forwarded-For"}),", it cannot be matched against ",(0,n.jsx)(t.code,{children:"sourceRange"}),'."']}),"\n",(0,n.jsx)(t.h4,{id:"ipstrategydepth",children:(0,n.jsx)(t.code,{children:"ipStrategy.depth"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"depth"})," option tells Mesh to use the ",(0,n.jsx)(t.code,{children:"X-Forwarded-For"})," header and take the IP located at the ",(0,n.jsx)(t.code,{children:"depth"})," position (starting from the right)."]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["If ",(0,n.jsx)(t.code,{children:"depth"})," is greater than the total number of IPs in ",(0,n.jsx)(t.code,{children:"X-Forwarded-For"}),", then the client IP will be empty."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"depth"})," is ignored if its value is less than or equal to 0."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["If ",(0,n.jsx)(t.code,{children:"ipStrategy.ipv6Subnet"})," is provided and the selected IP is IPv6, the IP is transformed into the first IP of the subnet it belongs to.",(0,n.jsx)(t.br,{}),"\n","See ",(0,n.jsx)(t.a,{href:"#ipstrategyipv6subnet",children:"ipStrategy.ipv6Subnet"})," for more details."]}),"\n",(0,n.jsx)(t.p,{children:'!!! example "Examples of Depth & X-Forwarded-For"'}),"\n",(0,n.jsxs)(t.p,{children:["If ",(0,n.jsx)(t.code,{children:"depth"})," is set to 2, and the request ",(0,n.jsx)(t.code,{children:"X-Forwarded-For"})," header is ",(0,n.jsx)(t.code,{children:'"10.0.0.1,11.0.0.1,12.0.0.1,13.0.0.1"'}),' then the "real" client IP is ',(0,n.jsx)(t.code,{children:'"10.0.0.1"'})," (at depth 4) but the IP used is ",(0,n.jsx)(t.code,{children:'"12.0.0.1"'})," (",(0,n.jsx)(t.code,{children:"depth=2"}),")."]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:(0,n.jsx)(t.code,{children:"X-Forwarded-For"})}),(0,n.jsx)(t.th,{children:(0,n.jsx)(t.code,{children:"depth"})}),(0,n.jsx)(t.th,{children:"clientIP"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"10.0.0.1,11.0.0.1,12.0.0.1,13.0.0.1"'})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"1"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"13.0.0.1"'})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"10.0.0.1,11.0.0.1,12.0.0.1,13.0.0.1"'})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"3"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"11.0.0.1"'})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"10.0.0.1,11.0.0.1,12.0.0.1,13.0.0.1"'})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"5"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'""'})})]})]})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="Docker"',children:'# Allowlisting Based on `X-Forwarded-For` with `depth=2`\nlabels:\n  - "Mesh.http.middlewares.test-ipallowlist.ipallowlist.sourcerange=127.0.0.1/32, 192.168.1.7"\n  - "Mesh.http.middlewares.test-ipallowlist.ipallowlist.ipstrategy.depth=2"\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="Kubernetes"',children:"# Allowlisting Based on `X-Forwarded-For` with `depth=2`\napiVersion: Mesh.io/v1alpha1\nkind: Middleware\nmetadata:\n  name: test-ipallowlist\nspec:\n  ipAllowList:\n    sourceRange:\n      - 127.0.0.1/32\n      - 192.168.1.7\n    ipStrategy:\n      depth: 2\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="Consul Catalog"',children:'# Allowlisting Based on `X-Forwarded-For` with `depth=2`\n- "Mesh.http.middlewares.test-ipallowlist.ipallowlist.sourcerange=127.0.0.1/32, 192.168.1.7"\n- "Mesh.http.middlewares.test-ipallowlist.ipallowlist.ipstrategy.depth=2"\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'# Allowlisting Based on `X-Forwarded-For` with `depth=2`\nhttp:\n  middlewares:\n    test-ipallowlist:\n      ipAllowList:\n        sourceRange:\n          - "127.0.0.1/32"\n          - "192.168.1.7"\n        ipStrategy:\n          depth: 2\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'# Allowlisting Based on `X-Forwarded-For` with `depth=2`\n[http.middlewares]\n  [http.middlewares.test-ipallowlist.ipAllowList]\n    sourceRange = ["127.0.0.1/32", "192.168.1.7"]\n    [http.middlewares.test-ipallowlist.ipAllowList.ipStrategy]\n      depth = 2\n'})}),"\n",(0,n.jsx)(t.h4,{id:"ipstrategyexcludedips",children:(0,n.jsx)(t.code,{children:"ipStrategy.excludedIPs"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"excludedIPs"})," configures Mesh to scan the ",(0,n.jsx)(t.code,{children:"X-Forwarded-For"})," header and select the first IP not in the list."]}),"\n",(0,n.jsxs)(t.p,{children:['!!! important "If ',(0,n.jsx)(t.code,{children:"depth"})," is specified, ",(0,n.jsx)(t.code,{children:"excludedIPs"}),' is ignored."']}),"\n",(0,n.jsx)(t.p,{children:'!!! example "Example of ExcludedIPs & X-Forwarded-For"'}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:(0,n.jsx)(t.code,{children:"X-Forwarded-For"})}),(0,n.jsx)(t.th,{children:(0,n.jsx)(t.code,{children:"excludedIPs"})}),(0,n.jsx)(t.th,{children:"clientIP"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"10.0.0.1,11.0.0.1,12.0.0.1,13.0.0.1"'})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"12.0.0.1,13.0.0.1"'})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"11.0.0.1"'})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"10.0.0.1,11.0.0.1,12.0.0.1,13.0.0.1"'})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"15.0.0.1,13.0.0.1"'})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"12.0.0.1"'})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"10.0.0.1,11.0.0.1,12.0.0.1,13.0.0.1"'})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"10.0.0.1,13.0.0.1"'})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"12.0.0.1"'})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"10.0.0.1,11.0.0.1,12.0.0.1,13.0.0.1"'})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"15.0.0.1,16.0.0.1"'})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"13.0.0.1"'})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"10.0.0.1,11.0.0.1"'})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"10.0.0.1,11.0.0.1"'})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'""'})})]})]})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="Docker"',children:'# Exclude from `X-Forwarded-For`\nlabels:\n    - "Mesh.http.middlewares.test-ipallowlist.ipallowlist.sourceRange=127.0.0.1/32, 192.168.1.0/24"\n    - "Mesh.http.middlewares.test-ipallowlist.ipallowlist.ipstrategy.excludedips=127.0.0.1/32, 192.168.1.7"\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="Kubernetes"',children:"# Exclude from `X-Forwarded-For`\napiVersion: Mesh.io/v1alpha1\nkind: Middleware\nmetadata:\n  name: test-ipallowlist\nspec:\n  ipAllowList:\n    sourceRange:\n      - 127.0.0.1/32\n      - 192.168.1.0/24\n    ipStrategy:\n      excludedIPs:\n        - 127.0.0.1/32\n        - 192.168.1.7\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="Consul Catalog"',children:'# Exclude from `X-Forwarded-For`\n- "Mesh.http.middlewares.test-ipallowlist.ipallowlist.sourceRange=127.0.0.1/32, 192.168.1.0/24"\n- "Mesh.http.middlewares.test-ipallowlist.ipallowlist.ipstrategy.excludedips=127.0.0.1/32, 192.168.1.7"\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"# Exclude from `X-Forwarded-For`\nhttp:\n  middlewares:\n    test-ipallowlist:\n      ipAllowList:\n        sourceRange:\n         - 127.0.0.1/32\n         - 192.168.1.0/24\n        ipStrategy:\n          excludedIPs:\n            - 127.0.0.1/32\n            - 192.168.1.7\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'# Exclude from `X-Forwarded-For`\n[http.middlewares]\n  [http.middlewares.test-ipallowlist.ipAllowList]\n    sourceRange = ["127.0.0.1/32", "192.168.1.0/24"]\n    [http.middlewares.test-ipallowlist.ipAllowList.ipStrategy]\n      excludedIPs = ["127.0.0.1/32", "192.168.1.7"]\n'})}),"\n",(0,n.jsx)(t.h4,{id:"ipstrategyipv6subnet",children:(0,n.jsx)(t.code,{children:"ipStrategy.ipv6Subnet"})}),"\n",(0,n.jsxs)(t.p,{children:["This strategy applies to ",(0,n.jsx)(t.code,{children:"Depth"})," and ",(0,n.jsx)(t.code,{children:"RemoteAddr"})," strategy only.\nIf ",(0,n.jsx)(t.code,{children:"ipv6Subnet"})," is provided and the selected IP is IPv6, the IP is transformed into the first IP of the subnet it belongs to."]}),"\n",(0,n.jsx)(t.p,{children:"This is useful for grouping IPv6 addresses into subnets to prevent bypassing this middleware by obtaining a new IPv6."}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"ipv6Subnet"})," is ignored if its value is outside of 0-128 interval"]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:'!!! example "Example of ipv6Subnet"'}),"\n",(0,n.jsxs)(t.p,{children:["If ",(0,n.jsx)(t.code,{children:"ipv6Subnet"})," is provided, the IP is transformed in the following way."]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:(0,n.jsx)(t.code,{children:"IP"})}),(0,n.jsx)(t.th,{children:(0,n.jsx)(t.code,{children:"ipv6Subnet"})}),(0,n.jsx)(t.th,{children:"clientIP"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"::abcd:1111:2222:3333"'})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"64"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"::0:0:0:0"'})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"::abcd:1111:2222:3333"'})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"80"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"::abcd:0:0:0:0"'})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"::abcd:1111:2222:3333"'})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"96"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"::abcd:1111:0:0:0"'})})]})]})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="Docker & Swarm"',children:'labels:\n  - "Mesh.http.middlewares.test-ipallowlist.ipallowlist.sourcecriterion.ipstrategy.ipv6Subnet=64"\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="Kubernetes"',children:"apiVersion: Mesh.io/v1alpha1\nkind: Middleware\nmetadata:\n  name: test-ipallowlist\nspec:\n  ipallowlist:\n    sourceCriterion:\n      ipStrategy:\n        ipv6Subnet: 64\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="Consul Catalog"',children:'- "Mesh.http.middlewares.test-ipallowlist.ipallowlist.sourcecriterion.ipstrategy.ipv6Subnet=64"\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"http:\n  middlewares:\n    test-ipallowlist:\n      ipallowlist:\n        sourceCriterion:\n          ipStrategy:\n            ipv6Subnet: 64\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[http.middlewares]\n  [http.middlewares.test-ipallowlist.ipallowlist]\n    [http.middlewares.test-ipallowlist.ipallowlist.sourceCriterion.ipStrategy]\n      ipv6Subnet = 64\n"})})]})}function h(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}}}]);