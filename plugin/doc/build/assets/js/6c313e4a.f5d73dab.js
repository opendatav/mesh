"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[5195],{7294:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"getting-started/quick-start-with-kubernetes","title":"Mesh Getting Started With Kubernetes","description":"Get started with Mesh Proxy and Kubernetes.","source":"@site/docs/getting-started/quick-start-with-kubernetes.md","sourceDirName":"getting-started","slug":"/getting-started/quick-start-with-kubernetes","permalink":"/doc/docs/getting-started/quick-start-with-kubernetes","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/getting-started/quick-start-with-kubernetes.md","tags":[],"version":"current","frontMatter":{"title":"Mesh Getting Started With Kubernetes","description":"Get started with Mesh Proxy and Kubernetes."},"sidebar":"tutorialSidebar","previous":{"title":"Mesh Installation Documentation","permalink":"/doc/docs/getting-started/install-mesh"},"next":{"title":"Mesh Getting Started Quickly","permalink":"/doc/docs/getting-started/quick-start"}}');var t=s(4848),i=s(8453);const a={title:"Mesh Getting Started With Kubernetes",description:"Get started with Mesh Proxy and Kubernetes."},o="Quick Start",c={},l=[{value:"Permissions and Accesses",id:"permissions-and-accesses",level:2},{value:"Deployment and Exposition",id:"deployment-and-exposition",level:2},{value:"Proxying applications",id:"proxying-applications",level:2}];function h(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"quick-start",children:"Quick Start"})}),"\n",(0,t.jsx)(n.p,{children:"A Use Case of Mesh Proxy and Kubernetes"}),"\n",(0,t.jsxs)(n.p,{children:["This guide is an introduction to using Mesh Proxy in a Kubernetes environment.",(0,t.jsx)(n.br,{}),"\n","The objective is to learn how to run an application behind a Mesh reverse proxy in Kubernetes.",(0,t.jsx)(n.br,{}),"\n","It presents and explains the basic blocks required to start with Mesh such as Ingress Controller, Ingresses, Deployments, static, and dynamic configuration."]}),"\n",(0,t.jsx)(n.h2,{id:"permissions-and-accesses",children:"Permissions and Accesses"}),"\n",(0,t.jsx)(n.p,{children:"Mesh uses the Kubernetes API to discover running services."}),"\n",(0,t.jsxs)(n.p,{children:["To use the Kubernetes API, Mesh needs some permissions.\nThis ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/access-authn-authz/rbac/",children:"permission mechanism"})," is based on roles defined by the cluster administrator.",(0,t.jsx)(n.br,{}),"\n","The role is then bound to an account used by an application, in this case, Mesh Proxy."]}),"\n",(0,t.jsxs)(n.p,{children:["The first step is to create the role.\nThe ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/kubernetes-api/authorization-resources/cluster-role-v1/#ClusterRole",children:(0,t.jsx)(n.code,{children:"ClusterRole"})})," resource enumerates the resources and actions available for the role.\nIn a file called ",(0,t.jsx)(n.code,{children:"00-role.yml"}),", put the following ",(0,t.jsx)(n.code,{children:"ClusterRole"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="00-role.yml"',children:'kind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: mesh-role\n\nrules:\n  - apiGroups:\n      - ""\n    resources:\n      - services\n      - secrets\n      - nodes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups:\n      - discovery.k8s.io\n    resources:\n      - endpointslices\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - extensions\n      - networking.k8s.io\n    resources:\n      - ingresses\n      - ingressclasses\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups:\n      - extensions\n      - networking.k8s.io\n    resources:\n      - ingresses/status\n    verbs:\n      - update\n  - apiGroups:\n      - Mesh.io\n    resources:\n      - middlewares\n      - middlewaretcps\n      - ingressroutes\n      - Meshservices\n      - ingressroutetcps\n      - ingressrouteudps\n      - tlsoptions\n      - tlsstores\n      - serverstransports\n      - serverstransporttcps\n    verbs:\n      - get\n      - list\n      - watch\n'})}),"\n",(0,t.jsxs)(n.p,{children:['!!! info "You can find the reference for this file ',(0,t.jsx)(n.a,{href:"../../reference/dynamic-configuration/kubernetes-crd/#rbac",children:"there"}),'."']}),"\n",(0,t.jsxs)(n.p,{children:["The next step is to create a dedicated service account for Mesh.\nIn a file called ",(0,t.jsx)(n.code,{children:"00-account.yml"}),", put the following ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/kubernetes-api/authentication-resources/service-account-v1/#ServiceAccount",children:(0,t.jsx)(n.code,{children:"ServiceAccount"})})," resource:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="00-account.yml"',children:"apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: mesh-account\n"})}),"\n",(0,t.jsxs)(n.p,{children:["And then, bind the role on the account to apply the permissions and rules on the latter. In a file called ",(0,t.jsx)(n.code,{children:"01-role-binding.yml"}),", put the\nfollowing ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/kubernetes-api/authorization-resources/cluster-role-binding-v1/#ClusterRoleBinding",children:(0,t.jsx)(n.code,{children:"ClusterRoleBinding"})})," resource:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="01-role-binding.yml"',children:'kind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: mesh-role-binding\n\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: mesh-role\nsubjects:\n  - kind: ServiceAccount\n    name: mesh-account\n    namespace: default # This tutorial uses the "default" K8s namespace.\n'})}),"\n",(0,t.jsxs)(n.p,{children:['!!! info "',(0,t.jsx)(n.code,{children:"roleRef"})," is the Kubernetes reference to the role created in ",(0,t.jsx)(n.code,{children:"00-role.yml"}),'."']}),"\n",(0,t.jsxs)(n.p,{children:['!!! info "',(0,t.jsx)(n.code,{children:"subjects"}),' is the list of accounts reference."']}),"\n",(0,t.jsxs)(n.p,{children:["In this guide, it only contains the account created in ",(0,t.jsx)(n.code,{children:"00-account.yml"})]}),"\n",(0,t.jsx)(n.h2,{id:"deployment-and-exposition",children:"Deployment and Exposition"}),"\n",(0,t.jsxs)(n.p,{children:['!!! info "This section can be managed with the help of the ',(0,t.jsx)(n.a,{href:"../install-Mesh/#use-the-helm-chart",children:"Mesh Helm chart"}),'."']}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"https://Mesh.io/glossary/kubernetes-ingress-and-ingress-controller-101/#what-is-a-kubernetes-ingress-controller",children:"ingress controller"}),"\nis a software that runs in the same way as any other application on a cluster.",(0,t.jsx)(n.br,{}),"\n","To start Mesh on the Kubernetes cluster,\na ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/deployment-v1/",children:(0,t.jsx)(n.code,{children:"Deployment"})})," resource must exist to describe how to configure\nand scale containers horizontally to support larger workloads."]}),"\n",(0,t.jsxs)(n.p,{children:["Start by creating a file called ",(0,t.jsx)(n.code,{children:"02-Mesh.yml"})," and paste the following ",(0,t.jsx)(n.code,{children:"Deployment"})," resource:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="02-Mesh.yml"',children:"kind: Deployment\napiVersion: apps/v1\nmetadata:\n  name: mesh-deployment\n  labels:\n    app: Mesh\n\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: Mesh\n  template:\n    metadata:\n      labels:\n        app: Mesh\n    spec:\n      serviceAccountName: mesh-account\n      containers:\n        - name: Mesh\n          image: Mesh:v3.4\n          args:\n            - --api.insecure\n            - --providers.kubernetesingress\n          ports:\n            - name: web\n              containerPort: 80\n            - name: dashboard\n              containerPort: 8080\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The deployment contains an important attribute for customizing Mesh: ",(0,t.jsx)(n.code,{children:"args"}),".",(0,t.jsx)(n.br,{}),"\n","These arguments are the static configuration for Mesh.",(0,t.jsx)(n.br,{}),"\n","From here, it is possible to enable the dashboard,\nconfigure entry points,\nselect dynamic configuration providers,\nand ",(0,t.jsx)(n.a,{href:"/doc/docs/reference/static-configuration/cli",children:"more"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"In this deployment,\nthe static configuration enables the Mesh dashboard,\nand uses Kubernetes native Ingress resources as router definitions to route incoming requests."}),"\n",(0,t.jsx)(n.p,{children:'!!! info "When there is no entry point in the static configuration"'}),"\n",(0,t.jsxs)(n.p,{children:["Mesh creates a default one called ",(0,t.jsx)(n.code,{children:"web"})," using the port ",(0,t.jsx)(n.code,{children:"80"})," routing HTTP requests."]}),"\n",(0,t.jsxs)(n.p,{children:['!!! info "When enabling the ',(0,t.jsx)(n.a,{href:"../../operations/api/#insecure",children:(0,t.jsx)(n.code,{children:"api.insecure"})})," mode, Mesh exposes the dashboard on the port ",(0,t.jsx)(n.code,{children:"8080"}),'."']}),"\n",(0,t.jsxs)(n.p,{children:["A deployment manages scaling and then can create lots of containers, called ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/workloads/pods/",children:"Pods"}),".\nEach Pod is configured following the ",(0,t.jsx)(n.code,{children:"spec"})," field in the deployment.",(0,t.jsx)(n.br,{}),"\n","Given that, a Deployment can run multiple Mesh Proxy Pods,\na piece is required to forward the traffic to any of the instance:\nnamely a ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/kubernetes-api/service-resources/service-v1/#Service",children:(0,t.jsx)(n.code,{children:"Service"})}),".",(0,t.jsx)(n.br,{}),"\n","Create a file called ",(0,t.jsx)(n.code,{children:"02-mesh-services.yml"})," and insert the two ",(0,t.jsx)(n.code,{children:"Service"})," resources:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="02-mesh-services.yml"',children:"apiVersion: v1\nkind: Service\nmetadata:\n  name: mesh-dashboard-service\n\nspec:\n  type: LoadBalancer\n  ports:\n    - port: 8080\n      targetPort: dashboard\n  selector:\n    app: Mesh\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: mesh-web-service\n\nspec:\n  type: LoadBalancer\n  ports:\n    - targetPort: web\n      port: 80\n  selector:\n    app: Mesh\n"})}),"\n",(0,t.jsx)(n.p,{children:'!!! warning "It is possible to expose a service in different ways."'}),"\n",(0,t.jsxs)(n.p,{children:["Depending on your working environment and use case, the ",(0,t.jsx)(n.code,{children:"spec.type"})," might change.",(0,t.jsx)(n.br,{}),"\n","It is strongly recommended to understand the available ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types",children:"service types"})," before proceeding to the next step."]}),"\n",(0,t.jsx)(n.p,{children:"It is now time to apply those files on your cluster to start Mesh."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f 00-role.yml \\\n              -f 00-account.yml \\\n              -f 01-role-binding.yml \\\n              -f 02-Mesh.yml \\\n              -f 02-mesh-services.yml\n"})}),"\n",(0,t.jsx)(n.h2,{id:"proxying-applications",children:"Proxying applications"}),"\n",(0,t.jsxs)(n.p,{children:["The only part still missing is the business application behind the reverse proxy.",(0,t.jsx)(n.br,{}),"\n","For this guide, we use the example application ",(0,t.jsx)(n.a,{href:"https://github.com/Mesh/whoami",children:"Mesh/whoami"}),",\nbut the principles are applicable to any other application."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"whoami"})," application is an HTTP server running on port 80 which answers host-related information to the incoming requests.",(0,t.jsx)(n.br,{}),"\n","As usual, start by creating a file called ",(0,t.jsx)(n.code,{children:"03-whoami.yml"})," and paste the following ",(0,t.jsx)(n.code,{children:"Deployment"})," resource:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="03-whoami.yml"',children:"kind: Deployment\napiVersion: apps/v1\nmetadata:\n  name: whoami\n  labels:\n    app: whoami\n\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: whoami\n  template:\n    metadata:\n      labels:\n        app: whoami\n    spec:\n      containers:\n        - name: whoami\n          image: Mesh/whoami\n          ports:\n            - name: web\n              containerPort: 80\n"})}),"\n",(0,t.jsxs)(n.p,{children:["And continue by creating the following ",(0,t.jsx)(n.code,{children:"Service"})," resource in a file called ",(0,t.jsx)(n.code,{children:"03-whoami-services.yml"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="03-whoami-services.yml"',children:"apiVersion: v1\nkind: Service\nmetadata:\n  name: whoami\n\nspec:\n  ports:\n    - name: web\n      port: 80\n      targetPort: web\n      \n  selector:\n    app: whoami\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Thanks to the Kubernetes API,\nMesh is notified when an Ingress resource is created, updated, or deleted.",(0,t.jsx)(n.br,{}),"\n","This makes the process dynamic.",(0,t.jsx)(n.br,{}),"\n","The ingresses are, in a way, the ",(0,t.jsx)(n.a,{href:"../../providers/kubernetes-ingress/",children:"dynamic configuration"})," for Mesh."]}),"\n",(0,t.jsx)(n.p,{children:"!!! tip"}),"\n",(0,t.jsxs)(n.p,{children:["Find more information on ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/",children:"ingress controller"}),",\nand ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/services-networking/ingress/",children:"Ingress"})," in the official Kubernetes documentation."]}),"\n",(0,t.jsxs)(n.p,{children:["Create a file called ",(0,t.jsx)(n.code,{children:"04-whoami-ingress.yml"})," and insert the ",(0,t.jsx)(n.code,{children:"Ingress"})," resource:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="04-whoami-ingress.yml"',children:"apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: whoami-ingress\nspec:\n  rules:\n  - http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: whoami\n            port:\n              name: web\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This ",(0,t.jsx)(n.code,{children:"Ingress"})," configures Mesh to redirect any incoming requests starting with ",(0,t.jsx)(n.code,{children:"/"})," to the ",(0,t.jsx)(n.code,{children:"whoami:80"})," service."]}),"\n",(0,t.jsx)(n.p,{children:"At this point, all the configurations are ready.\nIt is time to apply those new files:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f 03-whoami.yml \\\n              -f 03-whoami-services.yml \\\n              -f 04-whoami-ingress.yml\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Now you should be able to access the ",(0,t.jsx)(n.code,{children:"whoami"})," application and the Mesh dashboard.\nLoad the dashboard on a web browser: ",(0,t.jsx)(n.a,{href:"http://localhost:8080",children:(0,t.jsx)(n.code,{children:"http://localhost:8080"})}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["And now access the ",(0,t.jsx)(n.code,{children:"whoami"})," application:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"curl -v http://localhost/\n"})}),"\n",(0,t.jsx)(n.p,{children:'!!! question "Going further"'}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/doc/docs/providers/kubernetes-ingress#ingressclass",children:"Filter the ingresses"})," to use with ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class",children:"IngressClass"})]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.a,{href:"/doc/docs/providers/kubernetes-crd",children:"IngressRoute CRD"})]}),"\n",(0,t.jsxs)(n.li,{children:["Protect ",(0,t.jsx)(n.a,{href:"/doc/docs/routing/providers/kubernetes-ingress#enabling-tls-via-annotations",children:"ingresses with TLS"})]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var r=s(6540);const t={},i=r.createContext(t);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);