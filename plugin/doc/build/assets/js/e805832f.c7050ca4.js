"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[6862],{856:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"providers/docker","title":"Mesh Docker Documentation","description":"Learn how to achieve configuration discovery in Mesh through Docker. Read the technical documentation.","source":"@site/docs/providers/docker.md","sourceDirName":"providers","slug":"/providers/docker","permalink":"/doc/docs/providers/docker","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/providers/docker.md","tags":[],"version":"current","frontMatter":{"title":"Mesh Docker Documentation","description":"Learn how to achieve configuration discovery in Mesh through Docker. Read the technical documentation."},"sidebar":"tutorialSidebar","previous":{"title":"Mesh Consul Documentation","permalink":"/doc/docs/providers/consul"},"next":{"title":"Mesh AWS ECS Documentation","permalink":"/doc/docs/providers/ecs"}}');var t=s(4848),i=s(8453);const o={title:"Mesh Docker Documentation",description:"Learn how to achieve configuration discovery in Mesh through Docker. Read the technical documentation."},c="Mesh & Docker",a={},l=[{value:"Configuration Examples",id:"configuration-examples",level:2},{value:"Routing Configuration",id:"routing-configuration",level:2},{value:"Routing Configuration with Labels",id:"routing-configuration-with-labels",level:3},{value:"Port Detection",id:"port-detection",level:3},{value:"Host networking",id:"host-networking",level:3},{value:"IPv4 &amp;&amp; IPv6",id:"ipv4--ipv6",level:3},{value:"Docker API Access",id:"docker-api-access",level:3},{value:"Provider Configuration",id:"provider-configuration",level:2},{value:"<code>endpoint</code>",id:"endpoint",level:3},{value:"<code>username</code>",id:"username",level:3},{value:"<code>password</code>",id:"password",level:3},{value:"<code>useBindPortIP</code>",id:"usebindportip",level:3},{value:"<code>exposedByDefault</code>",id:"exposedbydefault",level:3},{value:"<code>network</code>",id:"network",level:3},{value:"<code>defaultRule</code>",id:"defaultrule",level:3},{value:"<code>httpClientTimeout</code>",id:"httpclienttimeout",level:3},{value:"<code>watch</code>",id:"watch",level:3},{value:"<code>constraints</code>",id:"constraints",level:3},{value:"<code>tls</code>",id:"tls",level:3},{value:"<code>ca</code>",id:"ca",level:4},{value:"<code>cert</code>",id:"cert",level:4},{value:"<code>key</code>",id:"key",level:4},{value:"<code>insecureSkipVerify</code>",id:"insecureskipverify",level:4},{value:"<code>allowEmptyServices</code>",id:"allowemptyservices",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"mesh--docker",children:"Mesh & Docker"})}),"\n",(0,t.jsx)(n.p,{children:"A Story of Labels & Containers"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Docker",src:s(8854).A+"",width:"719",height:"398"})}),"\n",(0,t.jsx)(n.p,{children:"Attach labels to your containers and let Mesh do the rest!"}),"\n",(0,t.jsxs)(n.p,{children:["This provider works with ",(0,t.jsx)(n.a,{href:"https://docs.docker.com/engine/",children:"Docker (standalone) Engine"}),"."]}),"\n",(0,t.jsx)(n.p,{children:'!!! tip "The Quick Start Uses Docker"'}),"\n",(0,t.jsxs)(n.p,{children:["If you have not already read it, maybe you would like to go through the ",(0,t.jsx)(n.a,{href:"/doc/docs/getting-started/quick-start",children:"quick start guide"})," that uses the Docker provider."]}),"\n",(0,t.jsx)(n.h2,{id:"configuration-examples",children:"Configuration Examples"}),"\n",(0,t.jsx)(n.p,{children:'??? example "Configuring Docker & Deploying / Exposing one Service"'}),"\n",(0,t.jsx)(n.p,{children:"Enabling the docker provider"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  docker: {}\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.docker]\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.docker=true\n"})}),"\n",(0,t.jsx)(n.p,{children:"Attaching labels to containers (in your docker compose file)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'version: "3"\nservices:\n  my-container:\n    # ...\n    labels:\n      - Mesh.http.routers.my-container.rule=Host(`example.com`)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"routing-configuration",children:"Routing Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["When using Docker as a ",(0,t.jsx)(n.a,{href:"/doc/docs/providers/overview",children:"provider"}),",\nMesh uses ",(0,t.jsx)(n.a,{href:"https://docs.docker.com/engine/reference/commandline/run/#label",children:"container labels"})," to retrieve its routing\nconfiguration."]}),"\n",(0,t.jsxs)(n.p,{children:["See the list of labels in the dedicated ",(0,t.jsx)(n.a,{href:"/doc/docs/routing/providers/docker",children:"routing"})," section."]}),"\n",(0,t.jsx)(n.h3,{id:"routing-configuration-with-labels",children:"Routing Configuration with Labels"}),"\n",(0,t.jsxs)(n.p,{children:["By default, Mesh watches for ",(0,t.jsx)(n.a,{href:"https://docs.docker.com/config/labels-custom-metadata/",children:"container level labels"})," on a\nstandalone Docker Engine."]}),"\n",(0,t.jsxs)(n.p,{children:["When using Docker Compose, labels are specified by the directive\n",(0,t.jsx)(n.a,{href:"https://docs.docker.com/compose/compose-file/compose-file-v3/#labels",children:(0,t.jsx)(n.code,{children:"labels"})})," from the\n",(0,t.jsx)(n.a,{href:"https://docs.docker.com/compose/compose-file/compose-file-v3/#service-configuration-reference",children:'"services" objects'}),"."]}),"\n",(0,t.jsx)(n.p,{children:'!!! tip "Not Only Docker"'}),"\n",(0,t.jsx)(n.p,{children:"Please note that any tool like Nomad, Terraform, Ansible, etc.\nthat is able to define a Docker container with labels can work\nwith Mesh and the Docker provider."}),"\n",(0,t.jsx)(n.h3,{id:"port-detection",children:"Port Detection"}),"\n",(0,t.jsx)(n.p,{children:"Mesh retrieves the private IP and port of containers from the Docker API."}),"\n",(0,t.jsx)(n.p,{children:"Port detection for private communication works as follows:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If a container ",(0,t.jsx)(n.a,{href:"https://docs.docker.com/engine/reference/builder/#expose",children:"exposes"})," a single port,\nthen Mesh uses this port."]}),"\n",(0,t.jsxs)(n.li,{children:["If a container ",(0,t.jsx)(n.a,{href:"https://docs.docker.com/engine/reference/builder/#expose",children:"exposes"})," multiple ports,\nthen Mesh uses the lowest port. E.g. if ",(0,t.jsx)(n.code,{children:"80"})," and ",(0,t.jsx)(n.code,{children:"8080"})," are exposed, Mesh will use ",(0,t.jsx)(n.code,{children:"80"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["If a container does not expose any port, or the selection from multiple ports does not fit,\nthen you must manually specify which port Mesh should use for communication\nby using the label ",(0,t.jsx)(n.code,{children:"Mesh.http.services.<service_name>.loadbalancer.server.port"}),"\n(Read more on this label in the dedicated section in ",(0,t.jsx)(n.a,{href:"/doc/docs/routing/providers/docker#services",children:"routing"}),")."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"host-networking",children:"Host networking"}),"\n",(0,t.jsxs)(n.p,{children:["When exposing containers that are configured with ",(0,t.jsx)(n.a,{href:"https://docs.docker.com/network/host/",children:"host networking"}),",\nthe IP address of the host is resolved as follows:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["try a lookup of ",(0,t.jsx)(n.code,{children:"host.docker.internal"})]}),"\n",(0,t.jsxs)(n.li,{children:["if the lookup was unsuccessful, try a lookup of\n",(0,t.jsx)(n.code,{children:"host.containers.internal"}),", (",(0,t.jsx)(n.a,{href:"https://docs.podman.io/en/latest/",children:"Podman"})," equivalent of ",(0,t.jsx)(n.code,{children:"host.docker.internal"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["if that lookup was also unsuccessful, fall back to ",(0,t.jsx)(n.code,{children:"127.0.0.1"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["On Linux, for versions of Docker older than 20.10.0, for ",(0,t.jsx)(n.code,{children:"host.docker.internal"})," to be defined, it should be provided\nas an ",(0,t.jsx)(n.code,{children:"extra_host"})," to the Mesh container, using the ",(0,t.jsx)(n.code,{children:"--add-host"})," flag. For example, to set it to the IP address of\nthe bridge interface (",(0,t.jsx)(n.code,{children:"docker0"})," by default): ",(0,t.jsx)(n.code,{children:"--add-host=host.docker.internal:172.17.0.1"})]}),"\n",(0,t.jsx)(n.h3,{id:"ipv4--ipv6",children:"IPv4 && IPv6"}),"\n",(0,t.jsx)(n.p,{children:"When using a docker stack that uses IPv6,\nMesh will use the IPv4 container IP before its IPv6 counterpart.\nTherefore, on an IPv6 Docker stack,\nMesh will use the IPv6 container IP."}),"\n",(0,t.jsx)(n.h3,{id:"docker-api-access",children:"Docker API Access"}),"\n",(0,t.jsx)(n.p,{children:"Mesh requires access to the docker socket to get its dynamic configuration."}),"\n",(0,t.jsxs)(n.p,{children:["You can specify which Docker API Endpoint to use with the directive ",(0,t.jsx)(n.a,{href:"#endpoint",children:(0,t.jsx)(n.code,{children:"endpoint"})}),"."]}),"\n",(0,t.jsx)(n.p,{children:'!!! warning "Security Note"'}),"\n",(0,t.jsx)(n.p,{children:"Accessing the Docker API without any restriction is a security concern:\nIf Mesh is attacked, then the attacker might get access to the underlying host."}),"\n",(0,t.jsxs)(n.p,{children:["As explained in the ",(0,t.jsx)(n.a,{href:"https://docs.docker.com/engine/security/#docker-daemon-attack-surface",children:"Docker Daemon Attack Surface documentation"}),":"]}),"\n",(0,t.jsx)(n.p,{children:"!!! quote"}),"\n",(0,t.jsxs)(n.p,{children:["[...] only ",(0,t.jsx)(n.strong,{children:"trusted"})," users should be allowed to control your Docker daemon [...]"]}),"\n",(0,t.jsx)(n.p,{children:'??? success "Solutions"'}),"\n",(0,t.jsxs)(n.p,{children:["Expose the Docker socket over TCP or SSH, instead of the default Unix socket file.\nIt allows different implementation levels of the ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/AAA_(computer_security)",children:"AAA (Authentication, Authorization, Accounting) concepts"}),", depending on your security assessment:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Authentication with Client Certificates as described in ",(0,t.jsx)(n.a,{href:"https://docs.docker.com/engine/security/protect-access/",children:'"Protect the Docker daemon socket."'})]}),"\n",(0,t.jsxs)(n.li,{children:["Authorize and filter requests to restrict possible actions with ",(0,t.jsx)(n.a,{href:"https://github.com/Tecnativa/docker-socket-proxy",children:"the TecnativaDocker Socket Proxy"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Authorization with the ",(0,t.jsx)(n.a,{href:"https://web.archive.org/web/20190920092526/https://docs.docker.com/engine/extend/plugins_authorization/",children:"Docker Authorization Plugin Mechanism"})]}),"\n",(0,t.jsx)(n.li,{children:"Accounting at networking level, by exposing the socket only inside a Docker private network, only available for Mesh."}),"\n",(0,t.jsx)(n.li,{children:"Accounting at container level, by exposing the socket on a another container than Mesh's."}),"\n",(0,t.jsxs)(n.li,{children:["Accounting at kernel level, by enforcing kernel calls with mechanisms like ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Security-Enhanced_Linux",children:"SELinux"}),', to only allows an identified set of actions for Mesh\'s process (or the "socket exposer" process).']}),"\n",(0,t.jsx)(n.li,{children:"SSH public key authentication (SSH is supported with Docker > 18.09)"}),"\n",(0,t.jsx)(n.li,{children:"Authentication using HTTP Basic authentication through an HTTP proxy that exposes the Docker daemon socket."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:'??? info "More Resources and Examples"'}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://medium.com/@containeroo/mesh-2-0-paranoid-about-mounting-var-run-docker-sock-22da9cb3e78c",children:'"Paranoid about mounting /var/run/docker.sock?"'})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://blog.Mesh.io/mesh-and-docker-a-discussion-with-docker-captain-bret-fisher-7f0b9a54ff88",children:"Mesh and Docker: A Discussion with Docker Captain, Bret Fisher"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.youtube.com/watch?v=ltrV-Qmh3oY",children:"KubeCon EU 2018 Keynote, Running with Scissors, from Liz Rice"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.lvh.io/posts/dont-expose-the-docker-socket-not-even-to-a-container/",children:"Don't expose the Docker socket (not even to a container)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsxs)(n.a,{href:"https://news.ycombinator.com/item?id=17983623",children:["A thread on Stack Overflow about sharing the ",(0,t.jsx)(n.code,{children:"/var/run/docker.sock"})," file"]})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://blog.loof.fr/2018/01/to-dind-or-not-do-dind.html",children:"To DinD or not to DinD"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/Mesh/Mesh/issues/4174",children:"Mesh issue GH-4174 about security with Docker socket"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://developers.redhat.com/blog/2015/02/25/inspecting-docker-activity-with-socat/",children:"Inspecting Docker Activity with Socat"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://blog.mikesir87.io/2018/07/letting-mesh-run-on-worker-nodes/",children:"Letting Mesh run on Worker Nodes"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/Tecnativa/docker-socket-proxy",children:"Docker Socket Proxy from Tecnativa"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"provider-configuration",children:"Provider Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"endpoint",children:(0,t.jsx)(n.code,{children:"endpoint"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:'Required, Default="unix:///var/run/docker.sock"'})}),"\n",(0,t.jsxs)(n.p,{children:["See the ",(0,t.jsx)(n.a,{href:"#docker-api-access",children:"Docker API Access"})," section for more information."]}),"\n",(0,t.jsx)(n.p,{children:'??? example "Using the docker.sock"'}),"\n",(0,t.jsx)(n.p,{children:"The docker-compose file shares the docker sock with the Mesh container"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"version: '3'\n\nservices:\n  Mesh:\n     image: Mesh:v3.4 # The official v3 Mesh docker image\n     ports:\n       - \"80:80\"\n     volumes:\n       - /var/run/docker.sock:/var/run/docker.sock\n"})}),"\n",(0,t.jsx)(n.p,{children:"We specify the docker.sock in Mesh's configuration file."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'providers:\n  docker:\n    endpoint: "unix:///var/run/docker.sock"\n     # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.docker]\n  endpoint = "unix:///var/run/docker.sock"\n  # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.docker.endpoint=unix:///var/run/docker.sock\n# ...\n"})}),"\n",(0,t.jsx)(n.p,{children:'??? example "Using SSH"'}),"\n",(0,t.jsx)(n.p,{children:"Using Docker 18.09+ you can connect Mesh to daemon using SSH.\nWe specify the SSH host and user in Mesh's configuration file.\nNote that if the server requires public keys for authentication, you must have them accessible for the user running Mesh."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'providers:\n  docker:\n    endpoint: "ssh://Mesh@192.168.2.5:2022"\n     # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.docker]\n  endpoint = "ssh://Mesh@192.168.2.5:2022"\n  # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.docker.endpoint=ssh://Mesh@192.168.2.5:2022\n# ...\n"})}),"\n",(0,t.jsx)(n.p,{children:'??? example "Using HTTP"'}),"\n",(0,t.jsx)(n.p,{children:"Using Docker Engine API you can connect Mesh to remote daemon using HTTP."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'providers:\n  docker:\n    endpoint: "http://127.0.0.1:2375"\n     # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.docker]\n  endpoint = "http://127.0.0.1:2375"\n  # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.docker.endpoint=http://127.0.0.1:2375\n# ...\n"})}),"\n",(0,t.jsx)(n.p,{children:'??? example "Using TCP"'}),"\n",(0,t.jsx)(n.p,{children:"Using Docker Engine API you can connect Mesh to remote daemon using TCP."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'providers:\n  docker:\n    endpoint: "tcp://127.0.0.1:2375"\n     # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.docker]\n  endpoint = "tcp://127.0.0.1:2375"\n  # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.docker.endpoint=tcp://127.0.0.1:2375\n# ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'providers:\n  docker:\n    endpoint: "unix:///var/run/docker.sock"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.docker]\nendpoint = "unix:///var/run/docker.sock"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.docker.endpoint=unix:///var/run/docker.sock\n"})}),"\n",(0,t.jsx)(n.h3,{id:"username",children:(0,t.jsx)(n.code,{children:"username"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:'Optional, Default=""'})}),"\n",(0,t.jsx)(n.p,{children:"Defines the username for Basic HTTP authentication.\nThis should be used when the Docker daemon socket is exposed through an HTTP proxy that requires Basic HTTP\nauthentication."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  docker:\n    username: foo\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.docker]\nusername = "foo"\n# ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:'--providers.docker.username="foo"\n# ...\n'})}),"\n",(0,t.jsx)(n.h3,{id:"password",children:(0,t.jsx)(n.code,{children:"password"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:'Optional, Default=""'})}),"\n",(0,t.jsx)(n.p,{children:"Defines the password for Basic HTTP authentication.\nThis should be used when the Docker daemon socket is exposed through an HTTP proxy that requires Basic HTTP\nauthentication."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  docker:\n    password: foo\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.docker]\npassword = "foo"\n# ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:'--providers.docker.password="foo"\n# ...\n'})}),"\n",(0,t.jsx)(n.h3,{id:"usebindportip",children:(0,t.jsx)(n.code,{children:"useBindPortIP"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional, Default=false"})}),"\n",(0,t.jsxs)(n.p,{children:["Mesh routes requests to the IP/port of the matching container.\nWhen setting ",(0,t.jsx)(n.code,{children:"useBindPortIP=true"}),", you tell Mesh to use the IP/Port attached to the container's ",(0,t.jsx)(n.em,{children:"binding"})," instead of\nits inner network IP/Port."]}),"\n",(0,t.jsxs)(n.p,{children:["When used in conjunction with the ",(0,t.jsx)(n.code,{children:"Mesh.http.services.<name>.loadbalancer.server.port"})," label (that tells Mesh to\nroute requests to a specific port),\nMesh tries to find a binding on port ",(0,t.jsx)(n.code,{children:"Mesh.http.services.<name>.loadbalancer.server.port"}),".\nIf it cannot find such a binding, Mesh falls back on the internal network IP of the container,\nbut still uses the ",(0,t.jsx)(n.code,{children:"Mesh.http.services.<name>.loadbalancer.server.port"})," that is set in the label."]}),"\n",(0,t.jsxs)(n.p,{children:['??? example "Examples of ',(0,t.jsx)(n.code,{children:"usebindportip"}),' in different situations."']}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"port label"}),(0,t.jsx)(n.th,{children:"Container's binding"}),(0,t.jsx)(n.th,{children:"Routes to"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsxs)(n.td,{children:["IntIP",":IntPort"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"-"}),(0,t.jsxs)(n.td,{children:["ExtPort",":IntPort"]}),(0,t.jsxs)(n.td,{children:["IntIP",":IntPort"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"-"}),(0,t.jsxs)(n.td,{children:["ExtIp:ExtPort",":IntPort"]}),(0,t.jsxs)(n.td,{children:["ExtIp",":ExtPort"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"LblPort"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsxs)(n.td,{children:["IntIp",":LblPort"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"LblPort"}),(0,t.jsxs)(n.td,{children:["ExtIp:ExtPort",":LblPort"]}),(0,t.jsxs)(n.td,{children:["ExtIp",":ExtPort"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"LblPort"}),(0,t.jsxs)(n.td,{children:["ExtIp:ExtPort",":OtherPort"]}),(0,t.jsxs)(n.td,{children:["IntIp",":LblPort"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"LblPort"}),(0,t.jsxs)(n.td,{children:["ExtIp1:ExtPort1",":IntPort1"," & ExtIp2:LblPort",":IntPort2"]}),(0,t.jsxs)(n.td,{children:["ExtIp2",":LblPort"]})]})]})]}),"\n",(0,t.jsx)(n.p,{children:'!!! info ""\nIn the above table:'}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ExtIp"}),' stands for "external IP found in the binding"']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"IntIp"}),' stands for "internal network container\'s IP",']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ExtPort"}),' stands for "external Port found in the binding"']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"IntPort"}),' stands for "internal network container\'s port."']}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  docker:\n    useBindPortIP: true\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.docker]\nuseBindPortIP = true\n# ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.docker.useBindPortIP=true\n# ...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"exposedbydefault",children:(0,t.jsx)(n.code,{children:"exposedByDefault"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional, Default=true"})}),"\n",(0,t.jsxs)(n.p,{children:["Expose containers by default through Mesh.\nIf set to ",(0,t.jsx)(n.code,{children:"false"}),", containers that do not have a ",(0,t.jsx)(n.code,{children:"Mesh.enable=true"})," label are ignored from the resulting routing\nconfiguration."]}),"\n",(0,t.jsxs)(n.p,{children:["For additional information, refer\nto ",(0,t.jsx)(n.a,{href:"/doc/docs/providers/overview#restrict-the-scope-of-service-discovery",children:"Restrict the Scope of Service Discovery"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  docker:\n    exposedByDefault: false\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.docker]\nexposedByDefault = false\n# ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.docker.exposedByDefault=false\n# ...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"network",children:(0,t.jsx)(n.code,{children:"network"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:'Optional, Default=""'})}),"\n",(0,t.jsx)(n.p,{children:"Defines a default docker network to use for connections to all containers."}),"\n",(0,t.jsxs)(n.p,{children:["This option can be overridden on a per-container basis with the ",(0,t.jsx)(n.code,{children:"Mesh.docker.network"})," label."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  docker:\n    network: test\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.docker]\nnetwork = "test"\n# ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.docker.network=test\n# ...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"defaultrule",children:(0,t.jsx)(n.code,{children:"defaultRule"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.em,{children:["Optional, Default=",(0,t.jsx)(n.code,{children:"Host(`{{ normalize .Name }}`)"})]})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"defaultRule"})," option defines what routing rule to apply to a container if no rule is defined by a label."]}),"\n",(0,t.jsxs)(n.p,{children:["It must be a valid ",(0,t.jsx)(n.a,{href:"https://pkg.go.dev/text/template/",children:"Go template"}),",\nand can use ",(0,t.jsx)(n.a,{href:"https://masterminds.github.io/sprig/",children:"sprig template functions"}),".\nThe container name can be accessed with the ",(0,t.jsx)(n.code,{children:"ContainerName"})," identifier.\nThe service name can be accessed with the ",(0,t.jsx)(n.code,{children:"Name"})," identifier.\nThe template has access to all the labels defined on this container with the ",(0,t.jsx)(n.code,{children:"Labels"})," identifier."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'providers:\n  docker:\n    defaultRule: "Host(`{{ .Name }}.{{ index .Labels \\"customLabel\\"}}`)"\n    # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.docker]\ndefaultRule = "Host(`{{ .Name }}.{{ index .Labels \\"customLabel\\"}}`)"\n# ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.docker.defaultRule='Host(`{{ .Name }}.{{ index .Labels \"customLabel\"}}`)'\n# ...\n"})}),"\n",(0,t.jsx)(n.p,{children:'??? info "Default rule and Mesh service"'}),"\n",(0,t.jsx)(n.p,{children:"The exposure of the Mesh container, combined with the default rule mechanism,\ncan lead to create a router targeting itself in a loop.\nIn this case, to prevent an infinite loop,\nMesh adds an internal middleware to refuse the request if it comes from the same router."}),"\n",(0,t.jsx)(n.h3,{id:"httpclienttimeout",children:(0,t.jsx)(n.code,{children:"httpClientTimeout"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional, Default=0"})}),"\n",(0,t.jsxs)(n.p,{children:["Defines the client timeout (in seconds) for HTTP connections. If its value is ",(0,t.jsx)(n.code,{children:"0"}),", no timeout is set."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  docker:\n    httpClientTimeout: 300\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.docker]\nhttpClientTimeout = 300\n# ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.docker.httpClientTimeout=300\n# ...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"watch",children:(0,t.jsx)(n.code,{children:"watch"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional, Default=true"})}),"\n",(0,t.jsx)(n.p,{children:"Watch Docker events."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  docker:\n    watch: false\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.docker]\nwatch = false\n# ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.docker.watch=false\n# ...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"constraints",children:(0,t.jsx)(n.code,{children:"constraints"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:'Optional, Default=""'})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"constraints"})," option can be set to an expression that Mesh matches against the container labels to determine\nwhether\nto create any route for that container. If none of the container labels match the expression, no route for that\ncontainer is\ncreated. If the expression is empty, all detected containers are included."]}),"\n",(0,t.jsxs)(n.p,{children:["The expression syntax is based on the ",(0,t.jsx)(n.code,{children:'Label("key", "value")'}),", and ",(0,t.jsx)(n.code,{children:'LabelRegex("key", "value")'})," functions,\nas well as the usual boolean logic, as shown in examples below."]}),"\n",(0,t.jsx)(n.p,{children:'??? example "Constraints Expression Examples"'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'# Includes only containers having a label with key `a.label.name` and value `foo`\nconstraints = "Label(`a.label.name`, `foo`)"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'# Excludes containers having any label with key `a.label.name` and value `foo`\nconstraints = "!Label(`a.label.name`, `value`)"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'# With logical AND.\nconstraints = "Label(`a.label.name`, `valueA`) && Label(`another.label.name`, `valueB`)"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'# With logical OR.\nconstraints = "Label(`a.label.name`, `valueA`) || Label(`another.label.name`, `valueB`)"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'# With logical AND and OR, with precedence set by parentheses.\nconstraints = "Label(`a.label.name`, `valueA`) && (Label(`another.label.name`, `valueB`) || Label(`yet.another.label.name`, `valueC`))"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'# Includes only containers having a label with key `a.label.name` and a value matching the `a.+` regular expression.\nconstraints = "LabelRegex(`a.label.name`, `a.+`)"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["For additional information, refer\nto ",(0,t.jsx)(n.a,{href:"/doc/docs/providers/overview#restrict-the-scope-of-service-discovery",children:"Restrict the Scope of Service Discovery"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'providers:\n  docker:\n    constraints: "Label(`a.label.name`,`foo`)"\n    # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.docker]\nconstraints = "Label(`a.label.name`,`foo`)"\n# ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.docker.constraints=Label(`a.label.name`,`foo`)\n# ...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"tls",children:(0,t.jsx)(n.code,{children:"tls"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional"})}),"\n",(0,t.jsx)(n.p,{children:"Defines the TLS configuration used for the secure connection to Docker."}),"\n",(0,t.jsx)(n.h4,{id:"ca",children:(0,t.jsx)(n.code,{children:"ca"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ca"})," is the path to the certificate authority used for the secure connection to Docker,\nit defaults to the system bundle."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  docker:\n    tls:\n      ca: path/to/ca.crt\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.docker.tls]\nca = "path/to/ca.crt"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.docker.tls.ca=path/to/ca.crt\n"})}),"\n",(0,t.jsx)(n.h4,{id:"cert",children:(0,t.jsx)(n.code,{children:"cert"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"cert"})," is the path to the public certificate used for the secure connection to Docker.\nWhen using this option, setting the ",(0,t.jsx)(n.code,{children:"key"})," option is required."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  docker:\n    tls:\n      cert: path/to/foo.cert\n      key: path/to/foo.key\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.docker.tls]\ncert = "path/to/foo.cert"\nkey = "path/to/foo.key"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.docker.tls.cert=path/to/foo.cert\n--providers.docker.tls.key=path/to/foo.key\n"})}),"\n",(0,t.jsx)(n.h4,{id:"key",children:(0,t.jsx)(n.code,{children:"key"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"key"})," is the path to the private key used for the secure connection Docker.\nWhen using this option, setting the ",(0,t.jsx)(n.code,{children:"cert"})," option is required."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  docker:\n    tls:\n      cert: path/to/foo.cert\n      key: path/to/foo.key\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.docker.tls]\ncert = "path/to/foo.cert"\nkey = "path/to/foo.key"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.docker.tls.cert=path/to/foo.cert\n--providers.docker.tls.key=path/to/foo.key\n"})}),"\n",(0,t.jsx)(n.h4,{id:"insecureskipverify",children:(0,t.jsx)(n.code,{children:"insecureSkipVerify"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional, Default=false"})}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.code,{children:"insecureSkipVerify"})," is ",(0,t.jsx)(n.code,{children:"true"}),", the TLS connection to Docker accepts any certificate presented by the server\nregardless of the hostnames it covers."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  docker:\n    tls:\n      insecureSkipVerify: true\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.docker.tls]\ninsecureSkipVerify = true\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.docker.tls.insecureSkipVerify=true\n"})}),"\n",(0,t.jsx)(n.h3,{id:"allowemptyservices",children:(0,t.jsx)(n.code,{children:"allowEmptyServices"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional, Default=false"})}),"\n",(0,t.jsxs)(n.p,{children:["If the parameter is set to ",(0,t.jsx)(n.code,{children:"true"}),",\nany ",(0,t.jsx)(n.a,{href:"/doc/docs/routing/services/#servers-load-balancer",children:"servers load balancer"})," defined for Docker containers is created\nregardless of the ",(0,t.jsx)(n.a,{href:"https://docs.docker.com/engine/reference/builder/#healthcheck",children:"healthiness"})," of the corresponding\ncontainers.\nIt also then stays alive and responsive even at times when it becomes empty,\ni.e. when all its children containers become unhealthy.\nThis results in ",(0,t.jsx)(n.code,{children:"503"})," HTTP responses instead of ",(0,t.jsx)(n.code,{children:"404"})," ones,\nin the above cases."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  docker:\n    allowEmptyServices: true\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.docker]\nallowEmptyServices = true\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.docker.allowEmptyServices=true\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var r=s(6540);const t={},i=r.createContext(t);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(i.Provider,{value:n},e.children)}},8854:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/docker-3158549aee80e7d78ffd53edf9c601b5.png"}}]);