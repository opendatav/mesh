"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[366],{1234:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"routing/overview","title":"Routing & Load Balancing Overview |Mesh Docs","description":"Read the official Mesh documentation to learn more on the Mesh Proxy architecture and the components that enable the routes to be created.","source":"@site/docs/routing/overview.md","sourceDirName":"routing","slug":"/routing/overview","permalink":"/doc/docs/routing/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/routing/overview.md","tags":[],"version":"current","frontMatter":{"title":"Routing & Load Balancing Overview |Mesh Docs","description":"Read the official Mesh documentation to learn more on the Mesh Proxy architecture and the components that enable the routes to be created."},"sidebar":"tutorialSidebar","previous":{"title":"Mesh EntryPoints Documentation","permalink":"/doc/docs/routing/entrypoints"},"next":{"title":"Mesh Consul Catalog Routing","permalink":"/doc/docs/routing/providers/consul-catalog"}}');var i=r(4848),t=r(8453);const a={title:"Routing & Load Balancing Overview |Mesh Docs",description:"Read the official Mesh documentation to learn more on the Mesh Proxy architecture and the components that enable the routes to be created."},o="Overview",c={},l=[{value:"Clear Responsibilities",id:"clear-responsibilities",level:2},{value:"Example with a File Provider",id:"example-with-a-file-provider",level:2},{value:"Transport configuration",id:"transport-configuration",level:2},{value:"HTTP Servers Transports",id:"http-servers-transports",level:3},{value:"<code>insecureSkipVerify</code>",id:"insecureskipverify",level:4},{value:"<code>rootCAs</code>",id:"rootcas",level:4},{value:"<code>maxIdleConnsPerHost</code>",id:"maxidleconnsperhost",level:4},{value:"<code>spiffe</code>",id:"spiffe",level:4},{value:"<code>spiffe.ids</code>",id:"spiffeids",level:4},{value:"<code>spiffe.trustDomain</code>",id:"spiffetrustdomain",level:4},{value:"<code>forwardingTimeouts</code>",id:"forwardingtimeouts",level:4},{value:"<code>forwardingTimeouts.dialTimeout</code>",id:"forwardingtimeoutsdialtimeout",level:4},{value:"<code>forwardingTimeouts.responseHeaderTimeout</code>",id:"forwardingtimeoutsresponseheadertimeout",level:4},{value:"<code>forwardingTimeouts.idleConnTimeout</code>",id:"forwardingtimeoutsidleconntimeout",level:4},{value:"TCP Servers Transports",id:"tcp-servers-transports",level:3},{value:"<code>dialTimeout</code>",id:"dialtimeout",level:4},{value:"<code>dialKeepAlive</code>",id:"dialkeepalive",level:4},{value:"<code>tls</code>",id:"tls",level:4},{value:"<code>tls.insecureSkipVerify</code>",id:"tlsinsecureskipverify",level:4},{value:"<code>tls.rootCAs</code>",id:"tlsrootcas",level:4},{value:"<code>spiffe</code>",id:"spiffe-1",level:4},{value:"<code>spiffe.ids</code>",id:"spiffeids-1",level:4},{value:"<code>spiffe.trustDomain</code>",id:"spiffetrustdomain-1",level:4}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"overview",children:"Overview"})}),"\n",(0,i.jsx)(n.p,{children:"What's Happening to the Requests?"}),"\n",(0,i.jsx)(n.p,{children:"Let's zoom in on Mesh's architecture and talk about the components that enable the routes to be created."}),"\n",(0,i.jsxs)(n.p,{children:["First, when you start Mesh, you define ",(0,i.jsx)(n.a,{href:"../entrypoints",children:"entrypoints"})," (in their most basic forms, they are port numbers).\nThen, connected to these entrypoints, ",(0,i.jsx)(n.a,{href:"../routers",children:"routers"})," analyze the incoming requests to see if they match a set of ",(0,i.jsx)(n.a,{href:"../routers#rule",children:"rules"}),".\nIf they do, the router might transform the request using pieces of ",(0,i.jsx)(n.a,{href:"/doc/docs/middlewares/overview",children:"middleware"})," before forwarding them to your ",(0,i.jsx)(n.a,{href:"/doc/docs/routing/services/",children:"services"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Architecture",src:r(5440).A+"",width:"719",height:"398"})}),"\n",(0,i.jsx)(n.h2,{id:"clear-responsibilities",children:"Clear Responsibilities"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/doc/docs/providers/overview",children:(0,i.jsx)(n.em,{children:"Providers"})})," discover the services that live on your infrastructure (their IP, health, ...)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/doc/docs/routing/entrypoints",children:(0,i.jsx)(n.em,{children:"Entrypoints"})})," listen for incoming traffic (ports, ...)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/doc/docs/routing/routers/",children:(0,i.jsx)(n.em,{children:"Routers"})})," analyse the requests (host, path, headers, SSL, ...)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/doc/docs/routing/services/",children:(0,i.jsx)(n.em,{children:"Services"})})," forward the request to your services (load balancing, ...)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/doc/docs/middlewares/overview",children:(0,i.jsx)(n.em,{children:"Middlewares"})})," may update the request or make decisions based on the request (authentication, rate limiting, headers, ...)"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"example-with-a-file-provider",children:"Example with a File Provider"}),"\n",(0,i.jsxs)(n.p,{children:["Below is an example of a full configuration file for the ",(0,i.jsx)(n.a,{href:"/doc/docs/providers/file",children:"file provider"})," that forwards ",(0,i.jsx)(n.code,{children:"http://example.com/whoami/"})," requests to a service reachable on ",(0,i.jsx)(n.code,{children:"http://private/whoami-service/"}),".\nIn the process, Mesh will make sure that the user is authenticated (using the ",(0,i.jsx)(n.a,{href:"/doc/docs/middlewares/http/basicauth",children:"BasicAuth middleware"}),")."]}),"\n",(0,i.jsx)(n.p,{children:"Static configuration:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"entryPoints:\n  web:\n    # Listen on port 8081 for incoming requests\n    address: :8081\n\nproviders:\n  # Enable the file provider to define routers / middlewares / services in file\n  file:\n    directory: /path/to/dynamic/conf\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[entryPoints]\n  [entryPoints.web]\n    # Listen on port 8081 for incoming requests\n    address = ":8081"\n\n[providers]\n  # Enable the file provider to define routers / middlewares / services in file\n  [providers.file]\n    directory = "/path/to/dynamic/conf"\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"# Listen on port 8081 for incoming requests\n--entryPoints.web.address=:8081\n\n# Enable the file provider to define routers / middlewares / services in file\n--providers.file.directory=/path/to/dynamic/conf\n"})}),"\n",(0,i.jsx)(n.p,{children:"Dynamic configuration:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'tab="YAML"',children:'# http routing section\nhttp:\n  routers:\n    # Define a connection between requests and services\n    to-whoami:\n      rule: "Host(`example.com`) && PathPrefix(`/whoami/`)"\n       # If the rule matches, applies the middleware\n      middlewares:\n      - test-user\n      # If the rule matches, forward to the whoami service (declared below)\n      service: whoami\n\n  middlewares:\n    # Define an authentication mechanism\n    test-user:\n      basicAuth:\n        users:\n        - test:$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/\n\n  services:\n    # Define how to reach an existing service on our infrastructure\n    whoami:\n      loadBalancer:\n        servers:\n        - url: http://private/whoami-service\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",metastring:'tab="TOML"',children:'# http routing section\n[http]\n  [http.routers]\n     # Define a connection between requests and services\n     [http.routers.to-whoami]\n      rule = "Host(`example.com`) && PathPrefix(`/whoami/`)"\n      # If the rule matches, applies the middleware\n      middlewares = ["test-user"]\n      # If the rule matches, forward to the whoami service (declared below)\n      service = "whoami"\n\n  [http.middlewares]\n    # Define an authentication mechanism\n    [http.middlewares.test-user.basicAuth]\n      users = ["test:$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/"]\n\n  [http.services]\n    # Define how to reach an existing service on our infrastructure\n    [http.services.whoami.loadBalancer]\n      [[http.services.whoami.loadBalancer.servers]]\n        url = "http://private/whoami-service"\n'})}),"\n",(0,i.jsx)(n.p,{children:'!!! info ""'}),"\n",(0,i.jsxs)(n.p,{children:["In this example, we use the ",(0,i.jsx)(n.a,{href:"/doc/docs/providers/file",children:"file provider"}),".\nEven if it is one of the least magical way of configuring Mesh, it explicitly describes every available notion."]}),"\n",(0,i.jsx)(n.p,{children:'!!! info "HTTP / TCP"'}),"\n",(0,i.jsxs)(n.p,{children:["In this example, we've defined routing rules for http requests only.\nMesh also supports TCP requests. To add ",(0,i.jsx)(n.a,{href:"/doc/docs/routing/routers/",children:"TCP routers"})," and ",(0,i.jsx)(n.a,{href:"/doc/docs/routing/services/",children:"TCP services"}),", declare them in a TCP section like in the following."]}),"\n",(0,i.jsx)(n.p,{children:'??? example "Adding a TCP route for TLS requests on whoami-tcp.example.com"'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Static Configuration"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"entryPoints:\n  web:\n    # Listen on port 8081 for incoming requests\n    address: :8081\nproviders:\n  # Enable the file provider to define routers / middlewares / services in file\n  file:\n    directory: /path/to/dynamic/conf\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[entryPoints]\n  [entryPoints.web]\n    # Listen on port 8081 for incoming requests\n    address = ":8081"\n\n[providers]\n  # Enable the file provider to define routers / middlewares / services in file\n  [providers.file]\n    directory = "/path/to/dynamic/conf"\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"# Listen on port 8081 for incoming requests\n--entryPoints.web.address=:8081\n\n# Enable the file provider to define routers / middlewares / services in file\n--providers.file.directory=/path/to/dynamic/conf\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Dynamic Configuration"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'tab="YAML"',children:"# http routing section\nhttp:\n\n  routers:\n    # Define a connection between requests and services\n    to-whoami:\n      rule: Host(`example.com`) && PathPrefix(`/whoami/`)\n      # If the rule matches, applies the middleware\n      middlewares:\n      - test-user\n      # If the rule matches, forward to the whoami service (declared below)\n      service: whoami\n\n  middlewares:\n    # Define an authentication mechanism\n    test-user:\n      basicAuth:\n        users:\n        - test:$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/\n\n  services:\n    # Define how to reach an existing service on our infrastructure\n    whoami:\n      loadBalancer:\n        servers:\n        - url: http://private/whoami-service\ntcp:\n\n  routers:\n    to-whoami-tcp:\n      service: whoami-tcp\n      rule: HostSNI(`whoami-tcp.example.com`)\n      tls: {}\n\n  services:\n    whoami-tcp:\n      loadBalancer:\n        servers:\n        - address: xx.xx.xx.xx:xx\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",metastring:'tab="TOML"',children:'# http routing section\n[http]\n  [http.routers]\n    # Define a connection between requests and services\n    [http.routers.to-whoami]\n      rule = "Host(`example.com`) && PathPrefix(`/whoami/`)"\n      # If the rule matches, applies the middleware\n      middlewares = ["test-user"]\n      # If the rule matches, forward to the whoami service (declared below)\n      service = "whoami"\n\n  [http.middlewares]\n     # Define an authentication mechanism\n     [http.middlewares.test-user.basicAuth]\n       users = ["test:$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/"]\n\n  [http.services]\n     # Define how to reach an existing service on our infrastructure\n     [http.services.whoami.loadBalancer]\n       [[http.services.whoami.loadBalancer.servers]]\n         url = "http://private/whoami-service"\n\n[tcp]\n  [tcp.routers]\n    [tcp.routers.to-whoami-tcp]\n      rule = "HostSNI(`whoami-tcp.example.com`)"\n      service = "whoami-tcp"\n      [tcp.routers.to-whoami-tcp.tls]\n\n  [tcp.services]\n    [tcp.services.whoami-tcp.loadBalancer]\n      [[tcp.services.whoami-tcp.loadBalancer.servers]]\n        address = "xx.xx.xx.xx:xx"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"transport-configuration",children:"Transport configuration"}),"\n",(0,i.jsxs)(n.p,{children:["Most of what happens to the connection between the clients and Mesh,\nand then between Mesh and the backend servers, is configured through the\n",(0,i.jsx)(n.a,{href:"../entrypoints",children:"entrypoints"})," and the ",(0,i.jsx)(n.a,{href:"../routers",children:"routers"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["In addition, a few parameters are dedicated to configuring globally\nwhat happens with the connections between Mesh and the backends.\nThis is done through the ",(0,i.jsx)(n.a,{href:"#http-servers-transports",children:(0,i.jsx)(n.code,{children:"serversTransport"})})," and ",(0,i.jsx)(n.a,{href:"#tcp-servers-transports",children:(0,i.jsx)(n.code,{children:"tcpServersTransport"})}),"\nsections of the configuration, which features these options:"]}),"\n",(0,i.jsx)(n.h3,{id:"http-servers-transports",children:"HTTP Servers Transports"}),"\n",(0,i.jsx)(n.h4,{id:"insecureskipverify",children:(0,i.jsx)(n.code,{children:"insecureSkipVerify"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Optional, Default=false"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"insecureSkipVerify"})," disables SSL certificate verification."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"## Static configuration\nserversTransport:\n  insecureSkipVerify: true\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"## Static configuration\n[serversTransport]\n  insecureSkipVerify = true\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--serversTransport.insecureSkipVerify=true\n"})}),"\n",(0,i.jsx)(n.h4,{id:"rootcas",children:(0,i.jsx)(n.code,{children:"rootCAs"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Optional"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"rootCAs"})," is the list of certificates (as file paths, or data bytes)\nthat will be set as Root Certificate Authorities when using a self-signed TLS certificate."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"## Static configuration\nserversTransport:\n  rootCAs:\n    - foo.crt\n    - bar.crt\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[serversTransport]\n  rootCAs = ["foo.crt", "bar.crt"]\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--serversTransport.rootCAs=foo.crt,bar.crt\n"})}),"\n",(0,i.jsx)(n.h4,{id:"maxidleconnsperhost",children:(0,i.jsx)(n.code,{children:"maxIdleConnsPerHost"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Optional, Default=2"})}),"\n",(0,i.jsxs)(n.p,{children:["If non-zero, ",(0,i.jsx)(n.code,{children:"maxIdleConnsPerHost"})," controls the maximum idle (keep-alive) connections to keep per-host."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"## Static configuration\nserversTransport:\n  maxIdleConnsPerHost: 7\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"## Static configuration\n[serversTransport]\n  maxIdleConnsPerHost = 7\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--serversTransport.maxIdleConnsPerHost=7\n"})}),"\n",(0,i.jsx)(n.p,{children:'!!! info "Disable connection reuse"'}),"\n",(0,i.jsxs)(n.p,{children:["The default value of ",(0,i.jsx)(n.code,{children:"maxIdleConnsPerHost"})," is 2, and the zero value is the fallback to the default (2).\nIf you want to disable connection reuse, set ",(0,i.jsx)(n.code,{children:"maxIdleConnsPerHost"})," to -1."]}),"\n",(0,i.jsx)(n.h4,{id:"spiffe",children:(0,i.jsx)(n.code,{children:"spiffe"})}),"\n",(0,i.jsxs)(n.p,{children:["Please note that ",(0,i.jsx)(n.a,{href:"/doc/docs/https/spiffe",children:"SPIFFE"})," must be enabled in the static configuration\nbefore using it to secure the connection between Mesh and the backends."]}),"\n",(0,i.jsx)(n.h4,{id:"spiffeids",children:(0,i.jsx)(n.code,{children:"spiffe.ids"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Optional"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ids"})," defines the allowed SPIFFE IDs.\nThis takes precedence over the SPIFFE TrustDomain."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"## Static configuration\nserversTransport:\n    spiffe:\n      ids:\n        - spiffe://trust-domain/id1\n        - spiffe://trust-domain/id2\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[serversTransport.spiffe]\n  ids = ["spiffe://trust-domain/id1", "spiffe://trust-domain/id2"]\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--serversTransport.spiffe.ids=spiffe://trust-domain/id1,spiffe://trust-domain/id2\n"})}),"\n",(0,i.jsx)(n.h4,{id:"spiffetrustdomain",children:(0,i.jsx)(n.code,{children:"spiffe.trustDomain"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Optional"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"trustDomain"})," defines the allowed SPIFFE trust domain."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"## Static configuration\nserversTransport:\n  trustDomain: spiffe://trust-domain\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[serversTransport.spiffe]\n  trustDomain = "spiffe://trust-domain"\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--serversTransport.spiffe.trustDomain=spiffe://trust-domain\n"})}),"\n",(0,i.jsx)(n.h4,{id:"forwardingtimeouts",children:(0,i.jsx)(n.code,{children:"forwardingTimeouts"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"forwardingTimeouts"})," is about a number of timeouts relevant to when forwarding requests to the backend servers."]}),"\n",(0,i.jsx)(n.h4,{id:"forwardingtimeoutsdialtimeout",children:(0,i.jsx)(n.code,{children:"forwardingTimeouts.dialTimeout"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Optional, Default=30s"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"dialTimeout"})," is the maximum duration allowed for a connection to a backend server to be established.\nZero means no timeout."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"## Static configuration\nserversTransport:\n  forwardingTimeouts:\n    dialTimeout: 1s\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[serversTransport.forwardingTimeouts]\n  dialTimeout = "1s"\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--serversTransport.forwardingTimeouts.dialTimeout=1s\n"})}),"\n",(0,i.jsx)(n.h4,{id:"forwardingtimeoutsresponseheadertimeout",children:(0,i.jsx)(n.code,{children:"forwardingTimeouts.responseHeaderTimeout"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Optional, Default=0s"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"responseHeaderTimeout"}),", if non-zero, specifies the amount of time to wait for a server's response headers\nafter fully writing the request (including its body, if any).\nThis time does not include the time to read the response body.\nZero means no timeout."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"## Static configuration\nserversTransport:\n  forwardingTimeouts:\n    responseHeaderTimeout: 1s\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[serversTransport.forwardingTimeouts]\n  responseHeaderTimeout = "1s"\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--serversTransport.forwardingTimeouts.responseHeaderTimeout=1s\n"})}),"\n",(0,i.jsx)(n.h4,{id:"forwardingtimeoutsidleconntimeout",children:(0,i.jsx)(n.code,{children:"forwardingTimeouts.idleConnTimeout"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Optional, Default=90s"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"idleConnTimeout"}),", is the maximum amount of time an idle (keep-alive) connection\nwill remain idle before closing itself.\nZero means no limit."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"## Static configuration\nserversTransport:\n  forwardingTimeouts:\n    idleConnTimeout: 1s\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[serversTransport.forwardingTimeouts]\n  idleConnTimeout = "1s"\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--serversTransport.forwardingTimeouts.idleConnTimeout=1s\n"})}),"\n",(0,i.jsx)(n.h3,{id:"tcp-servers-transports",children:"TCP Servers Transports"}),"\n",(0,i.jsx)(n.h4,{id:"dialtimeout",children:(0,i.jsx)(n.code,{children:"dialTimeout"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:'Optional, Default="30s"'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"dialTimeout"})," is the maximum duration allowed for a connection to a backend server to be established.\nZero means no timeout."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"## Static configuration\ntcpServersTransport:\n  dialTimeout: 30s\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[tcpServersTransport]\n  dialTimeout = "30s"\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--tcpServersTransport.dialTimeout=30s\n"})}),"\n",(0,i.jsx)(n.h4,{id:"dialkeepalive",children:(0,i.jsx)(n.code,{children:"dialKeepAlive"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:'Optional, Default="15s"'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"dialKeepAlive"})," defines the interval between keep-alive probes sent on an active network connection.\nIf zero, keep-alive probes are sent with a default value (currently 15 seconds), if supported by the protocol and\noperating system. Network protocols or operating systems that do not support keep-alives ignore this field. If negative,\nkeep-alive probes are disabled."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"## Static configuration\ntcpServersTransport:\n  dialKeepAlive: 30s\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[tcpServersTransport]\n  dialKeepAlive = "30s"\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--tcpServersTransport.dialKeepAlive=30s\n"})}),"\n",(0,i.jsx)(n.h4,{id:"tls",children:(0,i.jsx)(n.code,{children:"tls"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"tls"})," defines the TLS configuration to connect with TCP backends."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Optional"})}),"\n",(0,i.jsxs)(n.p,{children:["An empty ",(0,i.jsx)(n.code,{children:"tls"})," section enables TLS."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"## Static configuration\ntcpServersTransport:\n  tls: {}\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"## Static configuration\n[tcpServersTransport.tls]\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--tcpServersTransport.tls=true\n"})}),"\n",(0,i.jsx)(n.h4,{id:"tlsinsecureskipverify",children:(0,i.jsx)(n.code,{children:"tls.insecureSkipVerify"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Optional"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"insecureSkipVerify"})," disables the server's certificate chain and host name verification."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"## Static configuration\ntcpServersTransport:\n  tls:\n    insecureSkipVerify: true\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"## Static configuration\n[tcpServersTransport.tls]\n  insecureSkipVerify = true\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--tcpServersTransport.tls.insecureSkipVerify=true\n"})}),"\n",(0,i.jsx)(n.h4,{id:"tlsrootcas",children:(0,i.jsx)(n.code,{children:"tls.rootCAs"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Optional"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"rootCAs"})," defines the set of Root Certificate Authorities (as file paths, or data bytes)\nto use when verifying self-signed TLS server certificates."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"## Static configuration\ntcpServersTransport:\n  tls:\n    rootCAs:\n      - foo.crt\n      - bar.crt\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[tcpServersTransport.tls]\n  rootCAs = ["foo.crt", "bar.crt"]\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--tcpServersTransport.tls.rootCAs=foo.crt,bar.crt\n"})}),"\n",(0,i.jsx)(n.h4,{id:"spiffe-1",children:(0,i.jsx)(n.code,{children:"spiffe"})}),"\n",(0,i.jsxs)(n.p,{children:["Please note that ",(0,i.jsx)(n.a,{href:"/doc/docs/https/spiffe",children:"SPIFFE"})," must be enabled in the static configuration\nbefore using it to secure the connection between Mesh and the backends."]}),"\n",(0,i.jsx)(n.h4,{id:"spiffeids-1",children:(0,i.jsx)(n.code,{children:"spiffe.ids"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Optional"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ids"})," defines the allowed SPIFFE IDs.\nThis takes precedence over the SPIFFE TrustDomain."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"## Static configuration\ntcpServersTransport:\n    spiffe:\n      ids:\n        - spiffe://trust-domain/id1\n        - spiffe://trust-domain/id2\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[tcpServersTransport.spiffe]\n  ids = ["spiffe://trust-domain/id1", "spiffe://trust-domain/id2"]\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--tcpServersTransport.spiffe.ids=spiffe://trust-domain/id1,spiffe://trust-domain/id2\n"})}),"\n",(0,i.jsx)(n.h4,{id:"spiffetrustdomain-1",children:(0,i.jsx)(n.code,{children:"spiffe.trustDomain"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Optional"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"trustDomain"})," defines the allowed SPIFFE trust domain."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"## Static configuration\ntcpServersTransport:\n  trustDomain: spiffe://trust-domain\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[tcpServersTransport.spiffe]\n  trustDomain = "spiffe://trust-domain"\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--tcpServersTransport.spiffe.trustDomain=spiffe://trust-domain\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},5440:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/architecture-overview-3158549aee80e7d78ffd53edf9c601b5.png"},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var s=r(6540);const i={},t=s.createContext(i);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);