"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[8250],{1651:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"providers/consul-catalog","title":"Consul Catalog Configuration Discovery","description":"Learn how to use Consul Catalog as a provider for configuration discovery in Mesh Proxy. Read the technical documentation.","source":"@site/docs/providers/consul-catalog.md","sourceDirName":"providers","slug":"/providers/consul-catalog","permalink":"/doc/docs/providers/consul-catalog","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/providers/consul-catalog.md","tags":[],"version":"current","frontMatter":{"title":"Consul Catalog Configuration Discovery","description":"Learn how to use Consul Catalog as a provider for configuration discovery in Mesh Proxy. Read the technical documentation."},"sidebar":"tutorialSidebar","previous":{"title":"Mesh Plugins Documentation","permalink":"/doc/docs/plugins/"},"next":{"title":"Mesh Consul Documentation","permalink":"/doc/docs/providers/consul"}}');var t=s(4848),l=s(8453);const r={title:"Consul Catalog Configuration Discovery",description:"Learn how to use Consul Catalog as a provider for configuration discovery in Mesh Proxy. Read the technical documentation."},c="Mesh & Consul Catalog",i={},o=[{value:"Configuration Examples",id:"configuration-examples",level:2},{value:"Routing Configuration",id:"routing-configuration",level:2},{value:"Provider Configuration",id:"provider-configuration",level:2},{value:"<code>refreshInterval</code>",id:"refreshinterval",level:3},{value:"<code>prefix</code>",id:"prefix",level:3},{value:"<code>requireConsistent</code>",id:"requireconsistent",level:3},{value:"<code>stale</code>",id:"stale",level:3},{value:"<code>cache</code>",id:"cache",level:3},{value:"<code>endpoint</code>",id:"endpoint",level:3},{value:"<code>address</code>",id:"address",level:4},{value:"<code>scheme</code>",id:"scheme",level:4},{value:"<code>datacenter</code>",id:"datacenter",level:4},{value:"<code>token</code>",id:"token",level:4},{value:"<code>endpointWaitTime</code>",id:"endpointwaittime",level:4},{value:"<code>httpAuth</code>",id:"httpauth",level:4},{value:"<code>username</code>",id:"username",level:5},{value:"<code>password</code>",id:"password",level:5},{value:"<code>tls</code>",id:"tls",level:4},{value:"<code>ca</code>",id:"ca",level:5},{value:"<code>cert</code>",id:"cert",level:5},{value:"<code>key</code>",id:"key",level:5},{value:"<code>insecureSkipVerify</code>",id:"insecureskipverify",level:5},{value:"<code>exposedByDefault</code>",id:"exposedbydefault",level:3},{value:"<code>defaultRule</code>",id:"defaultrule",level:3},{value:"<code>connectAware</code>",id:"connectaware",level:3},{value:"<code>connectByDefault</code>",id:"connectbydefault",level:3},{value:"<code>serviceName</code>",id:"servicename",level:3},{value:"<code>constraints</code>",id:"constraints",level:3},{value:"<code>namespaces</code>",id:"namespaces",level:3},{value:"<code>strictChecks</code>",id:"strictchecks",level:3},{value:"<code>watch</code>",id:"watch",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",img:"img",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"mesh--consul-catalog",children:"Mesh & Consul Catalog"})}),"\n",(0,t.jsx)(n.p,{children:"A Story of Tags, Services & Instances"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Consul Catalog",src:s(4346).A+"",width:"1017",height:"419"})}),"\n",(0,t.jsx)(n.p,{children:"Attach tags to your services and let Mesh do the rest!"}),"\n",(0,t.jsx)(n.h2,{id:"configuration-examples",children:"Configuration Examples"}),"\n",(0,t.jsx)(n.p,{children:'??? example "Configuring Consul Catalog & Deploying / Exposing Services"'}),"\n",(0,t.jsx)(n.p,{children:"Enabling the consul catalog provider"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog: {}\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.consulCatalog]\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog=true\n"})}),"\n",(0,t.jsx)(n.p,{children:"Attaching tags to services"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"- Mesh.http.routers.my-router.rule=Host(`example.com`)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"routing-configuration",children:"Routing Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["See the dedicated section in ",(0,t.jsx)(n.a,{href:"/doc/docs/routing/providers/consul-catalog",children:"routing"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"provider-configuration",children:"Provider Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"refreshinterval",children:(0,t.jsx)(n.code,{children:"refreshInterval"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional, Default=15s"})}),"\n",(0,t.jsx)(n.p,{children:"Defines the polling interval."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog:\n    refreshInterval: 30s\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.consulCatalog]\n  refreshInterval = "30s"\n  # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.refreshInterval=30s\n# ...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"prefix",children:(0,t.jsx)(n.code,{children:"prefix"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:'required, Default="Mesh"'})}),"\n",(0,t.jsx)(n.p,{children:"The prefix for Consul Catalog tags defining Mesh labels."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog:\n    prefix: test\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.consulCatalog]\n  prefix = "test"\n  # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.prefix=test\n# ...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"requireconsistent",children:(0,t.jsx)(n.code,{children:"requireConsistent"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional, Default=false"})}),"\n",(0,t.jsx)(n.p,{children:"Forces the read to be fully consistent."}),"\n",(0,t.jsx)(n.p,{children:'!!! note ""'}),"\n",(0,t.jsx)(n.p,{children:"It is more expensive due to an extra round-trip but prevents ever performing a stale read."}),"\n",(0,t.jsxs)(n.p,{children:["For more information, see the consul ",(0,t.jsx)(n.a,{href:"https://www.consul.io/api-docs/features/consistency",children:"documentation on consistency"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog:\n    requireConsistent: true\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.consulCatalog]\n  requireConsistent = true\n  # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.requireConsistent=true\n# ...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"stale",children:(0,t.jsx)(n.code,{children:"stale"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional, Default=false"})}),"\n",(0,t.jsx)(n.p,{children:"Use stale consistency for catalog reads."}),"\n",(0,t.jsx)(n.p,{children:'!!! note ""'}),"\n",(0,t.jsx)(n.p,{children:"This makes reads very fast and scalable at the cost of a higher likelihood of stale values."}),"\n",(0,t.jsxs)(n.p,{children:["For more information, see the consul ",(0,t.jsx)(n.a,{href:"https://www.consul.io/api-docs/features/consistency",children:"documentation on consistency"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog:\n    stale: true\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.consulCatalog]\n  stale = true\n  # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.stale=true\n# ...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"cache",children:(0,t.jsx)(n.code,{children:"cache"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional, Default=false"})}),"\n",(0,t.jsx)(n.p,{children:"Use local agent caching for catalog reads."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog:\n    cache: true\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.consulCatalog]\n  cache = true\n  # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.cache=true\n# ...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"endpoint",children:(0,t.jsx)(n.code,{children:"endpoint"})}),"\n",(0,t.jsx)(n.p,{children:"Defines the Consul server endpoint."}),"\n",(0,t.jsx)(n.h4,{id:"address",children:(0,t.jsx)(n.code,{children:"address"})}),"\n",(0,t.jsx)(n.p,{children:"Defines the address of the Consul server."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:'Optional, Default="127.0.0.1:8500"'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog:\n    endpoint:\n      address: 127.0.0.1:8500\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.consulCatalog]\n  [providers.consulCatalog.endpoint]\n    address = "127.0.0.1:8500"\n    # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.endpoint.address=127.0.0.1:8500\n# ...\n"})}),"\n",(0,t.jsx)(n.h4,{id:"scheme",children:(0,t.jsx)(n.code,{children:"scheme"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:'Optional, Default=""'})}),"\n",(0,t.jsx)(n.p,{children:"Defines the URI scheme for the Consul server."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog:\n    endpoint:\n      scheme: https\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.consulCatalog]\n  [providers.consulCatalog.endpoint]\n    scheme = "https"\n    # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.endpoint.scheme=https\n# ...\n"})}),"\n",(0,t.jsx)(n.h4,{id:"datacenter",children:(0,t.jsx)(n.code,{children:"datacenter"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:'Optional, Default=""'})}),"\n",(0,t.jsx)(n.p,{children:"Defines the datacenter to use.\nIf not provided in Mesh, Consul uses the default agent datacenter."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog:\n    endpoint:\n      datacenter: test\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.consulCatalog]\n  [providers.consulCatalog.endpoint]\n    datacenter = "test"\n    # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.endpoint.datacenter=test\n# ...\n"})}),"\n",(0,t.jsx)(n.h4,{id:"token",children:(0,t.jsx)(n.code,{children:"token"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:'Optional, Default=""'})}),"\n",(0,t.jsx)(n.p,{children:"Token is used to provide a per-request ACL token which overwrites the agent's default token."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog:\n    endpoint:\n      token: test\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.consulCatalog]\n  [providers.consulCatalog.endpoint]\n    token = "test"\n    # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.endpoint.token=test\n# ...\n"})}),"\n",(0,t.jsx)(n.h4,{id:"endpointwaittime",children:(0,t.jsx)(n.code,{children:"endpointWaitTime"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:'Optional, Default=""'})}),"\n",(0,t.jsx)(n.p,{children:"Limits the duration for which a Watch can block.\nIf not provided, the agent default values will be used."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog:\n    endpoint:\n      endpointWaitTime: 15s\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.consulCatalog]\n  [providers.consulCatalog.endpoint]\n    endpointWaitTime = "15s"\n    # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.endpoint.endpointwaittime=15s\n# ...\n"})}),"\n",(0,t.jsx)(n.h4,{id:"httpauth",children:(0,t.jsx)(n.code,{children:"httpAuth"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional"})}),"\n",(0,t.jsx)(n.p,{children:"Used to authenticate the HTTP client using HTTP Basic Authentication."}),"\n",(0,t.jsx)(n.h5,{id:"username",children:(0,t.jsx)(n.code,{children:"username"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:'Optional, Default=""'})}),"\n",(0,t.jsx)(n.p,{children:"Username to use for HTTP Basic Authentication."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog:\n    endpoint:\n      httpAuth:\n        username: test\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.consulCatalog.endpoint.httpAuth]\n  username = "test"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.endpoint.httpauth.username=test\n"})}),"\n",(0,t.jsx)(n.h5,{id:"password",children:(0,t.jsx)(n.code,{children:"password"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:'Optional, Default=""'})}),"\n",(0,t.jsx)(n.p,{children:"Password to use for HTTP Basic Authentication."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog:\n    endpoint:\n      httpAuth:\n        password: test\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.consulCatalog.endpoint.httpAuth]\n  password = "test"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.endpoint.httpauth.password=test\n"})}),"\n",(0,t.jsx)(n.h4,{id:"tls",children:(0,t.jsx)(n.code,{children:"tls"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional"})}),"\n",(0,t.jsx)(n.p,{children:"Defines the TLS configuration used for the secure connection to Consul Catalog."}),"\n",(0,t.jsx)(n.h5,{id:"ca",children:(0,t.jsx)(n.code,{children:"ca"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ca"})," is the path to the certificate authority used for the secure connection to Consul Catalog,\nit defaults to the system bundle."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog:\n    endpoint:\n      tls:\n        ca: path/to/ca.crt\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.consulCatalog.endpoint.tls]\n  ca = "path/to/ca.crt"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.endpoint.tls.ca=path/to/ca.crt\n"})}),"\n",(0,t.jsx)(n.h5,{id:"cert",children:(0,t.jsx)(n.code,{children:"cert"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"cert"})," is the path to the public certificate used for the secure connection to Consul Catalog.\nWhen using this option, setting the ",(0,t.jsx)(n.code,{children:"key"})," option is required."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog:\n    endpoint:\n      tls:\n        cert: path/to/foo.cert\n        key: path/to/foo.key\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.consulCatalog.endpoint.tls]\n  cert = "path/to/foo.cert"\n  key = "path/to/foo.key"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.endpoint.tls.cert=path/to/foo.cert\n--providers.consulcatalog.endpoint.tls.key=path/to/foo.key\n"})}),"\n",(0,t.jsx)(n.h5,{id:"key",children:(0,t.jsx)(n.code,{children:"key"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"key"})," is the path to the private key used for the secure connection to Consul Catalog.\nWhen using this option, setting the ",(0,t.jsx)(n.code,{children:"cert"})," option is required."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog:\n    endpoint:\n      tls:\n        cert: path/to/foo.cert\n        key: path/to/foo.key\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.consulCatalog.endpoint.tls]\n  cert = "path/to/foo.cert"\n  key = "path/to/foo.key"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.endpoint.tls.cert=path/to/foo.cert\n--providers.consulcatalog.endpoint.tls.key=path/to/foo.key\n"})}),"\n",(0,t.jsx)(n.h5,{id:"insecureskipverify",children:(0,t.jsx)(n.code,{children:"insecureSkipVerify"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional, Default=false"})}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.code,{children:"insecureSkipVerify"})," is ",(0,t.jsx)(n.code,{children:"true"}),", the TLS connection to Consul accepts any certificate presented by the server regardless of the hostnames it covers."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog:\n    endpoint:\n      tls:\n        insecureSkipVerify: true\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.consulCatalog.endpoint.tls]\n  insecureSkipVerify = true\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.endpoint.tls.insecureskipverify=true\n"})}),"\n",(0,t.jsx)(n.h3,{id:"exposedbydefault",children:(0,t.jsx)(n.code,{children:"exposedByDefault"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional, Default=true"})}),"\n",(0,t.jsxs)(n.p,{children:["Expose Consul Catalog services by default in Mesh.\nIf set to ",(0,t.jsx)(n.code,{children:"false"}),", services that don't have a ",(0,t.jsx)(n.code,{children:"Mesh.enable=true"})," tag will be ignored from the resulting routing configuration."]}),"\n",(0,t.jsxs)(n.p,{children:["For additional information, refer to ",(0,t.jsx)(n.a,{href:"/doc/docs/providers/overview#restrict-the-scope-of-service-discovery",children:"Restrict the Scope of Service Discovery"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog:\n    exposedByDefault: false\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.consulCatalog]\n  exposedByDefault = false\n  # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.exposedByDefault=false\n# ...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"defaultrule",children:(0,t.jsx)(n.code,{children:"defaultRule"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.em,{children:["Optional, Default=",(0,t.jsx)(n.code,{children:"Host(`{{ normalize .Name }}`)"})]})}),"\n",(0,t.jsx)(n.p,{children:"The default host rule for all services."}),"\n",(0,t.jsxs)(n.p,{children:["For a given service, if no routing rule was defined by a tag, it is defined by this ",(0,t.jsx)(n.code,{children:"defaultRule"})," instead.\nThe ",(0,t.jsx)(n.code,{children:"defaultRule"})," must be set to a valid ",(0,t.jsx)(n.a,{href:"https://pkg.go.dev/text/template/",children:"Go template"}),",\nand can include ",(0,t.jsx)(n.a,{href:"https://masterminds.github.io/sprig/",children:"sprig template functions"}),".\nThe service name can be accessed with the ",(0,t.jsx)(n.code,{children:"Name"})," identifier,\nand the template has access to all the labels (i.e. tags beginning with the ",(0,t.jsx)(n.code,{children:"prefix"}),") defined on this service."]}),"\n",(0,t.jsxs)(n.p,{children:["The option can be overridden on an instance basis with the ",(0,t.jsx)(n.code,{children:"Mesh.http.routers.{name-of-your-choice}.rule"})," tag."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'providers:\n  consulCatalog:\n    defaultRule: "Host(`{{ .Name }}.{{ index .Labels \\"customLabel\\"}}`)"\n    # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.consulCatalog]\n  defaultRule = "Host(`{{ .Name }}.{{ index .Labels \\"customLabel\\"}}`)"\n  # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.defaultRule='Host(`{{ .Name }}.{{ index .Labels \"customLabel\"}}`)'\n# ...\n"})}),"\n",(0,t.jsx)(n.p,{children:'??? info "Default rule and Mesh service"'}),"\n",(0,t.jsx)(n.p,{children:"The exposure of the Mesh container, combined with the default rule mechanism,\ncan lead to create a router targeting itself in a loop.\nIn this case, to prevent an infinite loop,\nMesh adds an internal middleware to refuse the request if it comes from the same router."}),"\n",(0,t.jsx)(n.h3,{id:"connectaware",children:(0,t.jsx)(n.code,{children:"connectAware"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional, Default=false"})}),"\n",(0,t.jsxs)(n.p,{children:["Enable Consul Connect support.\nIf set to ",(0,t.jsx)(n.code,{children:"true"}),", Mesh will be enabled to communicate with Connect services."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.consulCatalog]\n  connectAware = true\n  # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog:\n    connectAware: true\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.connectAware=true\n# ...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"connectbydefault",children:(0,t.jsx)(n.code,{children:"connectByDefault"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional, Default=false"})}),"\n",(0,t.jsxs)(n.p,{children:["Consider every service as Connect capable by default.\nIf set to ",(0,t.jsx)(n.code,{children:"true"}),", Mesh will consider every Consul Catalog service to be Connect capable by default.\nThe option can be overridden on an instance basis with the ",(0,t.jsx)(n.code,{children:"Mesh.consulcatalog.connect"})," tag."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.consulCatalog]\n  connectByDefault = true\n  # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog:\n    connectByDefault: true\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.connectByDefault=true\n# ...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"servicename",children:(0,t.jsx)(n.code,{children:"serviceName"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:'Optional, Default="Mesh"'})}),"\n",(0,t.jsx)(n.p,{children:"Name of the Mesh service in Consul Catalog."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.consulCatalog]\n  serviceName = "test"\n  # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog:\n    serviceName: test\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.serviceName=test\n# ...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"constraints",children:(0,t.jsx)(n.code,{children:"constraints"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:'Optional, Default=""'})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"constraints"})," option can be set to an expression that Mesh matches against the service tags to determine whether\nto create any route for that service. If none of the service tags match the expression, no route for that service is\ncreated. If the expression is empty, all detected services are included."]}),"\n",(0,t.jsxs)(n.p,{children:["The expression syntax is based on the ",(0,t.jsx)(n.code,{children:"Tag(`tag`)"}),", and ",(0,t.jsx)(n.code,{children:"TagRegex(`tag`)"})," functions,\nas well as the usual boolean logic, as shown in examples below."]}),"\n",(0,t.jsx)(n.p,{children:'??? example "Constraints Expression Examples"'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'# Includes only services having the tag `a.tag.name=foo`\nconstraints = "Tag(`a.tag.name=foo`)"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'# Excludes services having any tag `a.tag.name=foo`\nconstraints = "!Tag(`a.tag.name=foo`)"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'# With logical AND.\nconstraints = "Tag(`a.tag.name`) && Tag(`another.tag.name`)"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'# With logical OR.\nconstraints = "Tag(`a.tag.name`) || Tag(`another.tag.name`)"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'# With logical AND and OR, with precedence set by parentheses.\nconstraints = "Tag(`a.tag.name`) && (Tag(`another.tag.name`) || Tag(`yet.another.tag.name`))"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'# Includes only services having a tag matching the `a\\.tag\\.t.+` regular expression.\nconstraints = "TagRegex(`a\\.tag\\.t.+`)"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'providers:\n  consulCatalog:\n    constraints: "Tag(`a.tag.name`)"\n    # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.consulCatalog]\n  constraints = "Tag(`a.tag.name`)"\n  # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:'--providers.consulcatalog.constraints="Tag(`a.tag.name`)"\n# ...\n'})}),"\n",(0,t.jsxs)(n.p,{children:["For additional information, refer to ",(0,t.jsx)(n.a,{href:"/doc/docs/providers/overview#restrict-the-scope-of-service-discovery",children:"Restrict the Scope of Service Discovery"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"namespaces",children:(0,t.jsx)(n.code,{children:"namespaces"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:'Optional, Default=""'})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"namespaces"})," option defines the namespaces in which the consul catalog services will be discovered.\nWhen using the ",(0,t.jsx)(n.code,{children:"namespaces"})," option, the discovered configuration object names will be suffixed as shown below:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"<resource-name>@consulcatalog-<namespace>\n"})}),"\n",(0,t.jsx)(n.p,{children:"!!! warning"}),"\n",(0,t.jsxs)(n.p,{children:["The namespaces option only works with ",(0,t.jsx)(n.a,{href:"https://www.consul.io/docs/enterprise",children:"Consul Enterprise"}),",\nwhich provides the ",(0,t.jsx)(n.a,{href:"https://www.consul.io/docs/enterprise/namespaces",children:"Namespaces"})," feature."]}),"\n",(0,t.jsx)(n.p,{children:"!!! warning"}),"\n",(0,t.jsxs)(n.p,{children:["One should only define either the ",(0,t.jsx)(n.code,{children:"namespaces"})," option or the ",(0,t.jsx)(n.code,{children:"namespace"})," option."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'providers:\n  consulCatalog:\n    namespaces: \n      - "ns1"\n      - "ns2"\n    # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.consulCatalog]\n  namespaces = ["ns1", "ns2"]\n  # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.namespaces=ns1,ns2\n# ...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"strictchecks",children:(0,t.jsx)(n.code,{children:"strictChecks"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:'Optional, Default="passing,warning"'})}),"\n",(0,t.jsxs)(n.p,{children:["Define which ",(0,t.jsx)(n.a,{href:"https://developer.hashicorp.com/consul/docs/services/usage/checks#define-initial-health-check-status",children:"Consul Service health checks"})," are allowed to take on traffic."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'providers:\n  consulCatalog:\n    strictChecks: \n      - "passing"\n      - "warning"\n    # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[providers.consulCatalog]\n  strictChecks = ["passing", "warning"]\n  # ...\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.strictChecks=passing,warning\n# ...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"watch",children:(0,t.jsx)(n.code,{children:"watch"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Optional, Default=false"})}),"\n",(0,t.jsxs)(n.p,{children:["When set to ",(0,t.jsx)(n.code,{children:"true"}),", watches for Consul changes (",(0,t.jsx)(n.a,{href:"https://www.consul.io/docs/dynamic-app-config/watches#checks",children:"Consul watches checks"}),")."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"providers:\n  consulCatalog:\n    watch: true\n    # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[providers.consulCatalog]\n  watch = true\n  # ...\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--providers.consulcatalog.watch=true\n# ...\n"})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},4346:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/consul-778f328467d1505a1fea5154d21bbd19.png"},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var a=s(6540);const t={},l=a.createContext(t);function r(e){const n=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(l.Provider,{value:n},e.children)}}}]);