"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[6821],{1730:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/entrypoints-3158549aee80e7d78ffd53edf9c601b5.png"},3917:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"routing/entrypoints","title":"Mesh EntryPoints Documentation","description":"For routing and load balancing in Mesh Proxy, EntryPoints define which port will receive packets and whether in UDP or TCP. Read the technical documentation.","source":"@site/docs/routing/entrypoints.md","sourceDirName":"routing","slug":"/routing/entrypoints","permalink":"/doc/docs/routing/entrypoints","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/routing/entrypoints.md","tags":[],"version":"current","frontMatter":{"title":"Mesh EntryPoints Documentation","description":"For routing and load balancing in Mesh Proxy, EntryPoints define which port will receive packets and whether in UDP or TCP. Read the technical documentation."},"sidebar":"tutorialSidebar","previous":{"title":"\u8def\u7531\u548c\u8d1f\u8f7d\u5747\u8861","permalink":"/doc/docs/category/\u8def\u7531\u548c\u8d1f\u8f7d\u5747\u8861"},"next":{"title":"Routing & Load Balancing Overview |Mesh Docs","permalink":"/doc/docs/routing/overview"}}');var r=t(4848),i=t(8453);const a={title:"Mesh EntryPoints Documentation",description:"For routing and load balancing in Mesh Proxy, EntryPoints define which port will receive packets and whether in UDP or TCP. Read the technical documentation."},o="EntryPoints",d={},l=[{value:"Configuration Examples",id:"configuration-examples",level:2},{value:"Configuration",id:"configuration",level:2},{value:"General",id:"general",level:3},{value:"Address",id:"address",level:3},{value:"AllowACMEByPass",id:"allowacmebypass",level:3},{value:"ReusePort",id:"reuseport",level:3},{value:"AsDefault",id:"asdefault",level:3},{value:"HTTP/2",id:"http2",level:3},{value:"<code>maxConcurrentStreams</code>",id:"maxconcurrentstreams",level:4},{value:"HTTP/3",id:"http3",level:3},{value:"<code>http3</code>",id:"http3-1",level:4},{value:"<code>advertisedPort</code>",id:"advertisedport",level:4},{value:"Forwarded Headers",id:"forwarded-headers",level:3},{value:"Transport",id:"transport",level:3},{value:"<code>respondingTimeouts</code>",id:"respondingtimeouts",level:4},{value:"<code>lifeCycle</code>",id:"lifecycle",level:4},{value:"<code>keepAliveMaxRequests</code>",id:"keepalivemaxrequests",level:4},{value:"<code>keepAliveMaxTime</code>",id:"keepalivemaxtime",level:4},{value:"ProxyProtocol",id:"proxyprotocol",level:3},{value:"HTTP Options",id:"http-options",level:2},{value:"Redirection",id:"redirection",level:3},{value:"<code>entryPoint</code>",id:"entrypoint",level:4},{value:"EncodeQuerySemicolons",id:"encodequerysemicolons",level:3},{value:"Examples",id:"examples",level:4},{value:"SanitizePath",id:"sanitizepath",level:3},{value:"Examples",id:"examples-1",level:4},{value:"Middlewares",id:"middlewares",level:3},{value:"TLS",id:"tls",level:3},{value:"UDP Options",id:"udp-options",level:2},{value:"Timeout",id:"timeout",level:3},{value:"Systemd Socket Activation",id:"systemd-socket-activation",level:2},{value:"Observability Options",id:"observability-options",level:2},{value:"AccessLogs",id:"accesslogs",level:3},{value:"Metrics",id:"metrics",level:3},{value:"Tracing",id:"tracing",level:3}];function c(e){const n={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"entrypoints",children:"EntryPoints"})}),"\n",(0,r.jsx)(n.p,{children:"Opening Connections for Incoming Requests"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"entryPoints",src:t(1730).A+"",width:"719",height:"398"})}),"\n",(0,r.jsx)(n.p,{children:"EntryPoints are the network entry points into Mesh.\nThey define the port which will receive the packets,\nand whether to listen for TCP or UDP."}),"\n",(0,r.jsx)(n.h2,{id:"configuration-examples",children:"Configuration Examples"}),"\n",(0,r.jsx)(n.p,{children:'??? example "Port 80 only"'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\nentryPoints:\n  web:\n   address: ":80"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[entryPoints]\n  [entryPoints.web]\n    address = ":80"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--entryPoints.web.address=:80\n"})}),"\n",(0,r.jsxs)(n.p,{children:["We define an ",(0,r.jsx)(n.code,{children:"entrypoint"})," called ",(0,r.jsx)(n.code,{children:"web"})," that will listen on port ",(0,r.jsx)(n.code,{children:"80"}),"."]}),"\n",(0,r.jsx)(n.p,{children:'??? example "Port 80 & 443"'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\nentryPoints:\n  web:\n    address: ":80"\n\n  websecure:\n    address: ":443"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[entryPoints]\n  [entryPoints.web]\n    address = ":80"\n\n  [entryPoints.websecure]\n    address = ":443"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--entryPoints.web.address=:80\n--entryPoints.websecure.address=:443\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Two entrypoints are defined: one called ",(0,r.jsx)(n.code,{children:"web"}),", and the other called ",(0,r.jsx)(n.code,{children:"websecure"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"web"})," listens on port ",(0,r.jsx)(n.code,{children:"80"}),", and ",(0,r.jsx)(n.code,{children:"websecure"})," on port ",(0,r.jsx)(n.code,{children:"443"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:'??? example "UDP on port 1704"'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\nentryPoints:\n  streaming:\n    address: ":1704/udp"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[entryPoints]\n  [entryPoints.streaming]\n    address = ":1704/udp"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--entryPoints.streaming.address=:1704/udp\n"})}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"general",children:"General"}),"\n",(0,r.jsxs)(n.p,{children:["EntryPoints are part of the ",(0,r.jsx)(n.a,{href:"/doc/docs/getting-started/configuration-overview#the-static-configuration",children:"static configuration"}),".\nThey can be defined by using a file (YAML or TOML) or CLI arguments."]}),"\n",(0,r.jsx)(n.p,{children:'??? info "See the complete reference for the list of available options"'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\nentryPoints:\n  name:\n    address: ":8888" # same as ":8888/tcp"\n    http2:\n      maxConcurrentStreams: 42\n    http3:\n      advertisedPort: 8888\n    transport:\n      lifeCycle:\n        requestAcceptGraceTimeout: 42\n        graceTimeOut: 42\n      respondingTimeouts:\n        readTimeout: 42\n        writeTimeout: 42\n        idleTimeout: 42\n    proxyProtocol:\n      insecure: true\n      trustedIPs:\n        - "127.0.0.1"\n        - "192.168.0.1"\n    forwardedHeaders:\n      insecure: true\n      trustedIPs:\n        - "127.0.0.1"\n        - "192.168.0.1"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[entryPoints]\n  [entryPoints.name]\n    address = ":8888" # same as ":8888/tcp"\n    [entryPoints.name.http2]\n      maxConcurrentStreams = 42\n    [entryPoints.name.http3]\n      advertisedPort = 8888\n    [entryPoints.name.transport]\n      [entryPoints.name.transport.lifeCycle]\n        requestAcceptGraceTimeout = 42\n        graceTimeOut = 42\n      [entryPoints.name.transport.respondingTimeouts]\n        readTimeout = 42\n        writeTimeout = 42\n        idleTimeout = 42\n    [entryPoints.name.proxyProtocol]\n      insecure = true\n      trustedIPs = ["127.0.0.1", "192.168.0.1"]\n    [entryPoints.name.forwardedHeaders]\n      insecure = true\n      trustedIPs = ["127.0.0.1", "192.168.0.1"]\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--entryPoints.name.address=:8888 # same as :8888/tcp\n--entryPoints.name.http2.maxConcurrentStreams=42\n--entryPoints.name.http3.advertisedport=8888\n--entryPoints.name.transport.lifeCycle.requestAcceptGraceTimeout=42\n--entryPoints.name.transport.lifeCycle.graceTimeOut=42\n--entryPoints.name.transport.respondingTimeouts.readTimeout=42\n--entryPoints.name.transport.respondingTimeouts.writeTimeout=42\n--entryPoints.name.transport.respondingTimeouts.idleTimeout=42\n--entryPoints.name.proxyProtocol.insecure=true\n--entryPoints.name.proxyProtocol.trustedIPs=127.0.0.1,192.168.0.1\n--entryPoints.name.forwardedHeaders.insecure=true\n--entryPoints.name.forwardedHeaders.trustedIPs=127.0.0.1,192.168.0.1\n"})}),"\n",(0,r.jsx)(n.h3,{id:"address",children:"Address"}),"\n",(0,r.jsx)(n.p,{children:"The address defines the port, and optionally the hostname, on which to listen for incoming connections and packets.\nIt also defines the protocol to use (TCP or UDP).\nIf no protocol is specified, the default is TCP.\nThe format is:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"[host]:port[/tcp|/udp]\n"})}),"\n",(0,r.jsx)(n.p,{children:"If both TCP and UDP are wanted for the same port, two entryPoints definitions are needed, such as in the example below."}),"\n",(0,r.jsx)(n.p,{children:'??? example "Both TCP and UDP on Port 3179"'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\nentryPoints:\n  tcpep:\n   address: ":3179"\n  udpep:\n   address: ":3179/udp"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[entryPoints]\n  [entryPoints.tcpep]\n    address = ":3179"\n  [entryPoints.udpep]\n    address = ":3179/udp"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--entryPoints.tcpep.address=:3179\n--entryPoints.udpep.address=:3179/udp\n"})}),"\n",(0,r.jsx)(n.p,{children:'??? example "Listen on Specific IP Addresses Only"'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (yaml)"',children:'entryPoints:\n  specificIPv4:\n    address: "192.168.2.7:8888"\n  specificIPv6:\n    address: "[2001:db8::1]:8888"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[entryPoints.specificIPv4]\n  address = "192.168.2.7:8888"\n[entryPoints.specificIPv6]\n  address = "[2001:db8::1]:8888"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.specificIPv4.address=192.168.2.7:8888\n--entryPoints.specificIPv6.address=[2001:db8::1]:8888\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Full details for how to specify ",(0,r.jsx)(n.code,{children:"address"})," can be found in ",(0,r.jsx)(n.a,{href:"https://golang.org/pkg/net/#Listen",children:"net.Listen"})," (and ",(0,r.jsx)(n.a,{href:"https://golang.org/pkg/net/#Dial",children:"net.Dial"}),") of the doc for go."]}),"\n",(0,r.jsx)(n.h3,{id:"allowacmebypass",children:"AllowACMEByPass"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=false"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"allowACMEByPass"})," determines whether a user defined router can handle ACME TLS or HTTP challenges instead of the Mesh dedicated one.\nThis option can be used when a Mesh instance has one or more certificate resolvers configured,\nbut is also used to route challenges connections/requests to services that could also initiate their own ACME challenges."]}),"\n",(0,r.jsx)(n.p,{children:'??? info "No Certificate Resolvers configured"'}),"\n",(0,r.jsx)(n.p,{children:"It is not necessary to use the `allowACMEByPass' option certificate option if no certificate resolver is defined.\nIn fact, Mesh will automatically allow ACME TLS or HTTP requests to be handled by custom routers in this case, since there can be no concurrency with its own challenge handlers."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"entryPoints:\n  foo:\n    allowACMEByPass: true\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[entryPoints.foo]\n  allowACMEByPass = true\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.name.allowACMEByPass=true\n"})}),"\n",(0,r.jsx)(n.h3,{id:"reuseport",children:"ReusePort"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=false"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"ReusePort"})," option enables EntryPoints from the same or different processes\nlistening on the same TCP/UDP port by utilizing the ",(0,r.jsx)(n.code,{children:"SO_REUSEPORT"})," socket option.\nIt also allows the kernel to act like a load balancer to distribute incoming\nconnections between entry points."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, you can use it with the ",(0,r.jsx)(n.a,{href:"#lifecycle",children:"transport.lifeCycle"})," to do\ncanary deployments against Mesh itself. Like upgrading Mesh version or\nreloading the static configuration without any service downtime."]}),"\n",(0,r.jsx)(n.p,{children:'!!! warning "Supported platforms"'}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"ReusePort"})," option currently works only on Linux, FreeBSD, OpenBSD and Darwin.\nIt will be ignored on other platforms."]}),"\n",(0,r.jsxs)(n.p,{children:["There is a known bug in the Linux kernel that may cause unintended TCP connection failures when using the ",(0,r.jsx)(n.code,{children:"ReusePort"})," option.\nFor more details, see ",(0,r.jsx)(n.a,{href:"https://lwn.net/Articles/853637/",children:"https://lwn.net/Articles/853637/"}),"."]}),"\n",(0,r.jsx)(n.p,{children:'??? example "Listen on the same port"'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (yaml)"',children:'entryPoints:\n  web:\n    address: ":80"\n    reusePort: true\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[entryPoints.web]\n  address = ":80"\n  reusePort = true\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.web.address=:80\n--entryPoints.web.reusePort=true\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now it is possible to run multiple Mesh processes with the same EntryPoint configuration."}),"\n",(0,r.jsx)(n.p,{children:'??? example "Listen on the same port but bind to a different host"'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (yaml)"',children:'entryPoints:\n  web:\n    address: ":80"\n    reusePort: true\n  privateWeb:\n    address: "192.168.1.2:80"\n    reusePort: true\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[entryPoints.web]\n  address = ":80"\n  reusePort = true\n[entryPoints.privateWeb]\n  address = "192.168.1.2:80"\n  reusePort = true\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.web.address=:80\n--entryPoints.web.reusePort=true\n--entryPoints.privateWeb.address=192.168.1.2:80\n--entryPoints.privateWeb.reusePort=true\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Requests to ",(0,r.jsx)(n.code,{children:"192.168.1.2:80"})," will only be handled by routers that have ",(0,r.jsx)(n.code,{children:"privateWeb"})," as the entry point."]}),"\n",(0,r.jsx)(n.h3,{id:"asdefault",children:"AsDefault"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=false"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"AsDefault"})," option marks the EntryPoint to be in the list of default EntryPoints.\nEntryPoints in this list are used (by default) on HTTP and TCP routers that do not define their own ",(0,r.jsx)(n.a,{href:"/doc/docs/routing/routers/#entrypoints",children:"EntryPoints option"}),"."]}),"\n",(0,r.jsx)(n.p,{children:'!!! info "List of default EntryPoints"'}),"\n",(0,r.jsxs)(n.p,{children:["If there is no EntryPoint with the ",(0,r.jsx)(n.code,{children:"AsDefault"})," option set to ",(0,r.jsx)(n.code,{children:"true"}),",\nthen the list of default EntryPoints includes all HTTP/TCP EntryPoints."]}),"\n",(0,r.jsxs)(n.p,{children:["If at least one EntryPoint has the ",(0,r.jsx)(n.code,{children:"AsDefault"})," option set to ",(0,r.jsx)(n.code,{children:"true"}),",\nthen the list of default EntryPoints includes only EntryPoints that have the ",(0,r.jsx)(n.code,{children:"AsDefault"})," option set to ",(0,r.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Some built-in EntryPoints are always excluded from the list, namely: ",(0,r.jsx)(n.code,{children:"Mesh"}),"."]}),"\n",(0,r.jsx)(n.p,{children:'!!! warning "Only TCP and HTTP"'}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"AsDefault"})," option has no effect on UDP EntryPoints.\nWhen a UDP router does not define the ",(0,r.jsx)(n.a,{href:"/doc/docs/routing/routers/#entrypoints_2",children:"EntryPoints option"}),",\nit is attached to all available UDP EntryPoints."]}),"\n",(0,r.jsx)(n.p,{children:'??? example "Defining only one EntryPoint as default"'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (yaml)"',children:'entryPoints:\n  web:\n    address: ":80"\n  websecure:\n    address: ":443"\n    asDefault: true\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[entryPoints.web]\n  address = ":80"\n[entryPoints.websecure]\n  address = ":443"\n  asDefault = true\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.web.address=:80\n--entryPoints.websecure.address=:443\n--entryPoints.websecure.asDefault=true\n"})}),"\n",(0,r.jsx)(n.h3,{id:"http2",children:"HTTP/2"}),"\n",(0,r.jsx)(n.h4,{id:"maxconcurrentstreams",children:(0,r.jsx)(n.code,{children:"maxConcurrentStreams"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=250"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"maxConcurrentStreams"})," specifies the number of concurrent streams per connection that each client is allowed to initiate.\nThe ",(0,r.jsx)(n.code,{children:"maxConcurrentStreams"})," value must be greater than zero."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"entryPoints:\n  foo:\n    http2:\n      maxConcurrentStreams: 250\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[entryPoints.foo]\n  [entryPoints.foo.http2]\n    maxConcurrentStreams = 250\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.name.http2.maxConcurrentStreams=250\n"})}),"\n",(0,r.jsx)(n.h3,{id:"http3",children:"HTTP/3"}),"\n",(0,r.jsx)(n.h4,{id:"http3-1",children:(0,r.jsx)(n.code,{children:"http3"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"http3"})," enables HTTP/3 protocol on the entryPoint.\nHTTP/3 requires a TCP entryPoint,\nas HTTP/3 always starts as a TCP connection that then gets upgraded to UDP.\nIn most scenarios,\nthis entryPoint is the same as the one used for TLS traffic."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"entryPoints:\n  name:\n    http3: {}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[entryPoints.name.http3]\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.name.http3\n"})}),"\n",(0,r.jsx)(n.p,{children:'??? info "HTTP/3 uses UDP+TLS"'}),"\n",(0,r.jsx)(n.p,{children:"As HTTP/3 actually uses UDP, when Mesh is configured with a TCP entryPoint on port N with HTTP/3 enabled,\nthe underlying HTTP/3 server that is started automatically listens on UDP port N too. As a consequence,\nit means port N cannot be used by another UDP entryPoint.\nSince HTTP/3 requires the use of TLS,\nonly routers with TLS enabled will be usable with HTTP/3."}),"\n",(0,r.jsx)(n.h4,{id:"advertisedport",children:(0,r.jsx)(n.code,{children:"advertisedPort"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"http3.advertisedPort"})," defines which UDP port to advertise as the HTTP/3 authority.\nIt defaults to the entryPoint's address port.\nIt can be used to override the authority in the ",(0,r.jsx)(n.code,{children:"alt-svc"})," header, for example if the public facing port is different from where Mesh is listening."]}),"\n",(0,r.jsx)(n.p,{children:'!!! info "http3.advertisedPort"'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"entryPoints:\n  name:\n    http3:\n      advertisedPort: 443\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[entryPoints.name.http3]\n  advertisedPort = 443\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.name.http3.advertisedport=443\n"})}),"\n",(0,r.jsx)(n.h3,{id:"forwarded-headers",children:"Forwarded Headers"}),"\n",(0,r.jsxs)(n.p,{children:["You can configure Mesh to trust the forwarded headers information (",(0,r.jsx)(n.code,{children:"X-Forwarded-*"}),")."]}),"\n",(0,r.jsxs)(n.p,{children:['??? info "',(0,r.jsx)(n.code,{children:"forwardedHeaders.trustedIPs"}),'"']}),"\n",(0,r.jsx)(n.p,{children:"Trusting Forwarded Headers from specific IPs."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\nentryPoints:\n  web:\n    address: ":80"\n    forwardedHeaders:\n      trustedIPs:\n        - "127.0.0.1/32"\n        - "192.168.1.7"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[entryPoints]\n  [entryPoints.web]\n    address = ":80"\n\n    [entryPoints.web.forwardedHeaders]\n      trustedIPs = ["127.0.0.1/32", "192.168.1.7"]\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--entryPoints.web.address=:80\n--entryPoints.web.forwardedHeaders.trustedIPs=127.0.0.1/32,192.168.1.7\n"})}),"\n",(0,r.jsxs)(n.p,{children:['??? info "',(0,r.jsx)(n.code,{children:"forwardedHeaders.insecure"}),'"']}),"\n",(0,r.jsx)(n.p,{children:"Insecure Mode (Always Trusting Forwarded Headers)."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\nentryPoints:\n  web:\n    address: ":80"\n    forwardedHeaders:\n      insecure: true\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[entryPoints]\n  [entryPoints.web]\n    address = ":80"\n\n    [entryPoints.web.forwardedHeaders]\n      insecure = true\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--entryPoints.web.address=:80\n--entryPoints.web.forwardedHeaders.insecure\n"})}),"\n",(0,r.jsxs)(n.p,{children:['??? info "',(0,r.jsx)(n.code,{children:"forwardedHeaders.connection"}),'"']}),"\n",(0,r.jsxs)(n.p,{children:["As per RFC7230, Mesh respects the Connection options from the client request.\nBy doing so, it removes any header field(s) listed in the request Connection header and the Connection header field itself when empty.\nThe removal happens as soon as the request is handled by Mesh,\nthus the removed headers are not available when the request passes through the middleware chain.\nThe ",(0,r.jsx)(n.code,{children:"connection"})," option lists the Connection headers allowed to passthrough the middleware chain before their removal."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\nentryPoints:\n  web:\n    address: ":80"\n    forwardedHeaders:\n      connection:\n        - foobar\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[entryPoints]\n  [entryPoints.web]\n    address = ":80"\n\n    [entryPoints.web.forwardedHeaders]\n      connection = ["foobar"]\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--entryPoints.web.address=:80\n--entryPoints.web.forwardedHeaders.connection=foobar\n"})}),"\n",(0,r.jsx)(n.h3,{id:"transport",children:"Transport"}),"\n",(0,r.jsx)(n.h4,{id:"respondingtimeouts",children:(0,r.jsx)(n.code,{children:"respondingTimeouts"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"respondingTimeouts"})," are timeouts for incoming requests to the Mesh instance.\nSetting them has no effect for UDP entryPoints."]}),"\n",(0,r.jsxs)(n.p,{children:['??? info "',(0,r.jsx)(n.code,{children:"transport.respondingTimeouts.readTimeout"}),'"']}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=60s"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"readTimeout"})," is the maximum duration for reading the entire request, including the body."]}),"\n",(0,r.jsxs)(n.p,{children:["If zero, no timeout exists.",(0,r.jsx)(n.br,{}),"\n","Can be provided in a format supported by ",(0,r.jsx)(n.a,{href:"https://golang.org/pkg/time/#ParseDuration",children:"time.ParseDuration"})," or as raw values (digits).\nIf no units are provided, the value is parsed assuming seconds.\nWe strongly suggest adapting this value accordingly to your needs."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\nentryPoints:\n  name:\n    address: ":8888"\n    transport:\n      respondingTimeouts:\n        readTimeout: 42\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[entryPoints]\n  [entryPoints.name]\n    address = ":8888"\n    [entryPoints.name.transport]\n      [entryPoints.name.transport.respondingTimeouts]\n        readTimeout = 42\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--entryPoints.name.address=:8888\n--entryPoints.name.transport.respondingTimeouts.readTimeout=42\n"})}),"\n",(0,r.jsxs)(n.p,{children:['??? info "',(0,r.jsx)(n.code,{children:"transport.respondingTimeouts.writeTimeout"}),'"']}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=0s"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"writeTimeout"})," is the maximum duration before timing out writes of the response."]}),"\n",(0,r.jsxs)(n.p,{children:["It covers the time from the end of the request header read to the end of the response write.\nIf zero, no timeout exists.",(0,r.jsx)(n.br,{}),"\n","Can be provided in a format supported by ",(0,r.jsx)(n.a,{href:"https://golang.org/pkg/time/#ParseDuration",children:"time.ParseDuration"})," or as raw values (digits).\nIf no units are provided, the value is parsed assuming seconds."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\nentryPoints:\n  name:\n    address: ":8888"\n    transport:\n      respondingTimeouts:\n        writeTimeout: 42\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[entryPoints]\n  [entryPoints.name]\n    address = ":8888"\n    [entryPoints.name.transport]\n      [entryPoints.name.transport.respondingTimeouts]\n        writeTimeout = 42\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--entryPoints.name.address=:8888\n--entryPoints.name.transport.respondingTimeouts.writeTimeout=42\n"})}),"\n",(0,r.jsxs)(n.p,{children:['??? info "',(0,r.jsx)(n.code,{children:"transport.respondingTimeouts.idleTimeout"}),'"']}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=180s"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"idleTimeout"})," is the maximum duration an idle (keep-alive) connection will remain idle before closing itself."]}),"\n",(0,r.jsxs)(n.p,{children:["If zero, no timeout exists.",(0,r.jsx)(n.br,{}),"\n","Can be provided in a format supported by ",(0,r.jsx)(n.a,{href:"https://golang.org/pkg/time/#ParseDuration",children:"time.ParseDuration"})," or as raw values (digits).\nIf no units are provided, the value is parsed assuming seconds."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\nentryPoints:\n  name:\n    address: ":8888"\n    transport:\n      respondingTimeouts:\n        idleTimeout: 42\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[entryPoints]\n  [entryPoints.name]\n    address = ":8888"\n    [entryPoints.name.transport]\n      [entryPoints.name.transport.respondingTimeouts]\n        idleTimeout = 42\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--entryPoints.name.address=:8888\n--entryPoints.name.transport.respondingTimeouts.idleTimeout=42\n"})}),"\n",(0,r.jsx)(n.h4,{id:"lifecycle",children:(0,r.jsx)(n.code,{children:"lifeCycle"})}),"\n",(0,r.jsx)(n.p,{children:"Controls the behavior of Mesh during the shutdown phase."}),"\n",(0,r.jsxs)(n.p,{children:['??? info "',(0,r.jsx)(n.code,{children:"lifeCycle.requestAcceptGraceTimeout"}),'"']}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=0s"})}),"\n",(0,r.jsxs)(n.p,{children:["Duration to keep accepting requests prior to initiating the graceful termination period (as defined by the ",(0,r.jsx)(n.code,{children:"graceTimeOut"})," option).\nThis option is meant to give downstream load-balancers sufficient time to take Mesh out of rotation."]}),"\n",(0,r.jsxs)(n.p,{children:["Can be provided in a format supported by ",(0,r.jsx)(n.a,{href:"https://golang.org/pkg/time/#ParseDuration",children:"time.ParseDuration"})," or as raw values (digits)."]}),"\n",(0,r.jsx)(n.p,{children:"If no units are provided, the value is parsed assuming seconds.\nThe zero duration disables the request accepting grace period, i.e., Mesh will immediately proceed to the grace period."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\nentryPoints:\n  name:\n    address: ":8888"\n    transport:\n      lifeCycle:\n        requestAcceptGraceTimeout: 42\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[entryPoints]\n  [entryPoints.name]\n    address = ":8888"\n    [entryPoints.name.transport]\n      [entryPoints.name.transport.lifeCycle]\n        requestAcceptGraceTimeout = 42\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--entryPoints.name.address=:8888\n--entryPoints.name.transport.lifeCycle.requestAcceptGraceTimeout=42\n"})}),"\n",(0,r.jsxs)(n.p,{children:['??? info "',(0,r.jsx)(n.code,{children:"lifeCycle.graceTimeOut"}),'"']}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=10s"})}),"\n",(0,r.jsx)(n.p,{children:"Duration to give active requests a chance to finish before Mesh stops."}),"\n",(0,r.jsxs)(n.p,{children:["Can be provided in a format supported by ",(0,r.jsx)(n.a,{href:"https://golang.org/pkg/time/#ParseDuration",children:"time.ParseDuration"})," or as raw values (digits)."]}),"\n",(0,r.jsx)(n.p,{children:"If no units are provided, the value is parsed assuming seconds."}),"\n",(0,r.jsx)(n.p,{children:'!!! warning "In this time frame no new requests are accepted."'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\nentryPoints:\n  name:\n    address: ":8888"\n    transport:\n      lifeCycle:\n        graceTimeOut: 42\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[entryPoints]\n  [entryPoints.name]\n    address = ":8888"\n    [entryPoints.name.transport]\n      [entryPoints.name.transport.lifeCycle]\n        graceTimeOut = 42\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--entryPoints.name.address=:8888\n--entryPoints.name.transport.lifeCycle.graceTimeOut=42\n"})}),"\n",(0,r.jsx)(n.h4,{id:"keepalivemaxrequests",children:(0,r.jsx)(n.code,{children:"keepAliveMaxRequests"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=0"})}),"\n",(0,r.jsxs)(n.p,{children:["The maximum number of requests Mesh can handle before sending a ",(0,r.jsx)(n.code,{children:"Connection: Close"})," header to the client (for HTTP2, Mesh sends a GOAWAY). Zero means no limit."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\nentryPoints:\n  name:\n    address: ":8888"\n    transport:\n      keepAliveMaxRequests: 42\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[entryPoints]\n  [entryPoints.name]\n    address = ":8888"\n    [entryPoints.name.transport]\n      keepAliveMaxRequests = 42\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--entryPoints.name.address=:8888\n--entryPoints.name.transport.keepAliveMaxRequests=42\n"})}),"\n",(0,r.jsx)(n.h4,{id:"keepalivemaxtime",children:(0,r.jsx)(n.code,{children:"keepAliveMaxTime"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=0s"})}),"\n",(0,r.jsxs)(n.p,{children:["The maximum duration Mesh can handle requests before sending a ",(0,r.jsx)(n.code,{children:"Connection: Close"})," header to the client (for HTTP2, Mesh sends a GOAWAY). Zero means no limit."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\nentryPoints:\n  name:\n    address: ":8888"\n    transport:\n      keepAliveMaxTime: 42s\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[entryPoints]\n  [entryPoints.name]\n    address = ":8888"\n    [entryPoints.name.transport]\n      keepAliveMaxTime = "42s"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"## Static configuration\n--entryPoints.name.address=:8888\n--entryPoints.name.transport.keepAliveMaxTime=42s\n"})}),"\n",(0,r.jsx)(n.h3,{id:"proxyprotocol",children:"ProxyProtocol"}),"\n",(0,r.jsxs)(n.p,{children:["Mesh supports ",(0,r.jsx)(n.a,{href:"https://www.haproxy.org/download/2.0/doc/proxy-protocol.txt",children:"PROXY protocol"})," version 1 and 2."]}),"\n",(0,r.jsx)(n.p,{children:"If PROXY protocol header parsing is enabled for the entry point, this entry point can accept connections with or without PROXY protocol headers."}),"\n",(0,r.jsx)(n.p,{children:"If the PROXY protocol header is passed, then the version is determined automatically."}),"\n",(0,r.jsxs)(n.p,{children:['??? info "',(0,r.jsx)(n.code,{children:"proxyProtocol.trustedIPs"}),'"']}),"\n",(0,r.jsx)(n.p,{children:"Enabling PROXY protocol with Trusted IPs."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\nentryPoints:\n  web:\n    address: ":80"\n    proxyProtocol:\n      trustedIPs:\n        - "127.0.0.1/32"\n        - "192.168.1.7"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[entryPoints]\n  [entryPoints.web]\n    address = ":80"\n\n    [entryPoints.web.proxyProtocol]\n      trustedIPs = ["127.0.0.1/32", "192.168.1.7"]\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.web.address=:80\n--entryPoints.web.proxyProtocol.trustedIPs=127.0.0.1/32,192.168.1.7\n"})}),"\n",(0,r.jsxs)(n.p,{children:["IPs in ",(0,r.jsx)(n.code,{children:"trustedIPs"})," only will lead to remote client address replacement: Declare load-balancer IPs or CIDR range here."]}),"\n",(0,r.jsxs)(n.p,{children:['??? info "',(0,r.jsx)(n.code,{children:"proxyProtocol.insecure"}),'"']}),"\n",(0,r.jsx)(n.p,{children:"Insecure Mode (Testing Environment Only)."}),"\n",(0,r.jsxs)(n.p,{children:["In a test environments, you can configure Mesh to trust every incoming connection.\nDoing so, every remote client address will be replaced (",(0,r.jsx)(n.code,{children:"trustedIPs"})," won't have any effect)"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Static configuration\nentryPoints:\n  web:\n    address: ":80"\n    proxyProtocol:\n      insecure: true\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Static configuration\n[entryPoints]\n  [entryPoints.web]\n    address = ":80"\n\n    [entryPoints.web.proxyProtocol]\n      insecure = true\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.web.address=:80\n--entryPoints.web.proxyProtocol.insecure\n"})}),"\n",(0,r.jsx)(n.p,{children:'!!! warning "Queuing Mesh behind Another Load Balancer"'}),"\n",(0,r.jsx)(n.p,{children:"When queuing Mesh behind another load-balancer, make sure to configure PROXY protocol on both sides.\nNot doing so could introduce a security risk in your system (enabling request forgery)."}),"\n",(0,r.jsx)(n.h2,{id:"http-options",children:"HTTP Options"}),"\n",(0,r.jsx)(n.p,{children:"This whole section is dedicated to options, keyed by entry point, that will apply only to HTTP routing."}),"\n",(0,r.jsx)(n.h3,{id:"redirection",children:"Redirection"}),"\n",(0,r.jsx)(n.p,{children:'??? example "HTTPS redirection (80 to 443)"'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"entryPoints:\n  web:\n    address: :80\n    http:\n      redirections:\n        entryPoint:\n          to: websecure\n          scheme: https\n\n  websecure:\n    address: :443\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[entryPoints.web]\n  address = ":80"\n\n  [entryPoints.web.http]\n    [entryPoints.web.http.redirections]\n      [entryPoints.web.http.redirections.entryPoint]\n        to = "websecure"\n        scheme = "https"\n\n[entryPoints.websecure]\n  address = ":443"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.web.address=:80\n--entryPoints.web.http.redirections.entryPoint.to=websecure\n--entryPoints.web.http.redirections.entryPoint.scheme=https\n--entryPoints.websecure.address=:443\n"})}),"\n",(0,r.jsx)(n.h4,{id:"entrypoint",children:(0,r.jsx)(n.code,{children:"entryPoint"})}),"\n",(0,r.jsxs)(n.p,{children:["This section is a convenience to enable (permanent) redirecting of all incoming requests on an entry point (e.g. port ",(0,r.jsx)(n.code,{children:"80"}),") to another entry point (e.g. port ",(0,r.jsx)(n.code,{children:"443"}),") or an explicit port (",(0,r.jsx)(n.code,{children:":443"}),")."]}),"\n",(0,r.jsxs)(n.p,{children:['??? info "',(0,r.jsx)(n.code,{children:"entryPoint.to"}),'"']}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Required"})}),"\n",(0,r.jsx)(n.p,{children:"The target element, it can be:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["an entry point name (ex: ",(0,r.jsx)(n.code,{children:"websecure"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["a port (",(0,r.jsx)(n.code,{children:":443"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"entryPoints:\n  foo:\n    # ...\n    http:\n      redirections:\n        entryPoint:\n          to: websecure\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[entryPoints.foo]\n  # ...\n  [entryPoints.foo.http.redirections]\n    [entryPoints.foo.http.redirections.entryPoint]\n      to = "websecure"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.foo.http.redirections.entryPoint.to=websecure\n"})}),"\n",(0,r.jsxs)(n.p,{children:['??? info "',(0,r.jsx)(n.code,{children:"entryPoint.scheme"}),'"']}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:'Optional, Default="https"'})}),"\n",(0,r.jsx)(n.p,{children:"The redirection target scheme."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"entryPoints:\n  foo:\n    # ...\n    http:\n      redirections:\n        entryPoint:\n          # ...\n          scheme: https\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[entryPoints.foo]\n  # ...\n  [entryPoints.foo.http.redirections]\n    [entryPoints.foo.http.redirections.entryPoint]\n      # ...\n      scheme = "https"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.foo.http.redirections.entryPoint.scheme=https\n"})}),"\n",(0,r.jsxs)(n.p,{children:['??? info "',(0,r.jsx)(n.code,{children:"entryPoint.permanent"}),'"']}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=true"})}),"\n",(0,r.jsx)(n.p,{children:"To apply a permanent redirection."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"entryPoints:\n  foo:\n    # ...\n    http:\n      redirections:\n        entryPoint:\n          # ...\n          permanent: true\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[entryPoints.foo]\n  # ...\n  [entryPoints.foo.http.redirections]\n    [entryPoints.foo.http.redirections.entryPoint]\n      # ...\n      permanent = true\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.foo.http.redirections.entrypoint.permanent=true\n"})}),"\n",(0,r.jsxs)(n.p,{children:['??? info "',(0,r.jsx)(n.code,{children:"entryPoint.priority"}),'"']}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=MaxInt-1"})}),"\n",(0,r.jsx)(n.p,{children:"Priority of the generated router."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"entryPoints:\n  foo:\n    # ...\n    http:\n      redirections:\n        entryPoint:\n          # ...\n          priority: 10\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[entryPoints.foo]\n  # ...\n  [entryPoints.foo.http.redirections]\n    [entryPoints.foo.http.redirections.entryPoint]\n      # ...\n      priority = 10\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.foo.http.redirections.entrypoint.priority=10\n"})}),"\n",(0,r.jsx)(n.h3,{id:"encodequerysemicolons",children:"EncodeQuerySemicolons"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=false"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"encodeQuerySemicolons"})," option allows to enable query semicolons encoding.\nOne could use this option to avoid non-encoded semicolons to be interpreted as query parameter separators by Mesh.\nWhen using this option, the non-encoded semicolons characters in query will be transmitted encoded to the backend."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"entryPoints:\n  websecure:\n    address: ':443'\n    http:\n      encodeQuerySemicolons: true\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[entryPoints.websecure]\n  address = ":443"\n\n  [entryPoints.websecure.http]\n    encodeQuerySemicolons = true\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.websecure.address=:443\n--entryPoints.websecure.http.encodequerysemicolons=true\n"})}),"\n",(0,r.jsx)(n.h4,{id:"examples",children:"Examples"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"EncodeQuerySemicolons"}),(0,r.jsx)(n.th,{children:"Request Query"}),(0,r.jsx)(n.th,{children:"Resulting Request Query"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"false"}),(0,r.jsx)(n.td,{children:"foo=bar;baz=bar"}),(0,r.jsx)(n.td,{children:"foo=bar&baz=bar"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"true"}),(0,r.jsx)(n.td,{children:"foo=bar;baz=bar"}),(0,r.jsx)(n.td,{children:"foo=bar%3Bbaz=bar"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"false"}),(0,r.jsx)(n.td,{children:"foo=bar&baz=bar;foo"}),(0,r.jsx)(n.td,{children:"foo=bar&baz=bar&foo"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"true"}),(0,r.jsx)(n.td,{children:"foo=bar&baz=bar;foo"}),(0,r.jsx)(n.td,{children:"foo=bar&baz=bar%3Bfoo"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"sanitizepath",children:"SanitizePath"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=true"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"sanitizePath"})," option defines whether to enable the request path sanitization.\nWhen disabled, the incoming request path is passed to the backend as is.\nThis can be useful when dealing with legacy clients that are not url-encoding data in the request path.\nFor example, as base64 uses the \u201c/\u201d character internally,\nif it's not url encoded,\nit can lead to unsafe routing when the ",(0,r.jsx)(n.code,{children:"sanitizePath"})," option is set to ",(0,r.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,r.jsx)(n.p,{children:'!!! warning "Security"'}),"\n",(0,r.jsx)(n.p,{children:"Setting the sanitizePath option to false is not safe.\nEnsure every request is properly url encoded instead."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"entryPoints:\n  websecure:\n    address: ':443'\n    http:\n      sanitizePath: false\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[entryPoints.websecure]\n  address = ":443"\n\n  [entryPoints.websecure.http]\n    sanitizePath = false\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.websecure.address=:443\n--entryPoints.websecure.http.sanitizePath=false\n"})}),"\n",(0,r.jsx)(n.h4,{id:"examples-1",children:"Examples"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"SanitizePath"}),(0,r.jsx)(n.th,{children:"Request Path"}),(0,r.jsx)(n.th,{children:"Resulting Request Path"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"false"}),(0,r.jsx)(n.td,{children:"/./foo/bar"}),(0,r.jsx)(n.td,{children:"/./foo/bar"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"true"}),(0,r.jsx)(n.td,{children:"/./foo/bar"}),(0,r.jsx)(n.td,{children:"/foo/bar"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"false"}),(0,r.jsx)(n.td,{children:"/foo/../bar"}),(0,r.jsx)(n.td,{children:"/foo/../bar"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"true"}),(0,r.jsx)(n.td,{children:"/foo/../bar"}),(0,r.jsx)(n.td,{children:"/bar"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"false"}),(0,r.jsx)(n.td,{children:"/foo/bar//"}),(0,r.jsx)(n.td,{children:"/foo/bar//"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"true"}),(0,r.jsx)(n.td,{children:"/foo/bar//"}),(0,r.jsx)(n.td,{children:"/foo/bar/"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"false"}),(0,r.jsx)(n.td,{children:"/./foo/../bar//"}),(0,r.jsx)(n.td,{children:"/./foo/../bar//"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"true"}),(0,r.jsx)(n.td,{children:"/./foo/../bar//"}),(0,r.jsx)(n.td,{children:"/bar/"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"middlewares",children:"Middlewares"}),"\n",(0,r.jsx)(n.p,{children:"The list of middlewares that are prepended by default to the list of middlewares of each router associated to the named entry point."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"entryPoints:\n  websecure:\n    address: ':443'\n    http:\n      middlewares:\n        - auth@file\n        - strip@file\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[entryPoints.websecure]\n  address = ":443"\n\n  [entryPoints.websecure.http]\n    middlewares = ["auth@file", "strip@file"]\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.websecure.address=:443\n--entryPoints.websecure.http.middlewares=auth@file,strip@file\n"})}),"\n",(0,r.jsx)(n.h3,{id:"tls",children:"TLS"}),"\n",(0,r.jsx)(n.p,{children:"This section is about the default TLS configuration applied to all routers associated with the named entry point."}),"\n",(0,r.jsx)(n.p,{children:"If a TLS section (i.e. any of its fields) is user-defined, then the default configuration does not apply at all."}),"\n",(0,r.jsxs)(n.p,{children:["The TLS section is the same as the ",(0,r.jsx)(n.a,{href:"/doc/docs/routing/routers/#tls",children:"TLS section on HTTP routers"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"entryPoints:\n  websecure:\n    address: ':443'\n    http:\n      tls:\n        options: foobar\n        certResolver: leresolver\n        domains:\n          - main: example.com\n            sans:\n              - foo.example.com\n              - bar.example.com\n          - main: test.com\n            sans:\n              - foo.test.com\n              - bar.test.com\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[entryPoints.websecure]\n  address = ":443"\n\n    [entryPoints.websecure.http.tls]\n      options = "foobar"\n      certResolver = "leresolver"\n      [[entryPoints.websecure.http.tls.domains]]\n        main = "example.com"\n        sans = ["foo.example.com", "bar.example.com"]\n      [[entryPoints.websecure.http.tls.domains]]\n        main = "test.com"\n        sans = ["foo.test.com", "bar.test.com"]\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.websecure.address=:443\n--entryPoints.websecure.http.tls.options=foobar\n--entryPoints.websecure.http.tls.certResolver=leresolver\n--entryPoints.websecure.http.tls.domains[0].main=example.com\n--entryPoints.websecure.http.tls.domains[0].sans=foo.example.com,bar.example.com\n--entryPoints.websecure.http.tls.domains[1].main=test.com\n--entryPoints.websecure.http.tls.domains[1].sans=foo.test.com,bar.test.com\n"})}),"\n",(0,r.jsx)(n.p,{children:'??? example "Let\'s Encrypt"'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"entryPoints:\n  websecure:\n    address: ':443'\n    http:\n      tls:\n        certResolver: leresolver\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[entryPoints.websecure]\n  address = ":443"\n\n    [entryPoints.websecure.http.tls]\n      certResolver = "leresolver"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.websecure.address=:443\n--entryPoints.websecure.http.tls.certResolver=leresolver\n"})}),"\n",(0,r.jsx)(n.h2,{id:"udp-options",children:"UDP Options"}),"\n",(0,r.jsx)(n.p,{children:"This whole section is dedicated to options, keyed by entry point, that will apply only to UDP routing."}),"\n",(0,r.jsx)(n.h3,{id:"timeout",children:"Timeout"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=3s"})}),"\n",(0,r.jsx)(n.p,{children:"Timeout defines how long to wait on an idle session before releasing the related resources.\nThe Timeout value must be greater than zero."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"entryPoints:\n  foo:\n    address: ':8000/udp'\n    udp:\n      timeout: 10s\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[entryPoints.foo]\n  address = ":8000/udp"\n\n    [entryPoints.foo.udp]\n      timeout = "10s"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.foo.address=:8000/udp\n--entryPoints.foo.udp.timeout=10s\n"})}),"\n",(0,r.jsx)(n.h2,{id:"systemd-socket-activation",children:"Systemd Socket Activation"}),"\n",(0,r.jsxs)(n.p,{children:["Mesh supports ",(0,r.jsx)(n.a,{href:"https://www.freedesktop.org/software/systemd/man/latest/systemd-socket-activate.html",children:"systemd socket activation"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"When a socket activation file descriptor name matches an EntryPoint name, the corresponding file descriptor will be used as the TCP/UDP listener for the matching EntryPoint."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"systemd-socket-activate -l 80 -l 443 --fdname web:websecure  ./Mesh --entrypoints.web --entrypoints.websecure\n"})}),"\n",(0,r.jsx)(n.p,{children:'!!! warning "EntryPoint Address"'}),"\n",(0,r.jsx)(n.p,{children:"When a socket activation file descriptor name matches an EntryPoint name its address configuration is ignored. For support UDP routing, address must have /udp suffix (--entrypoints.my-udp-entrypoint.address=/udp)"}),"\n",(0,r.jsx)(n.p,{children:'!!! warning "Docker Support"'}),"\n",(0,r.jsx)(n.p,{children:"Socket activation is not supported by Docker but works with Podman containers."}),"\n",(0,r.jsx)(n.p,{children:'!!! warning "Multiple listeners in socket file"'}),"\n",(0,r.jsx)(n.p,{children:"Each systemd socket file must contain only one Listen directive, except in the case of HTTP/3, where the file must include both ListenStream and ListenDatagram directives. To set up TCP and UDP listeners on the same port, use multiple socket files with different entrypoints names."}),"\n",(0,r.jsx)(n.h2,{id:"observability-options",children:"Observability Options"}),"\n",(0,r.jsx)(n.p,{children:"This section is dedicated to options to control observability for an EntryPoint."}),"\n",(0,r.jsx)(n.p,{children:'!!! info "Note that you must first enable access-logs, tracing, and/or metrics."'}),"\n",(0,r.jsx)(n.p,{children:'!!! warning "AddInternals option"'}),"\n",(0,r.jsxs)(n.p,{children:["By default, and for any type of signals (access-logs, metrics and tracing),\nMesh disables observability for internal resources.\nThe observability options described below cannot interfere with the ",(0,r.jsx)(n.code,{children:"AddInternals"})," ones,\nand will be ignored."]}),"\n",(0,r.jsxs)(n.p,{children:["For instance, if a router exposes the ",(0,r.jsx)(n.code,{children:"api@internal"})," service and ",(0,r.jsx)(n.code,{children:"metrics.AddInternals"})," is false,\nit will never produces metrics, even if the EntryPoint observability configuration enables metrics."]}),"\n",(0,r.jsx)(n.h3,{id:"accesslogs",children:"AccessLogs"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=true"})}),"\n",(0,r.jsx)(n.p,{children:"AccessLogs defines whether a router attached to this EntryPoint produces access-logs by default.\nNonetheless, a router defining its own observability configuration will opt-out from this default."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"entryPoints:\n  foo:\n    address: ':8000/udp'\n    observability:\n      accessLogs: false\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[entryPoints.foo]\n  address = ":8000/udp"\n\n    [entryPoints.foo.observability]\n      accessLogs = false\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.foo.address=:8000/udp\n--entryPoints.foo.observability.accessLogs=false\n"})}),"\n",(0,r.jsx)(n.h3,{id:"metrics",children:"Metrics"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=true"})}),"\n",(0,r.jsx)(n.p,{children:"Metrics defines whether a router attached to this EntryPoint produces metrics by default.\nNonetheless, a router defining its own observability configuration will opt-out from this default."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"entryPoints:\n  foo:\n    address: ':8000/udp'\n    observability:\n      metrics: false\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[entryPoints.foo]\n  address = ":8000/udp"\n\n    [entryPoints.foo.observability]\n      metrics = false\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.foo.address=:8000/udp\n--entryPoints.foo.observability.metrics=false\n"})}),"\n",(0,r.jsx)(n.h3,{id:"tracing",children:"Tracing"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Optional, Default=true"})}),"\n",(0,r.jsx)(n.p,{children:"Tracing defines whether a router attached to this EntryPoint produces traces by default.\nNonetheless, a router defining its own observability configuration will opt-out from this default."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"entryPoints:\n  foo:\n    address: ':8000/udp'\n    observability:\n      tracing: false\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[entryPoints.foo]\n  address = ":8000/udp"\n\n    [entryPoints.foo.observability]\n      tracing = false\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entryPoints.foo.address=:8000/udp\n--entryPoints.foo.observability.tracing=false\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(6540);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);