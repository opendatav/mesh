"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[9171],{8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var r=n(6540);const s={},a=r.createContext(s);function i(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:t},e.children)}},9810:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"https/tailscale","title":"Mesh Tailscale Documentation","description":"Learn how to configure Mesh Proxy to resolve TLS certificates for your Tailscale services. Read the technical documentation.","source":"@site/docs/https/tailscale.md","sourceDirName":"https","slug":"/https/tailscale","permalink":"/doc/docs/https/tailscale","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/https/tailscale.md","tags":[],"version":"current","frontMatter":{"title":"Mesh Tailscale Documentation","description":"Learn how to configure Mesh Proxy to resolve TLS certificates for your Tailscale services. Read the technical documentation."},"sidebar":"tutorialSidebar","previous":{"title":"Mesh SPIFFE Documentation","permalink":"/doc/docs/https/spiffe"},"next":{"title":"Mesh TLS Documentation","permalink":"/doc/docs/https/tls"}}');var s=n(4848),a=n(8453);const i={title:"Mesh Tailscale Documentation",description:"Learn how to configure Mesh Proxy to resolve TLS certificates for your Tailscale services. Read the technical documentation."},o="Tailscale",l={},c=[{value:"Certificate resolvers",id:"certificate-resolvers",level:2},{value:"Domain Definition",id:"domain-definition",level:2},{value:"Configuration Example",id:"configuration-example",level:2},{value:"Automatic Renewals",id:"automatic-renewals",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"tailscale",children:"Tailscale"})}),"\n",(0,s.jsx)(t.p,{children:"Provision TLS certificates for your internal Tailscale services."}),"\n",(0,s.jsxs)(t.p,{children:["To protect a service with TLS, a certificate from a public Certificate Authority is needed.\nIn addition to its vpn role, Tailscale can also ",(0,s.jsx)(t.a,{href:"https://tailscale.com/kb/1153/enabling-https/",children:"provide certificates"})," for the machines in your Tailscale network."]}),"\n",(0,s.jsx)(t.h2,{id:"certificate-resolvers",children:"Certificate resolvers"}),"\n",(0,s.jsx)(t.p,{children:"To obtain a TLS certificate from the Tailscale daemon,\na Tailscale certificate resolver needs to be configured as below."}),"\n",(0,s.jsx)(t.p,{children:'!!! info "Referencing a certificate resolver"'}),"\n",(0,s.jsxs)(t.p,{children:["Defining a certificate resolver does not imply that routers are going to use it automatically.\nEach router or entrypoint that is meant to use the resolver must explicitly ",(0,s.jsx)(t.a,{href:"/doc/docs/routing/routers/#certresolver",children:"reference"})," it."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:"certificatesResolvers:\n    myresolver:\n        tailscale: {}\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:"[certificatesResolvers.myresolver.tailscale]\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'tab="CLI"',children:"--certificatesresolvers.myresolver.tailscale=true\n"})}),"\n",(0,s.jsx)(t.h2,{id:"domain-definition",children:"Domain Definition"}),"\n",(0,s.jsx)(t.p,{children:"A certificate resolver requests certificates for a set of domain names inferred from routers, according to the following:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["If the router has a ",(0,s.jsx)(t.a,{href:"/doc/docs/routing/routers/#domains",children:(0,s.jsx)(t.code,{children:"tls.domains"})})," option set,\nthen the certificate resolver derives this router domain name from the ",(0,s.jsx)(t.code,{children:"main"})," option of ",(0,s.jsx)(t.code,{children:"tls.domains"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Otherwise, the certificate resolver derives the domain name from any ",(0,s.jsx)(t.code,{children:"Host()"})," or ",(0,s.jsx)(t.code,{children:"HostSNI()"})," matchers\nin the ",(0,s.jsx)(t.a,{href:"/doc/docs/routing/routers/#rule",children:"router's rule"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:'!!! info "Tailscale Domain Format"'}),"\n",(0,s.jsxs)(t.p,{children:["The domain is only taken into account if it is a Tailscale-specific one,\ni.e. of the form ",(0,s.jsx)(t.code,{children:"machine-name.domains-alias.ts.net"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"configuration-example",children:"Configuration Example"}),"\n",(0,s.jsx)(t.p,{children:'!!! example "Enabling Tailscale certificate resolution"'}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'entryPoints:\n  web:\n    address: ":80"\n\n  websecure:\n    address: ":443"\n\ncertificatesResolvers:\n  myresolver:\n    tailscale: {}\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'[entryPoints]\n  [entryPoints.web]\n    address = ":80"\n\n  [entryPoints.websecure]\n    address = ":443"\n\n[certificatesResolvers.myresolver.tailscale]\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",metastring:'tab="CLI"',children:"--entrypoints.web.address=:80\n--entrypoints.websecure.address=:443\n# ...\n--certificatesresolvers.myresolver.tailscale=true\n"})}),"\n",(0,s.jsx)(t.p,{children:'!!! example "Domain from Router\'s Rule Example"'}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'tab="Docker & Swarm"',children:"## Dynamic configuration\nlabels:\n  - Mesh.http.routers.blog.rule=Host(`monitoring.yak-bebop.ts.net`) && Path(`/metrics`)\n  - Mesh.http.routers.blog.tls.certresolver=myresolver\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'tab="Docker (Swarm)"',children:"## Dynamic configuration\ndeploy:\n  labels:\n    - Mesh.http.routers.blog.rule=Host(`monitoring.yak-bebop.ts.net`) && Path(`/metrics`)\n    - Mesh.http.routers.blog.tls.certresolver=myresolver\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'tab="Kubernetes"',children:"apiVersion: Mesh.io/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: blogtls\nspec:\n  entryPoints:\n    - websecure\n  routes:\n    - match: Host(`monitoring.yak-bebop.ts.net`) && Path(`/metrics`)\n      kind: Rule\n      services:\n        - name: blog\n          port: 8080\n  tls:\n    certResolver: myresolver\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\nhttp:\n  routers:\n    blog:\n      rule: "Host(`monitoring.yak-bebop.ts.net`) && Path(`/metrics`)"\n      tls:\n        certResolver: myresolver\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[http.routers]\n  [http.routers.blog]\n  rule = "Host(`monitoring.yak-bebop.ts.net`) && Path(`/metrics`)"\n  [http.routers.blog.tls]\n    certResolver = "myresolver"\n'})}),"\n",(0,s.jsx)(t.p,{children:'!!! example "Domain from Router\'s tls.domain Example"'}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'tab="Docker & Swarm"',children:"## Dynamic configuration\nlabels:\n  - Mesh.http.routers.blog.rule=Path(`/metrics`)\n  - Mesh.http.routers.blog.tls.certresolver=myresolver\n  - Mesh.http.routers.blog.tls.domains[0].main=monitoring.yak-bebop.ts.net\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'tab="Docker (Swarm)"',children:"## Dynamic configuration\ndeploy:\n  labels:\n    - Mesh.http.routers.blog.rule=Path(`/metrics`)\n    - Mesh.http.routers.blog.tls.certresolver=myresolver\n    - Mesh.http.routers.blog.tls.domains[0].main=monitoring.yak-bebop.ts.net\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'tab="Kubernetes"',children:"apiVersion: Mesh.io/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: blogtls\nspec:\n  entryPoints:\n    - websecure\n  routes:\n    - match: Path(`/metrics`)\n      kind: Rule\n      services:\n        - name: blog\n          port: 8080\n  tls:\n    certResolver: myresolver\n    domains:\n      - main: monitoring.yak-bebop.ts.net\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'tab="File (YAML)"',children:'## Dynamic configuration\nhttp:\n  routers:\n    blog:\n      rule: "Path(`/metrics`)"\n      tls:\n        certResolver: myresolver\n        domains:\n          - main: "monitoring.yak-bebop.ts.net"\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-toml",metastring:'tab="File (TOML)"',children:'## Dynamic configuration\n[http.routers]\n  [http.routers.blog]\n    rule = "Path(`/metrics`)"\n    [http.routers.blog.tls]\n      certResolver = "myresolver"\n      [[http.routers.blog.tls.domains]]\n        main = "monitoring.yak-bebop.ts.net"\n'})}),"\n",(0,s.jsx)(t.h2,{id:"automatic-renewals",children:"Automatic Renewals"}),"\n",(0,s.jsx)(t.p,{children:"Mesh automatically tracks the expiry date of each Tailscale certificate it fetches,\nand starts to renew a certificate 14 days before its expiry to match Tailscale daemon renew policy."})]})}function m(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);