"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[7977],{4626:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"reference/routing-configuration/tcp/middlewares/ipallowlist","title":"Mesh TCP Middlewares IPAllowList","description":"Learn how to use IPAllowList in TCP middleware for limiting clients to specific IPs in Mesh Proxy. Read the technical documentation.","source":"@site/docs/reference/routing-configuration/tcp/middlewares/ipallowlist.md","sourceDirName":"reference/routing-configuration/tcp/middlewares","slug":"/reference/routing-configuration/tcp/middlewares/ipallowlist","permalink":"/doc/docs/reference/routing-configuration/tcp/middlewares/ipallowlist","draft":false,"unlisted":false,"editUrl":"https://github.com/opendatav/mesh/tree/main/packages/create-docusaurus/templates/shared/docs/reference/routing-configuration/tcp/middlewares/ipallowlist.md","tags":[],"version":"current","frontMatter":{"title":"Mesh TCP Middlewares IPAllowList","description":"Learn how to use IPAllowList in TCP middleware for limiting clients to specific IPs in Mesh Proxy. Read the technical documentation."},"sidebar":"tutorialSidebar","previous":{"title":"Mesh InFlightConn Middleware - TCP","permalink":"/doc/docs/reference/routing-configuration/tcp/middlewares/inflightconn"},"next":{"title":"Mesh Proxy TCP Middleware Overview","permalink":"/doc/docs/reference/routing-configuration/tcp/middlewares/overview"}}');var s=n(4848),r=n(8453);const l={title:"Mesh TCP Middlewares IPAllowList",description:"Learn how to use IPAllowList in TCP middleware for limiting clients to specific IPs in Mesh Proxy. Read the technical documentation."},o=void 0,a={},c=[{value:"Configuration Examples",id:"configuration-examples",level:2},{value:"Configuration Options",id:"configuration-options",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"iPAllowList"})," limits allowed requests based on the client IP."]}),"\n",(0,s.jsx)(t.h2,{id:"configuration-examples",children:"Configuration Examples"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'tab="Structured (YAML)"',children:'# Accepts request from defined IP\ntcp:\n  middlewares:\n    test-ipallowlist:\n      ipAllowList:\n        sourceRange:\n          - "127.0.0.1/32"\n          - "192.168.1.7"\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-toml",metastring:'tab="Structured (TOML)"',children:'# Accepts request from defined IP\n[tcp.middlewares]\n  [tcp.middlewares.test-ipallowlist.ipAllowList]\n    sourceRange = ["127.0.0.1/32", "192.168.1.7"]\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'tab="Labels"',children:'# Accepts connections from defined IP\nlabels:\n  - "Mesh.tcp.middlewares.test-ipallowlist.ipallowlist.sourcerange=127.0.0.1/32, 192.168.1.7"\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",metastring:'tab="Tags"',children:'// Accepts request from defined IP\n{\n  //...\n  "Tags" : [\n    "Mesh.tcp.middlewares.test-ipallowlist.ipallowlist.sourcerange=127.0.0.1/32, 192.168.1.7"s\n  ]\n}\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'tab="Kubernetes"',children:"apiVersion: Mesh.io/v1alpha1\nkind: MiddlewareTCP\nmetadata:\n  name: test-ipallowlist\nspec:\n  ipAllowList:\n    sourceRange:\n      - 127.0.0.1/32\n      - 192.168.1.7\n"})}),"\n",(0,s.jsx)(t.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Field"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,s.jsx)(t.th,{children:"Default"}),(0,s.jsx)(t.th,{children:"Required"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"sourceRange"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(t.code,{children:"sourceRange"})," option sets the allowed IPs (or ranges of allowed IPs by using CIDR notation)."]}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"Yes"})]})})]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>o});var i=n(6540);const s={},r=i.createContext(s);function l(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);