/*
 * Copyright (c) 2019, 2025, firmer.tech and/or its affiliates. All rights reserved.
 * Firmer Corporation PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 *
 */

// Code generated by mesh; DO NOT EDIT.

package orm

import (
	"context"
	"io"

	"git.firmer.tech/firmer/mesh/client/golang/macro"
	"git.firmer.tech/firmer/mesh/client/golang/orm/planner/specs"
)

func init() {
	var x = NewIO()
	macro.Provide[IO](x)
	macro.Provide[specs.SchemaCollector](x)
}

func NewIO() IO {
	return &meshIO{
		edge:         new(meshEdgeDiv),
		kv:           new(meshKvDiv),
		oauth2Client: new(meshOauth2ClientDiv),
		oauth2Token:  new(meshOauth2TokenDiv),
		sequence:     new(meshSequenceDiv),
	}
}

type IO interface {
	io.Closer
	macro.SPI

	// Edge
	Edge() EdgeDao

	// Kv
	Kv() KvDao

	// Oauth2Client
	Oauth2Client() Oauth2ClientDao

	// Oauth2Token
	Oauth2Token() Oauth2TokenDao

	// Sequence
	Sequence() SequenceDao
}

type meshIO struct {
	edge         EdgeDao
	kv           KvDao
	oauth2Client Oauth2ClientDao
	oauth2Token  Oauth2TokenDao
	sequence     SequenceDao
}

func (that *meshIO) Att() *macro.Att {
	return &macro.Att{Name: macro.MeshSPI}
}

func (that *meshIO) Edge() EdgeDao {
	return that.edge
}

func (that *meshIO) Kv() KvDao {
	return that.kv
}

func (that *meshIO) Oauth2Client() Oauth2ClientDao {
	return that.oauth2Client
}

func (that *meshIO) Oauth2Token() Oauth2TokenDao {
	return that.oauth2Token
}

func (that *meshIO) Sequence() SequenceDao {
	return that.sequence
}

func (that *meshIO) Close() error {
	return nil
}

func (that *meshIO) Collect(ctx context.Context) []string {
	return []string{
		"CREATE TABLE IF NOT EXISTS `mesh_kv` (`key` varchar (255) NOT NULL COMMENT '配置KEY', `value` text NOT NULL COMMENT '配置内容', `create_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间', `update_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间', `create_by` varchar (255) NOT NULL DEFAULT '' COMMENT '创建人', `update_by` varchar (255) NOT NULL DEFAULT '' COMMENT '更新人', PRIMARY KEY (`key`)) DEFAULT CHARSET = utf8mb4 COMMENT = 'KV表'",
		"CREATE TABLE IF NOT EXISTS `mesh_seq` (`kind` varchar (255) NOT NULL DEFAULT '' COMMENT '序列号类型', `min` bigint (20) NOT NULL DEFAULT '0' COMMENT '当前范围最小值', `max` bigint (20) NOT NULL DEFAULT '0' COMMENT '当前范围最大值', `size` int (11) NOT NULL DEFAULT '0' COMMENT '每次取号段大小', `length` int (11) NOT NULL DEFAULT '0' COMMENT '序列号长度不足补零', `status` int (11) NOT NULL DEFAULT '0' COMMENT '状态', `version` int (11) NOT NULL DEFAULT '0' COMMENT '乐观锁版本', `create_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间', `update_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间', PRIMARY KEY (`kind`)) DEFAULT CHARSET = utf8mb4 COMMENT = '序列号表'",
		"CREATE TABLE IF NOT EXISTS oauth2_client (`id` VARCHAR (255) NOT NULL COMMENT '客户端ID', `name` VARCHAR (255) NOT NULL COMMENT '客户端名称', `secret` VARCHAR (255) NOT NULL COMMENT '客户端密钥', `domain` VARCHAR (255) NOT NULL COMMENT '客户端域名', `data` TEXT NOT NULL COMMENT '补充数据', PRIMARY KEY (`id`)) DEFAULT CHARSET = utf8 COMMENT = 'OAuth2客户端表'",
		"CREATE TABLE IF NOT EXISTS `edge` (`node_id` varchar (255) NOT NULL DEFAULT '' COMMENT '节点编号', `inst_id` varchar (255) NOT NULL DEFAULT '' COMMENT '机构编号', `inst_name` varchar (255) NOT NULL DEFAULT '' COMMENT '机构名称', `address` varchar (4096) NOT NULL DEFAULT '' COMMENT '节点地址', `describe` varchar (4096) NOT NULL DEFAULT '' COMMENT '节点说明', `certificate` text NOT NULL COMMENT '节点证书', `status` int (11) NOT NULL DEFAULT '0' COMMENT '状态', `version` int (11) NOT NULL DEFAULT '0' COMMENT '乐观锁版本', `auth_code` varchar (4096) NOT NULL DEFAULT '' COMMENT '授权码', `static_ip` varchar (4096) NOT NULL DEFAULT '' COMMENT '静态IP', `public_ip` varchar (4096) NOT NULL DEFAULT '' COMMENT '公网IP', `requests` int NOT NULL DEFAULT '' COMMENT '请求并发限制', `extra` varchar (4096) NOT NULL DEFAULT '' COMMENT '补充信息', `expire_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '过期时间', `create_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间', `update_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间', `create_by` varchar (255) NOT NULL DEFAULT '' COMMENT '创建人', `update_by` varchar (255) NOT NULL DEFAULT '' COMMENT '更新人', `group` varchar (255) NOT NULL DEFAULT '' COMMENT '联盟中心节点机构id-多个用逗号分割', PRIMARY KEY `uk_node_id` (`node_id`), KEY `idx_inst_id` (`inst_id`), KEY `idx_inst_name` (`inst_name`)) ENGINE = InnoDB AUTO_INCREMENT = 10 DEFAULT CHARSET = utf8 COMMENT = '网络节点联通表，两点之间最多一条边'",
		"CREATE TABLE IF NOT EXISTS oauth2_token (`code` VARCHAR (255) NOT NULL COMMENT '授权码', `access` VARCHAR (255) NOT NULL COMMENT '准入TOKEN', `refresh` VARCHAR (255) NOT NULL COMMENT '刷新TOKEN', `data` TEXT NOT NULL COMMENT '补充数据', `create_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间', `expire_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '过期时间', PRIMARY KEY (`code`), KEY `idx_access` (`access`), KEY `idx_refresh` (`refresh`), KEY `idx_expire_at` (`expire_at`)) DEFAULT CHARSET = utf8 COMMENT = 'OAuth2令牌表'",
	}
}
